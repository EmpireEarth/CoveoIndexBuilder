{
    "title" : "Building an OR expression",
    "uri" : "http://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "printableUri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "clickUri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "uniqueId" : "42.4247$http://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "excerpt" : "I've done something similar. ... It creates an OR condition for every value you want to compare. ... The main difference is that instead of creating the LINQ expression directly, it relies on exist...",
    "firstSentences" : null,
    "summary" : null,
    "flags" : "HasHtmlVersion",
    "hasHtmlVersion" : true,
    "hasMobileHtmlVersion" : false,
    "score" : 1120,
    "percentScore" : 75.30528,
    "rankingInfo" : null,
    "rating" : 3.0,
    "isTopResult" : false,
    "isRecommendation" : false,
    "titleHighlights" : [ ],
    "firstSentencesHighlights" : [ ],
    "excerptHighlights" : [ ],
    "printableUriHighlights" : [ ],
    "summaryHighlights" : [ ],
    "parentResult" : null,
    "childResults" : [ ],
    "totalNumberOfChildResults" : 0,
    "raw" : {
      "systitle" : "Building an OR expression",
      "sysauthor" : "aga",
      "sysurihash" : "dSrPGGWfw7RDFWKw",
      "urihash" : "dSrPGGWfw7RDFWKw",
      "numberofanswers" : 1,
      "sysuri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
      "sysprintableuri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
      "sitemappriority" : 0.1,
      "systransactionid" : 160355,
      "questionaskeddatestring" : "·\n            Nov 19, 2015 at 10:49 PM ·",
      "tags" : [ "coveoforsitecore", "rule" ],
      "sysconcepts" : "existing rule ; LINQ expressions ; tree ; stack ; reuse ; scratch ; look ; done",
      "concepts" : "existing rule ; LINQ expressions ; tree ; stack ; reuse ; scratch ; look ; done",
      "printableuri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
      "documenttype" : "WebPage",
      "sysindexeddate" : 1517942385000,
      "permanentid" : "afef523676174748a041c16a51bfe9280e869734458991ca0326cb1157af",
      "syslanguage" : [ "English" ],
      "transactionid" : 160355,
      "title" : "Building an OR expression",
      "date" : 1448236800000,
      "objecttype" : "Answers",
      "sitemapchangefrequency" : "Monthly",
      "answerauthor" : [ "Luc Bergeron" ],
      "hasanswer" : "true",
      "audience" : [ "Administrator", "Developer" ],
      "hasacceptedanswer" : "false",
      "sourcetype" : "Sitemap",
      "sysconnectortype" : "SitemapCrawler",
      "rowid" : 5447927,
      "numberofcomments" : 0,
      "size" : 78564,
      "sysdocumenttype" : "WebPage",
      "questionvotes" : 0,
      "clickableuri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
      "syssource" : "AnswersCloud",
      "orderingid" : 212384744911578226,
      "acceptedanswers" : 0,
      "syssize" : 78564,
      "sysdate" : 1448236800000,
      "author" : "aga",
      "source" : "AnswersCloud",
      "questionbodyhtml" : "<div class=\"question-body\">\n                <p>Hi</p> \n<p>I'm trying to create a Coveo Rule that builds a OR field comparison something like <a rel=\"user\" href=\"/users/5499/fiber-optic-consulting-service.html\" nodeid=\"5499\">@fi</a>eld='a' OR <a rel=\"user\" href=\"/users/5499/fiber-optic-consulting-service.html\" nodeid=\"5499\">@fi</a>eld='b' OR <a rel=\"user\" href=\"/users/5499/fiber-optic-consulting-service.html\" nodeid=\"5499\">@fi</a>eld='a'. The code below with exception \"Unsupported expression node type: Or\"</p> \n<pre><code> public Expression GetQueryExpression(ConditionContext p_Context)\n {\n     String[] seeAll = new String[]{\"a\",\"b\", \"c};\n     Expression init = this.BuildBinaryExpression(new Func<Expression, Expression, Expression>(this.CallExactMatchExtensionMethod), p_Context, seeAll[0]);\n \n     for (int i = 1; i < seeAll.Length; i++)\n     {\n         Expression n = this.BuildBinaryExpression(new Func<Expression, Expression, Expression>(this.CallExactMatchExtensionMethod), p_Context, seeAll[i]);\n \n         init = Expression.Or(init, n);\n     }\n \n     return init;\n }\n \n private Expression BuildBinaryExpression(Func<Expression, Expression, Expression> p_OperatorMethod, ConditionContext p_Context, String val)\n {\n     Expression fieldIndexerExpression = GetFieldIndexerExpression(p_Context.ParameterExpression, FieldName);\n     return p_OperatorMethod(fieldIndexerExpression, Expression.Constant(val));\n }\n \n private Expression CallExactMatchExtensionMethod(Expression p_Field, Expression p_Constant)\n {\n     return Expression.Call(typeof(CoveoQueryableExtensions), \"ExactMatch\", null, new Expression[]\n     {\n         p_Field,\n         p_Constant\n     });\n }\n \n internal static Expression GetFieldIndexerExpression(ParameterExpression p_Instance, string p_FieldName)\n {\n     string name = \"Item\";\n     object[] customAttributes = p_Instance.Type.GetCustomAttributes(typeof(DefaultMemberAttribute), true);\n     if (customAttributes.Any<object>())\n     {\n         name = (customAttributes[0] as DefaultMemberAttribute).MemberName;\n     }\n     PropertyInfo property = p_Instance.Type.GetProperty(name, new Type[]\n     {\n       typeof(string)\n     });\n\n     Assert.IsNotNull(property, \"Could not find the proper indexer. Expecting: string this[string]\");\n     MethodInfo getMethod = property.GetMethod;\n     \n     return Expression.Call(p_Instance, getMethod, new Expression[]\n     {\n       Expression.Constant(p_FieldName)\n     });\n }\n\n</code></pre> \n<p>Error in the page:</p> \n<pre><code> Exception Stack:\n     Line 13:     <script type=\"text/javascript\">    \n     Line 14:         Coveo.$(function() {\n     Line 15:             var searchOptions = <%= Model.GetJavaScriptInitializationOptions() %>;\n     Line 16:             CoveoForSitecore.componentsOptions = Coveo.$.extend({}, CoveoForSitecore.componentsOptions, searchOptions);\n     Line 17:         });\n\n</code></pre> \n<p>LINQ Error:</p> \n<pre><code> [NotSupportedException: Unsupported expression node type: Or]\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.Visit(Expression expression) +715\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.VisitBinary(BinaryExpression expression) +96\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.Visit(Expression expression) +228\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.VisitBinary(BinaryExpression expression) +96\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.Visit(Expression expression) +228\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.VisitBinary(BinaryExpression expression) +96\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.Visit(Expression expression) +228\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.VisitWhereMethod(MethodCallExpression methodCall) +221\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.VisitQueryableMethod(MethodCallExpression methodCall) +1293\n    Coveo.SearchProvider.LinqBase.CoveoExpressionParserBase.VisitMethodCall(MethodCallExpression p_MethodCall) +303\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.Visit(Expression expression) +178\n    Sitecore.ContentSearch.Linq.Parsing.ExpressionParser.Parse(Expression expression) +24\n</code></pre>\n                </div>",
      "sitemaplastmodified" : 1448236800000,
      "collection" : "default",
      "syssourcetype" : "Sitemap",
      "indexeddate" : 1517942385000,
      "questionnumber" : 6699,
      "connectortype" : "SitemapCrawler",
      "filetype" : "html",
      "sysclickableuri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
      "sysfiletype" : "html",
      "language" : [ "English" ],
      "sitemapparenturl" : "http://answers.coveo.com/questions/1.xml",
      "questionauthor" : "aga",
      "sitename" : "Answers",
      "sysrowid" : 5447927,
      "uri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
      "syscollection" : "default",
      "sitelanguage" : [ "English" ]
    },
    "Title" : "Building an OR expression",
    "Uri" : "http://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "PrintableUri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "ClickUri" : "https://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "UniqueId" : "42.4247$http://answers.coveo.com/questions/6699/building-an-or-expression.html",
    "Excerpt" : "I've done something similar. ... It creates an OR condition for every value you want to compare. ... The main difference is that instead of creating the LINQ expression directly, it relies on exist...",
    "FirstSentences" : null
  }