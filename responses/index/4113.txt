{
    "title" : "Custom Filtering Rule Conditions in Sitecore - CoveoIn expression",
    "uri" : "http://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "printableUri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "clickUri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "uniqueId" : "42.4247$http://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "excerpt" : "I am creating custom filtering rule condition that need to check that field value is in a list of allowed values. ... Condition works in general but I am stuck trying to return \"In\" condition or jo...",
    "firstSentences" : null,
    "summary" : null,
    "flags" : "HasHtmlVersion",
    "hasHtmlVersion" : true,
    "hasMobileHtmlVersion" : false,
    "score" : 1210,
    "percentScore" : 78.272484,
    "rankingInfo" : null,
    "rating" : 3.0,
    "isTopResult" : false,
    "isRecommendation" : false,
    "titleHighlights" : [ ],
    "firstSentencesHighlights" : [ ],
    "excerptHighlights" : [ ],
    "printableUriHighlights" : [ ],
    "summaryHighlights" : [ ],
    "parentResult" : null,
    "childResults" : [ ],
    "totalNumberOfChildResults" : 0,
    "raw" : {
      "systitle" : "Custom Filtering Rule Conditions in Sitecore - CoveoIn expression",
      "sysauthor" : "silin",
      "sysurihash" : "lvT23V9oAzHUTItY",
      "urihash" : "lvT23V9oAzHUTItY",
      "numberofanswers" : 1,
      "sysuri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
      "sysprintableuri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
      "sitemappriority" : 0.1,
      "systransactionid" : 160367,
      "questionaskeddatestring" : "·\n            Aug 01, 2017 at 05:10 PM ·",
      "tags" : [ "coveoforsitecore", "sitecore", "filtering" ],
      "sysconcepts" : "CoveoIn ; nested queries ; extension method ; multiple equal ; skeleton ; usage ; documentation ; stuck",
      "concepts" : "CoveoIn ; nested queries ; extension method ; multiple equal ; skeleton ; usage ; documentation ; stuck",
      "printableuri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
      "documenttype" : "WebPage",
      "sysindexeddate" : 1517943267000,
      "permanentid" : "9c64f3045e399ce1f87a09bb2b241fba2847d9574d2c39b749c02e542753",
      "syslanguage" : [ "English" ],
      "transactionid" : 160367,
      "title" : "Custom Filtering Rule Conditions in Sitecore - CoveoIn expression",
      "date" : 1501545600000,
      "objecttype" : "Answers",
      "sitemapchangefrequency" : "Monthly",
      "answerauthor" : [ "Luc Bergeron" ],
      "hasanswer" : "true",
      "audience" : [ "Administrator", "Developer" ],
      "commentauthor" : [ "silin" ],
      "hasacceptedanswer" : "true",
      "sourcetype" : "Sitemap",
      "sysconnectortype" : "SitemapCrawler",
      "rowid" : 5449108,
      "numberofcomments" : 1,
      "size" : 74639,
      "sysdocumenttype" : "WebPage",
      "questionvotes" : 0,
      "clickableuri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
      "syssource" : "AnswersCloud",
      "orderingid" : 212384744911579388,
      "acceptedanswers" : 1,
      "syssize" : 74639,
      "sysdate" : 1501545600000,
      "author" : "silin",
      "source" : "AnswersCloud",
      "questionbodyhtml" : "<div class=\"question-body\">\n                <p>\n<p>I am creating custom filtering rule condition that need to check that field value is in a list of allowed values.</p>\n<p>Condition works in general but I am stuck trying to return \"In\" condition or join multiple equal conditions by \"or\". There is \"CoveoIn\" extension method in CoveoQueryableExtensions class, but I could not find documentation for usage.</p>\n<p>The skeleton of my class is below:</p>\n<pre>public class ValueInListCondition<TContext> : WhenCondition<TContext>, ICoveoCondition<TContext> where TContext : RuleContext\n    {\n        public string FieldName { get; set; }\n        public Expression GetQueryExpression(ConditionContext context)\n        {\n            var allowedValues = GetAllowedValues();\n            Expression readNameProperty = GetFieldIndexerExpression(context.ParameterExpression, FieldName);\n            return Expression.Call(typeof(CoveoQueryableExtensions), \"CoveoIn\", null, new Expression[2]\n            {\n                readNameProperty,\n                //??? - what should be passed here as argumets ???\n            });\n        }\n        public void ValidateCondition(ErrorReport report)\n        {\n        }\n        public RuleCondition<TContext> GetWrappedCondition()\n        {\n            return this;\n        }\n        protected override bool Execute(TContext ruleContext)\n        {\n            return true;\n        }\n        Expression GetFieldIndexerExpression(ParameterExpression p_Instance, string p_FieldName)\n        {\n            string indexerPropertyName = \"Item\";\n            // By default the indexer corresponds to the \"Item\" property, but one can change it.\n            // In order to find the name, if modified, we must search for DefaultMemberAttribute attribute.\n            // Fortunately, only one indexer name can be defined.\n            object[] attributes = p_Instance.Type.GetCustomAttributes(typeof(DefaultMemberAttribute), true);\n            if (attributes.Any())\n            {\n                indexerPropertyName = (attributes[0] as DefaultMemberAttribute).MemberName;\n            }\n            PropertyInfo indexerProperty = p_Instance.Type.GetProperty(indexerPropertyName,\n                                                                       new Type[] { typeof(string) });\n            MethodInfo indexerGetMethod = indexerProperty.GetMethod;\n            Expression callIndexerExpression = Expression.Call(p_Instance,\n                                                               indexerGetMethod,\n                                                               Expression.Constant(p_FieldName));\n            return callIndexerExpression;\n        }\n        private List<string> GetAllowedValues()\n        {\n            return new List<string> { \"123\", \"234\", \"456\" };\n        }\n    }</pre>\n<p>Can someone please help figure out which arguments need to be passed to \"CoveoIn\" expression?</p> \n<p>\n                </div>",
      "sitemaplastmodified" : 1501545600000,
      "collection" : "default",
      "syssourcetype" : "Sitemap",
      "indexeddate" : 1517943267000,
      "questionnumber" : 12306,
      "connectortype" : "SitemapCrawler",
      "filetype" : "html",
      "sysclickableuri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
      "sysfiletype" : "html",
      "language" : [ "English" ],
      "sitemapparenturl" : "http://answers.coveo.com/questions/1.xml",
      "questionauthor" : "silin",
      "sitename" : "Answers",
      "sysrowid" : 5449108,
      "uri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
      "syscollection" : "default",
      "sitelanguage" : [ "English" ]
    },
    "Title" : "Custom Filtering Rule Conditions in Sitecore - CoveoIn expression",
    "Uri" : "http://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "PrintableUri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "ClickUri" : "https://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "UniqueId" : "42.4247$http://answers.coveo.com/questions/12306/custom-filtering-rule-conditions-in-sitecore-coveo.html",
    "Excerpt" : "I am creating custom filtering rule condition that need to check that field value is in a list of allowed values. ... Condition works in general but I am stuck trying to return \"In\" condition or jo...",
    "FirstSentences" : null
  }