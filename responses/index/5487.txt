{
    "title" : "SharePoint Incremental Refresh VS Full Refresh",
    "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
    "printableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
    "clickUri" : "https://na61.salesforce.com/kA1320000008T6Y",
    "uniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
    "excerpt" : "This article explains the difference between a full refresh and an incremental refresh for SharePoint connector. ... This article also explains why you're sometimes getting a time out error during ...",
    "firstSentences" : null,
    "summary" : null,
    "flags" : "HasHtmlVersion",
    "hasHtmlVersion" : true,
    "hasMobileHtmlVersion" : false,
    "score" : 1435,
    "percentScore" : 85.2398,
    "rankingInfo" : null,
    "rating" : 3.0,
    "isTopResult" : false,
    "isRecommendation" : false,
    "titleHighlights" : [ ],
    "firstSentencesHighlights" : [ ],
    "excerptHighlights" : [ ],
    "printableUriHighlights" : [ ],
    "summaryHighlights" : [ ],
    "parentResult" : null,
    "childResults" : [ ],
    "totalNumberOfChildResults" : 0,
    "raw" : {
      "systitle" : "SharePoint Incremental Refresh VS Full Refresh",
      "sysurihash" : "cUHqxzEL6dMWpFHk",
      "urihash" : "cUHqxzEL6dMWpFHk",
      "parents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"SharePoint Incremental Refresh VS Full Refresh\" uri=\"https://na61.salesforce.com/kA1320000008T6Y\" /></parents>",
      "sfdcarticletype" : "How To/Question",
      "sfresolutionc" : "As mentioned <a href=\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/incremental_refresh_vs_full_refresh_vs_rebuild.htm \" target=\"_blank\">here</a><br><br>- An incremental refresh scans and re-indexes content and permissions only for documents identified by the repository as new, modified, or deleted since the last rebuild, full refresh, or incremental refresh <br><br>- A full refresh re-scans all documents from the repository. It re-indexes the permissions of all documents and re-indexes the content only for the ones that are found to be new, modified, or deleted since the last rebuild, full refresh, or incremental refresh. <br><br>Now let&#39;s me go deeper about the incremental refresh: <br><br>Before running an incremental refresh, a full refresh should be performed. Note that its not mandatory, but highly suggested: If the full refresh isn&#39;t completed, documents will be missing in the index, because the incremental refresh only retrieves documents that were updates since the beginning of the full refresh. Thus, if a document was modified just before the full refresh starts, it won&#39;t be indexed by the incremental refresh run. <br><br>When performing a full refresh, the SharePoint crawler will log this entry when the incremental refresh token is ready: The incremental refresh token for the source My Source from collection My Collection is now saved. <br>That means that an incremental refresh run is now possible, even if the full refresh run is stopped. <br><br>The Change Token: <br><br>The change token is a short string used in SharePoint that functions as a bookmark in the stream of changes in a SharePoint instance. This is what allows us to implement incremental refresh easily. <br><br>Once the crawler have completed a first run, we keep the change token returned by the last &quot;GetContent&quot; call. In the future, with this token, we can then retrieve all the changes from the time we finished the first crawl to the current date and time. with the changes response in hand, we only need to parse the modified objects and make the necessary changes in the index. <br><br>Getting the change token: <br><br>The change token is returned from either a &quot;GetContent&quot; request or a &quot;GetChanges&quot; request and represents a bookmark for the date and time the request has ben made. <br>NOTE : To get the change token with a GetContent request, you need to ask for the SiteCollection root. <br><br>Ex: m_SiteDataWs.GetContent(SiteDataWs.ObjectType.SiteCollection, null, null, null, true, false, ref lastItem); <br><br>In order to retrieve all the changes with our change token, we need to call the Web Service method &quot;GetChangesEx&quot;. <br><br><br>You may encountered time out error during incremental refresh but not during full refresh:<br> \n<pre class=\"ckeditor_codeblock\">\n|ERROR|2016-06-06|09:35:20|0|Authentication Failed. Details: Failed to authenticate user svcCoveoMSSharePoint@bose.com to SharePoint: no authentication cookie (FedAuth) was returned. Be sure the user has access to the Site https://bosecorp.sharepoint.com. -&gt; The operation has timed out|||||V2 - ASD SharePoint Site Collections||||ASD5|SUCCESS|||900|10383||</pre>\n<br>The response is: we don&#39;t do the same call to SharePoint WEB service when performing full refresh vs incremental refresh. <br><br>Here are the calls from Incremental refesh: \n<ul><li>GetContent </li><li>GetChanges </li></ul>\n<br>Here are the calls from Full refresh: \n<ul><li>GetListCollection </li><li>GetListItems </li><li>GetList </li><li>GetContent </li><li>GetAttachmentCollection </li><li>GetListItemChanges </li><li>GetPermissionCollection </li></ul>\n<br><br><span style=\"color: #FF0000;\">Note: Here is a recommendation we made to the client following log4net analysis:<br><br>All errors and warnings are mostly caused by a timeout error. They are mostly caused by the authentication process with SharePoint Online when the connectors tries to get its FedAuth cookie. <br><br>According to the Log4Net, some authentication requests are recovered by our default &quot;retryer&quot;. The number of retries is 2 for SharePoint (it&#39;s controlled by the hidden parameter MaxNumberOfRetries). However, in some cases, the retries still fail. <br><br>We suspect some kind of throttling by Microsoft SharePoint Online: </span>\n\n<ul><li><span style=\"color: #FF0000;\">Incremental refresh are more frequent than Full Refresh or Rebuild for example. </span></li><li><span style=\"color: #FF0000;\">All sources used the same crawling account (49 SharePoint Online sources). </span></li><li><span style=\"color: #FF0000;\">Default configuration has been modified, Coveo can have more than 20 concurrent SharePoint running sources. </span></li></ul>\n<br><span style=\"color: #FF0000;\">Since that the next incremental refresh will work for the same source that previously fails, it seems to be a throttling or a SharePoint Online problem. Maybe the fact that the same crawling account asks multiple times a FedAuth cookie in a short period of time is the root cause. <br><br>Our suggestions will be: </span>\n\n<ul><li><span style=\"color: #FF0000;\">Increase the number of retries (use the hidden parameter &quot;MaxNumberOfRetries&quot;) to 3 or a bigger value to see if it can help. </span></li><li><span style=\"color: #FF0000;\">Otherwise, use more crawling accounts and not the same for all source. If not, reduce the concurrency of incremental refreshes if possible. </span></li></ul>\n<br><span style=\"color: #FF0000;\">Unfortunately, the SharePoint Online limitations and the throttling limits are not something very clearly defined: https://msdn.microsoft.com/en-us/library/office/dn889829.aspx. </span><br><br><br><br><br> ",
      "sysuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
      "sysprintableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
      "sflastpublisheddate" : 1482266381000,
      "systransactionid" : 161138,
      "sfversionc" : "CES7",
      "sfurlname" : "1501",
      "sfsystemmodstamp" : 1518004058000,
      "sfisvisibleinapp" : "true",
      "sfcoveoversionc" : "Coveo Enterprise Search 7.0",
      "sysconcepts" : "SharePoint ; re-indexes ; repository ; permissions ; connectors ; change token ; crawling accounts ; hidden parameter ; FedAuth cookie ; GetContent ; MaxNumberOfRetries ; authentication ; SiteDataWs ; SiteCollection ; throttling ; configuration",
      "sfkbversionnumber" : "2",
      "concepts" : "SharePoint ; re-indexes ; repository ; permissions ; connectors ; change token ; crawling accounts ; hidden parameter ; FedAuth cookie ; GetContent ; MaxNumberOfRetries ; authentication ; SiteDataWs ; SiteCollection ; throttling ; configuration",
      "printableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
      "documenttype" : "article",
      "sfkbarticlekavid" : "ka132000000LKCyAAO",
      "sysindexeddate" : 1518187523000,
      "sfknowledgearticleid" : "kA1320000008T6YCAU",
      "sfcreatedbyid" : "00560000002MKBSAA4",
      "sfconnectorc" : "Microsoft SharePoint",
      "permanentid" : "084544392069003c2e088ab873c0e4975c21e772f6cbc90bc34f90c379ec",
      "syslanguage" : [ "English" ],
      "transactionid" : 161138,
      "sfisvisibleinprm" : "true",
      "title" : "SharePoint Incremental Refresh VS Full Refresh",
      "sfversionnumber" : 2,
      "sfarticlenumber" : "000001501",
      "date" : 1518004058000,
      "objecttype" : "KB Article",
      "allmetadatavalues" : "{\"kav_lastmodifiedby.attribute.type\": [\"User\"], \"coveo_short_id\": [\"kA1320000008T6Y\"], \"sflastmodifiedbyname\": [\"Frederic Cote\"], \"kav_coveo_version__c__html_stripped\": [\"Coveo Enterprise Search 7.0\"], \"fileextension\": [\"\"], \"sfdcexpandedproduct\": [\"All;All|Coveo Enterprise Search\"], \"kav_createdby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"sflanguage\": [\"en_US\"], \"kav_createdby.attribute.type\": [\"User\"], \"kav_createdby.id\": [\"00560000002MKBSAA4\"], \"kav_language\": [\"en_US\"], \"sfsitecoreversionc\": [\"N/A\"], \"sourcetype\": [\"Salesforce\"], \"title\": [\"SharePoint Incremental Refresh VS Full Refresh\"], \"source\": [\"Salesforce Public Items\"], \"kav_owner.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"parents\": [\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-16\\\"?><parents><parent name=\\\"Organization\\\" uri=\\\"https://na61.salesforce.com/home/home.jsp\\\" /><parent name=\\\"KB_Article__ka\\\" uri=\\\"http://www.salesforce.com/org:organization/articletype:KB_Article\\\" /><parent name=\\\"SharePoint Incremental Refresh VS Full Refresh\\\" uri=\\\"https://na61.salesforce.com/kA1320000008T6Y\\\" /></parents>\"], \"sfisvisibleinprm\": [true], \"kav_title\": [\"SharePoint Incremental Refresh VS Full Refresh\"], \"kav_isvisibleincsp\": [true], \"hashtmlversion\": [true], \"sfarticletypec\": [\"Question\"], \"kav_version__c\": [\"CES7\"], \"kav_versionnumber\": [2], \"sfcreatedbyname\": [\"Karel Mpungi\"], \"sflastpublisheddate\": [1482266381], \"objecttypelabel\": [\"KB Article\"], \"kav_cause__c__html_stripped\": [\"\"], \"originalhtmlcharset\": [1200], \"coveo_connector_hasbinarydata\": [false], \"kav_lastpublisheddate\": [1482266381], \"sfsystemmodstamp\": [1518004058], \"ka_attribute.type\": [\"KB_Article__ka\"], \"sfdcproduct\": [\"Coveo Enterprise Search\"], \"kav_resolution__c__html_stripped\": [\"As mentioned  here \\n \\n - An incremental refresh scans and re-indexes content and permissions only for documents identified by the repository as new, modified, or deleted since the last rebuild, full refresh, or incremental refresh\\u00a0 \\n \\n - A full refresh re-scans all documents from the repository. It re-indexes the permissions of all documents and re-indexes the content only for the ones that are found to be new, modified, or deleted since the last rebuild, full refresh, or incremental refresh.\\u00a0 \\n \\n Now let's me go deeper about the incremental refresh:\\u00a0 \\n \\n Before running an incremental refresh, a full refresh should be performed. Note that its not mandatory, but highly suggested: If the full refresh isn't completed, documents will be missing in the index, because the incremental refresh only retrieves documents that were updates since the beginning of the full refresh. Thus, if a document was modified just before the full refresh starts, it won't be indexed by the incremental refresh run.\\u00a0 \\n \\n When performing a full refresh, the SharePoint crawler will log this entry when the incremental refresh token is ready: The incremental refresh token for the source My Source from collection My Collection is now saved.\\u00a0 \\n That means that an incremental refresh run is now possible, even if the full refresh run is stopped.\\u00a0 \\n \\n The Change Token:\\u00a0 \\n \\n The change token is a short string used in SharePoint that functions as a bookmark in the stream of changes in a SharePoint instance. This is what allows us to implement incremental refresh easily.\\u00a0 \\n \\n Once the crawler have completed a first run, we keep the change token returned by the last \\\"GetContent\\\" call. In the future, with this token, we can then retrieve all the changes from the time we finished the first crawl to the current date and time. with the changes response in hand, we only need to parse the modified objects and make the necessary changes in the index.\\u00a0 \\n \\n Getting the change token:\\u00a0 \\n \\n The change token is returned from either a \\\"GetContent\\\" request or a \\\"GetChanges\\\" request and represents a bookmark for the date and time the request has ben made.\\u00a0 \\n NOTE : To get the change token with a GetContent request, you need to ask for the SiteCollection root.\\u00a0 \\n \\n Ex: m_SiteDataWs.GetContent(SiteDataWs.ObjectType.SiteCollection, null, null, null, true, false, ref lastItem);\\u00a0 \\n \\n In order to retrieve all the changes with our change token, we need to call the Web Service method \\\"GetChangesEx\\\".\\u00a0 \\n \\n \\n You may encountered time out error during incremental refresh but not during full refresh: \\n \\u00a0\\n \\n|ERROR|2016-06-06|09:35:20|0|Authentication Failed. Details: Failed to authenticate user svcCoveoMSSharePoint@bose.com to SharePoint: no authentication cookie (FedAuth) was returned. Be sure the user has access to the Site https://bosecorp.sharepoint.com. -> The operation has timed out|||||V2 - ASD SharePoint Site Collections||||ASD5|SUCCESS|||900|10383|| \\n \\n The response is: we don't do the same call to SharePoint WEB service when performing full refresh vs incremental refresh.\\u00a0 \\n \\n Here are the calls from Incremental refesh:\\u00a0\\n GetContent\\u00a0 GetChanges\\u00a0 \\n \\n Here are the calls from Full refresh:\\u00a0\\n GetListCollection\\u00a0 GetListItems\\u00a0 GetList\\u00a0 GetContent\\u00a0 GetAttachmentCollection\\u00a0 GetListItemChanges\\u00a0 GetPermissionCollection\\u00a0 \\n \\n \\n Note: Here is a recommendation we made to the client following log4net analysis: \\n \\n All errors and warnings are mostly caused by a timeout error. They are mostly caused by the authentication process with SharePoint Online when the connectors tries to get its FedAuth cookie.\\u00a0 \\n \\n According to the Log4Net, some authentication requests are recovered by our default \\\"retryer\\\". The number of retries is 2 for SharePoint (it's controlled by the hidden parameter MaxNumberOfRetries). However, in some cases, the retries still fail.\\u00a0 \\n \\n We suspect some kind of throttling by Microsoft SharePoint Online:\\u00a0 \\n\\n Incremental refresh are more frequent than Full Refresh or Rebuild for example.\\u00a0 All sources used the same crawling account (49 SharePoint Online sources).\\u00a0 Default configuration has been modified, Coveo can have more than 20 concurrent SharePoint running sources.\\u00a0 \\n \\n Since that the next incremental refresh will work for the same source that previously fails, it seems to be a throttling or a SharePoint Online problem. Maybe the fact that the same crawling account asks multiple times a FedAuth cookie in a short period of time is the root cause.\\u00a0 \\n \\n Our suggestions will be:\\u00a0 \\n\\n Increase the number of retries (use the hidden parameter \\\"MaxNumberOfRetries\\\") to 3 or a bigger value to see if it can help.\\u00a0 Otherwise, use more crawling accounts and not the same for all source. If not, reduce the concurrency of incremental refreshes if possible.\\u00a0 \\n \\n Unfortunately, the SharePoint Online limitations and the throttling limits are not something very clearly defined: https://msdn.microsoft.com/en-us/library/office/dn889829.aspx.\\u00a0 \\n \\n \\n \\n \\n \\u00a0\"], \"clickableuri\": [\"https://na61.salesforce.com/kA1320000008T6Y\"], \"kav_dc_expanded_product\": [\"All;All|Coveo Enterprise Search\"], \"sftitle\": [\"SharePoint Incremental Refresh VS Full Refresh\"], \"kav_owner.id\": [\"00560000002MKBSAA4\"], \"sfbuildc\": [\"All\"], \"sfisvisibleinapp\": [true], \"ka_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__ka/kA1320000008T6YCAU\"], \"sfdcarticletype\": [\"How To/Question\"], \"sfislatestversion\": [true], \"sfarticlenumber\": [\"000001501\"], \"contenttype\": [\"binarydata\"], \"sfurlname\": [\"1501\"], \"ka_id\": [\"kA1320000008T6YCAU\"], \"kav_datacategoryselections.datacategoryname\": [\"Coveo_Enterprise_Search;How_To\"], \"coveo_url\": [\"https://na61.salesforce.com/kA1320000008T6Y\"], \"kav_urlname\": [\"1501\"], \"kav_articletype\": [\"KB_Article__kav\"], \"foldingcollection\": [\"be09c8f35b7aeb49b4fcd083a2d5553b171872fc01a9bbf73c1a521c1dc6\"], \"body\": [\"<html>   <body>     <div style=\\\"background-color: #fff;border: 2px solid #BBC5CC;border-radius: 4px;float: left;font-family: lato;margin-left: 15px;margin-right: 15px;margin-bottom: 4%;padding: 10px;width: 60%;\\\">       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Description         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> This article explains the difference between a full refresh and an incremental refresh for SharePoint connector.<br><br>This article also explains\\u00a0why you&#39;re sometimes getting a time out error during incremental refresh but this is never the case during a full refresh.</div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Environment         </div>       </div>       <br/>       <table>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Product</td>           <td>Coveo Enterprise Search</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Sitecore Version</td>           <td>N/A</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Connector</td>           <td>Microsoft SharePoint</td>         </tr>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Published</td>           <td>1482266381</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Version</td>           <td>CES7</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Build</td>           <td>All</td>         </tr>       </table>       <br/>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Cause         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> </div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Resolution         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> As mentioned <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/incremental_refresh_vs_full_refresh_vs_rebuild.htm\\u00a0\\\" target=\\\"_blank\\\">here</a><br><br>- An incremental refresh scans and re-indexes content and permissions only for documents identified by the repository as new, modified, or deleted since the last rebuild, full refresh, or incremental refresh\\u00a0<br><br>- A full refresh re-scans all documents from the repository. It re-indexes the permissions of all documents and re-indexes the content only for the ones that are found to be new, modified, or deleted since the last rebuild, full refresh, or incremental refresh.\\u00a0<br><br>Now let&#39;s me go deeper about the incremental refresh:\\u00a0<br><br>Before running an incremental refresh, a full refresh should be performed. Note that its not mandatory, but highly suggested: If the full refresh isn&#39;t completed, documents will be missing in the index, because the incremental refresh only retrieves documents that were updates since the beginning of the full refresh. Thus, if a document was modified just before the full refresh starts, it won&#39;t be indexed by the incremental refresh run.\\u00a0<br><br>When performing a full refresh, the SharePoint crawler will log this entry when the incremental refresh token is ready: The incremental refresh token for the source My Source from collection My Collection is now saved.\\u00a0<br>That means that an incremental refresh run is now possible, even if the full refresh run is stopped.\\u00a0<br><br>The Change Token:\\u00a0<br><br>The change token is a short string used in SharePoint that functions as a bookmark in the stream of changes in a SharePoint instance. This is what allows us to implement incremental refresh easily.\\u00a0<br><br>Once the crawler have completed a first run, we keep the change token returned by the last &quot;GetContent&quot; call. In the future, with this token, we can then retrieve all the changes from the time we finished the first crawl to the current date and time. with the changes response in hand, we only need to parse the modified objects and make the necessary changes in the index.\\u00a0<br><br>Getting the change token:\\u00a0<br><br>The change token is returned from either a &quot;GetContent&quot; request or a &quot;GetChanges&quot; request and represents a bookmark for the date and time the request has ben made.\\u00a0<br>NOTE : To get the change token with a GetContent request, you need to ask for the SiteCollection root.\\u00a0<br><br>Ex: m_SiteDataWs.GetContent(SiteDataWs.ObjectType.SiteCollection, null, null, null, true, false, ref lastItem);\\u00a0<br><br>In order to retrieve all the changes with our change token, we need to call the Web Service method &quot;GetChangesEx&quot;.\\u00a0<br><br><br>You may encountered time out error during incremental refresh but not during full refresh:<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n|ERROR|2016-06-06|09:35:20|0|Authentication Failed. Details: Failed to authenticate user svcCoveoMSSharePoint@bose.com to SharePoint: no authentication cookie (FedAuth) was returned. Be sure the user has access to the Site https://bosecorp.sharepoint.com. -&gt; The operation has timed out|||||V2 - ASD SharePoint Site Collections||||ASD5|SUCCESS|||900|10383||</pre>\\n<br>The response is: we don&#39;t do the same call to SharePoint WEB service when performing full refresh vs incremental refresh.\\u00a0<br><br>Here are the calls from Incremental refesh:\\u00a0\\n<ul><li>GetContent\\u00a0</li><li>GetChanges\\u00a0</li></ul>\\n<br>Here are the calls from Full refresh:\\u00a0\\n<ul><li>GetListCollection\\u00a0</li><li>GetListItems\\u00a0</li><li>GetList\\u00a0</li><li>GetContent\\u00a0</li><li>GetAttachmentCollection\\u00a0</li><li>GetListItemChanges\\u00a0</li><li>GetPermissionCollection\\u00a0</li></ul>\\n<br><br><span style=\\\"color: #FF0000;\\\">Note: Here is a recommendation we made to the client following log4net analysis:<br><br>All errors and warnings are mostly caused by a timeout error. They are mostly caused by the authentication process with SharePoint Online when the connectors tries to get its FedAuth cookie.\\u00a0<br><br>According to the Log4Net, some authentication requests are recovered by our default &quot;retryer&quot;. The number of retries is 2 for SharePoint (it&#39;s controlled by the hidden parameter MaxNumberOfRetries). However, in some cases, the retries still fail.\\u00a0<br><br>We suspect some kind of throttling by Microsoft SharePoint Online:\\u00a0</span>\\n\\n<ul><li><span style=\\\"color: #FF0000;\\\">Incremental refresh are more frequent than Full Refresh or Rebuild for example.\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">All sources used the same crawling account (49 SharePoint Online sources).\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">Default configuration has been modified, Coveo can have more than 20 concurrent SharePoint running sources.\\u00a0</span></li></ul>\\n<br><span style=\\\"color: #FF0000;\\\">Since that the next incremental refresh will work for the same source that previously fails, it seems to be a throttling or a SharePoint Online problem. Maybe the fact that the same crawling account asks multiple times a FedAuth cookie in a short period of time is the root cause.\\u00a0<br><br>Our suggestions will be:\\u00a0</span>\\n\\n<ul><li><span style=\\\"color: #FF0000;\\\">Increase the number of retries (use the hidden parameter &quot;MaxNumberOfRetries&quot;) to 3 or a bigger value to see if it can help.\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">Otherwise, use more crawling accounts and not the same for all source. If not, reduce the concurrency of incremental refreshes if possible.\\u00a0</span></li></ul>\\n<br><span style=\\\"color: #FF0000;\\\">Unfortunately, the SharePoint Online limitations and the throttling limits are not something very clearly defined: https://msdn.microsoft.com/en-us/library/office/dn889829.aspx.\\u00a0</span><br><br><br><br><br>\\u00a0</div>     </div>   </body> </html>\"], \"kav_product__c\": [\"Coveo Enterprise Search\"], \"kav_article_type__c\": [\"Question\"], \"sfpublishstatus\": [\"Online\"], \"sfcreatedbyid\": [\"00560000002MKBSAA4\"], \"kav_description__c__html_stripped\": [\"This article explains the difference between a full refresh and an incremental refresh for SharePoint connector. \\n \\n This article also explains\\u00a0why you're sometimes getting a time out error during incremental refresh but this is never the case during a full refresh.\"], \"kav_islatestversion\": [true], \"kav_knowledgearticleid\": [\"kA1320000008T6YCAU\"], \"sfknowledgearticleid\": [\"kA1320000008T6YCAU\"], \"sfownername\": [\"Karel Mpungi\"], \"kav_datacategoryselections.attribute.type\": [\"KB_Article__DataCategorySelection;KB_Article__DataCategorySelection\"], \"detectedtitle\": [\"Description\"], \"kav_createddate\": [1482266203], \"kav_build__c\": [\"All\"], \"language\": [\"English\"], \"coveo_foldingchild\": [\"c180d986cee6a7f75eaa74550d347954655f58f9de2f6408f67b31919e0a\"], \"sfownerid\": [\"00560000002MKBSAA4\"], \"kav_createdby.coveo_record_size\": [2], \"kav_systemmodstamp\": [1518004058], \"objecttype\": [\"KB Article\"], \"connectortype\": [\"Salesforce2\"], \"kav_coveo_record_size\": [4], \"originaluri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US\"], \"sfisvisibleincsp\": [true], \"convertertype\": [\"TYPE_HTML\"], \"filetype\": [\"SalesforceItem\"], \"kav_owner.name\": [\"Karel Mpungi\"], \"sfcoveoversionc\": [\"Coveo Enterprise Search 7.0\"], \"sfdcexpandedarticletype\": [\"All;All|How To/Question\"], \"objecttypelabelplural\": [\"KB Articles\"], \"sfcurrencyisocode\": [\"USD\"], \"sfisdeleted\": [false], \"extractedsize\": [10666], \"size\": [13544], \"kav_publishstatus\": [\"Online\"], \"kav_connector__c\": [\"Microsoft SharePoint\"], \"generateexcerpt\": [true], \"sfdescriptionc\": [\"This article explains the difference between a full refresh and an incremental refresh for SharePoint connector.<br><br>This article also explains\\u00a0why you&#39;re sometimes getting a time out error during incremental refresh but this is never the case during a full refresh.\"], \"sfarticletype\": [\"KB_Article__kav\"], \"kav_lastmodifieddate\": [1482266381], \"documenttype\": [\"article\"], \"sfkbarticlekavid\": [\"ka132000000LKCyAAO\"], \"kav_currencyisocode\": [\"USD\"], \"sfproductc\": [\"Coveo Enterprise Search\"], \"foldingparent\": [\"c180d986cee6a7f75eaa74550d347954655f58f9de2f6408f67b31919e0a\"], \"mappingtype\": [\"KB_Article\"], \"kav_isvisibleinpkb\": [true], \"kav_sourceid\": [\"50032000011E1BfAAK\"], \"sfkbversionnumber\": [2], \"kav_isvisibleinapp\": [true], \"kav_resolution__c\": [\"As mentioned <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/incremental_refresh_vs_full_refresh_vs_rebuild.htm\\u00a0\\\" target=\\\"_blank\\\">here</a><br><br>- An incremental refresh scans and re-indexes content and permissions only for documents identified by the repository as new, modified, or deleted since the last rebuild, full refresh, or incremental refresh\\u00a0<br><br>- A full refresh re-scans all documents from the repository. It re-indexes the permissions of all documents and re-indexes the content only for the ones that are found to be new, modified, or deleted since the last rebuild, full refresh, or incremental refresh.\\u00a0<br><br>Now let&#39;s me go deeper about the incremental refresh:\\u00a0<br><br>Before running an incremental refresh, a full refresh should be performed. Note that its not mandatory, but highly suggested: If the full refresh isn&#39;t completed, documents will be missing in the index, because the incremental refresh only retrieves documents that were updates since the beginning of the full refresh. Thus, if a document was modified just before the full refresh starts, it won&#39;t be indexed by the incremental refresh run.\\u00a0<br><br>When performing a full refresh, the SharePoint crawler will log this entry when the incremental refresh token is ready: The incremental refresh token for the source My Source from collection My Collection is now saved.\\u00a0<br>That means that an incremental refresh run is now possible, even if the full refresh run is stopped.\\u00a0<br><br>The Change Token:\\u00a0<br><br>The change token is a short string used in SharePoint that functions as a bookmark in the stream of changes in a SharePoint instance. This is what allows us to implement incremental refresh easily.\\u00a0<br><br>Once the crawler have completed a first run, we keep the change token returned by the last &quot;GetContent&quot; call. In the future, with this token, we can then retrieve all the changes from the time we finished the first crawl to the current date and time. with the changes response in hand, we only need to parse the modified objects and make the necessary changes in the index.\\u00a0<br><br>Getting the change token:\\u00a0<br><br>The change token is returned from either a &quot;GetContent&quot; request or a &quot;GetChanges&quot; request and represents a bookmark for the date and time the request has ben made.\\u00a0<br>NOTE : To get the change token with a GetContent request, you need to ask for the SiteCollection root.\\u00a0<br><br>Ex: m_SiteDataWs.GetContent(SiteDataWs.ObjectType.SiteCollection, null, null, null, true, false, ref lastItem);\\u00a0<br><br>In order to retrieve all the changes with our change token, we need to call the Web Service method &quot;GetChangesEx&quot;.\\u00a0<br><br><br>You may encountered time out error during incremental refresh but not during full refresh:<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n|ERROR|2016-06-06|09:35:20|0|Authentication Failed. Details: Failed to authenticate user svcCoveoMSSharePoint@bose.com to SharePoint: no authentication cookie (FedAuth) was returned. Be sure the user has access to the Site https://bosecorp.sharepoint.com. -&gt; The operation has timed out|||||V2 - ASD SharePoint Site Collections||||ASD5|SUCCESS|||900|10383||</pre>\\n<br>The response is: we don&#39;t do the same call to SharePoint WEB service when performing full refresh vs incremental refresh.\\u00a0<br><br>Here are the calls from Incremental refesh:\\u00a0\\n<ul><li>GetContent\\u00a0</li><li>GetChanges\\u00a0</li></ul>\\n<br>Here are the calls from Full refresh:\\u00a0\\n<ul><li>GetListCollection\\u00a0</li><li>GetListItems\\u00a0</li><li>GetList\\u00a0</li><li>GetContent\\u00a0</li><li>GetAttachmentCollection\\u00a0</li><li>GetListItemChanges\\u00a0</li><li>GetPermissionCollection\\u00a0</li></ul>\\n<br><br><span style=\\\"color: #FF0000;\\\">Note: Here is a recommendation we made to the client following log4net analysis:<br><br>All errors and warnings are mostly caused by a timeout error. They are mostly caused by the authentication process with SharePoint Online when the connectors tries to get its FedAuth cookie.\\u00a0<br><br>According to the Log4Net, some authentication requests are recovered by our default &quot;retryer&quot;. The number of retries is 2 for SharePoint (it&#39;s controlled by the hidden parameter MaxNumberOfRetries). However, in some cases, the retries still fail.\\u00a0<br><br>We suspect some kind of throttling by Microsoft SharePoint Online:\\u00a0</span>\\n\\n<ul><li><span style=\\\"color: #FF0000;\\\">Incremental refresh are more frequent than Full Refresh or Rebuild for example.\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">All sources used the same crawling account (49 SharePoint Online sources).\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">Default configuration has been modified, Coveo can have more than 20 concurrent SharePoint running sources.\\u00a0</span></li></ul>\\n<br><span style=\\\"color: #FF0000;\\\">Since that the next incremental refresh will work for the same source that previously fails, it seems to be a throttling or a SharePoint Online problem. Maybe the fact that the same crawling account asks multiple times a FedAuth cookie in a short period of time is the root cause.\\u00a0<br><br>Our suggestions will be:\\u00a0</span>\\n\\n<ul><li><span style=\\\"color: #FF0000;\\\">Increase the number of retries (use the hidden parameter &quot;MaxNumberOfRetries&quot;) to 3 or a bigger value to see if it can help.\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">Otherwise, use more crawling accounts and not the same for all source. If not, reduce the concurrency of incremental refreshes if possible.\\u00a0</span></li></ul>\\n<br><span style=\\\"color: #FF0000;\\\">Unfortunately, the SharePoint Online limitations and the throttling limits are not something very clearly defined: https://msdn.microsoft.com/en-us/library/office/dn889829.aspx.\\u00a0</span><br><br><br><br><br>\\u00a0\"], \"coveo_objecttype\": [\"KB_Article\"], \"printableuri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US\"], \"kav_datacategoryselections.attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o32000000pvFkAAI;/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o32000000pvFjAAI\"], \"kav_id\": [\"ka132000000LKCyAAO\"], \"sfresolutionc\": [\"As mentioned <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/incremental_refresh_vs_full_refresh_vs_rebuild.htm\\u00a0\\\" target=\\\"_blank\\\">here</a><br><br>- An incremental refresh scans and re-indexes content and permissions only for documents identified by the repository as new, modified, or deleted since the last rebuild, full refresh, or incremental refresh\\u00a0<br><br>- A full refresh re-scans all documents from the repository. It re-indexes the permissions of all documents and re-indexes the content only for the ones that are found to be new, modified, or deleted since the last rebuild, full refresh, or incremental refresh.\\u00a0<br><br>Now let&#39;s me go deeper about the incremental refresh:\\u00a0<br><br>Before running an incremental refresh, a full refresh should be performed. Note that its not mandatory, but highly suggested: If the full refresh isn&#39;t completed, documents will be missing in the index, because the incremental refresh only retrieves documents that were updates since the beginning of the full refresh. Thus, if a document was modified just before the full refresh starts, it won&#39;t be indexed by the incremental refresh run.\\u00a0<br><br>When performing a full refresh, the SharePoint crawler will log this entry when the incremental refresh token is ready: The incremental refresh token for the source My Source from collection My Collection is now saved.\\u00a0<br>That means that an incremental refresh run is now possible, even if the full refresh run is stopped.\\u00a0<br><br>The Change Token:\\u00a0<br><br>The change token is a short string used in SharePoint that functions as a bookmark in the stream of changes in a SharePoint instance. This is what allows us to implement incremental refresh easily.\\u00a0<br><br>Once the crawler have completed a first run, we keep the change token returned by the last &quot;GetContent&quot; call. In the future, with this token, we can then retrieve all the changes from the time we finished the first crawl to the current date and time. with the changes response in hand, we only need to parse the modified objects and make the necessary changes in the index.\\u00a0<br><br>Getting the change token:\\u00a0<br><br>The change token is returned from either a &quot;GetContent&quot; request or a &quot;GetChanges&quot; request and represents a bookmark for the date and time the request has ben made.\\u00a0<br>NOTE : To get the change token with a GetContent request, you need to ask for the SiteCollection root.\\u00a0<br><br>Ex: m_SiteDataWs.GetContent(SiteDataWs.ObjectType.SiteCollection, null, null, null, true, false, ref lastItem);\\u00a0<br><br>In order to retrieve all the changes with our change token, we need to call the Web Service method &quot;GetChangesEx&quot;.\\u00a0<br><br><br>You may encountered time out error during incremental refresh but not during full refresh:<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n|ERROR|2016-06-06|09:35:20|0|Authentication Failed. Details: Failed to authenticate user svcCoveoMSSharePoint@bose.com to SharePoint: no authentication cookie (FedAuth) was returned. Be sure the user has access to the Site https://bosecorp.sharepoint.com. -&gt; The operation has timed out|||||V2 - ASD SharePoint Site Collections||||ASD5|SUCCESS|||900|10383||</pre>\\n<br>The response is: we don&#39;t do the same call to SharePoint WEB service when performing full refresh vs incremental refresh.\\u00a0<br><br>Here are the calls from Incremental refesh:\\u00a0\\n<ul><li>GetContent\\u00a0</li><li>GetChanges\\u00a0</li></ul>\\n<br>Here are the calls from Full refresh:\\u00a0\\n<ul><li>GetListCollection\\u00a0</li><li>GetListItems\\u00a0</li><li>GetList\\u00a0</li><li>GetContent\\u00a0</li><li>GetAttachmentCollection\\u00a0</li><li>GetListItemChanges\\u00a0</li><li>GetPermissionCollection\\u00a0</li></ul>\\n<br><br><span style=\\\"color: #FF0000;\\\">Note: Here is a recommendation we made to the client following log4net analysis:<br><br>All errors and warnings are mostly caused by a timeout error. They are mostly caused by the authentication process with SharePoint Online when the connectors tries to get its FedAuth cookie.\\u00a0<br><br>According to the Log4Net, some authentication requests are recovered by our default &quot;retryer&quot;. The number of retries is 2 for SharePoint (it&#39;s controlled by the hidden parameter MaxNumberOfRetries). However, in some cases, the retries still fail.\\u00a0<br><br>We suspect some kind of throttling by Microsoft SharePoint Online:\\u00a0</span>\\n\\n<ul><li><span style=\\\"color: #FF0000;\\\">Incremental refresh are more frequent than Full Refresh or Rebuild for example.\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">All sources used the same crawling account (49 SharePoint Online sources).\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">Default configuration has been modified, Coveo can have more than 20 concurrent SharePoint running sources.\\u00a0</span></li></ul>\\n<br><span style=\\\"color: #FF0000;\\\">Since that the next incremental refresh will work for the same source that previously fails, it seems to be a throttling or a SharePoint Online problem. Maybe the fact that the same crawling account asks multiple times a FedAuth cookie in a short period of time is the root cause.\\u00a0<br><br>Our suggestions will be:\\u00a0</span>\\n\\n<ul><li><span style=\\\"color: #FF0000;\\\">Increase the number of retries (use the hidden parameter &quot;MaxNumberOfRetries&quot;) to 3 or a bigger value to see if it can help.\\u00a0</span></li><li><span style=\\\"color: #FF0000;\\\">Otherwise, use more crawling accounts and not the same for all source. If not, reduce the concurrency of incremental refreshes if possible.\\u00a0</span></li></ul>\\n<br><span style=\\\"color: #FF0000;\\\">Unfortunately, the SharePoint Online limitations and the throttling limits are not something very clearly defined: https://msdn.microsoft.com/en-us/library/office/dn889829.aspx.\\u00a0</span><br><br><br><br><br>\\u00a0\"], \"foldingchild\": [\"c180d986cee6a7f75eaa74550d347954655f58f9de2f6408f67b31919e0a\"], \"sfcreateddate\": [1482266203], \"kav_sitecore_version__c\": [\"N/A\"], \"kav_owner.coveo_record_size\": [2], \"kav_coveo_effective_modstamp\": [1518004058], \"kav_summary__html_stripped\": [\"\"], \"kav_dc_article_type\": [\"How To/Question\"], \"sfconnectorc\": [\"Microsoft SharePoint\"], \"kav_dc_product\": [\"Coveo Enterprise Search\"], \"ka_coveo_record_size\": [2], \"kav_dc_expanded_article_type\": [\"All;All|How To/Question\"], \"kav_datacategoryselections.coveo_record_size\": [\"2;2\"], \"concepts\": [\"SharePoint ; re-indexes ; repository ; permissions ; connectors ; change token ; crawling accounts ; hidden parameter ; FedAuth cookie ; GetContent ; MaxNumberOfRetries ; authentication ; SiteDataWs ; SiteCollection ; throttling ; configuration\"], \"sfkbid\": [\"kA1320000008T6YCAU\"], \"kav_firstpublisheddate\": [1467206951], \"coveo_organization_id\": [\"00D3000000007r2\"], \"coveo_foldingcollection\": [\"be09c8f35b7aeb49b4fcd083a2d5553b171872fc01a9bbf73c1a521c1dc6\"], \"sffirstpublisheddate\": [1467206951], \"sflastmodifieddate\": [1482266381], \"kav_coveo_version__c\": [\"Coveo Enterprise Search 7.0\"], \"kav_vendor_version__c__html_stripped\": [\"\"], \"detectedlanguage\": [1], \"kav_isvisibleinprm\": [true], \"kav_owner.attribute.type\": [\"Name\"], \"kav_lastmodifiedby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000003q7JgAAI\"], \"sfversionc\": [\"CES7\"], \"sitename\": [\"Community\"], \"kav_createdby.name\": [\"Karel Mpungi\"], \"kav_lastmodifiedby.coveo_record_size\": [2], \"sfisvisibleinpkb\": [true], \"kav_datacategoryselections.id\": [\"02o32000000pvFkAAI;02o32000000pvFjAAI\"], \"kav_description__c\": [\"This article explains the difference between a full refresh and an incremental refresh for SharePoint connector.<br><br>This article also explains\\u00a0why you&#39;re sometimes getting a time out error during incremental refresh but this is never the case during a full refresh.\"], \"kav_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__kav/ka132000000LKCyAAO\"], \"kav_articlenumber__stripped\": [\"1501\"], \"sfversionnumber\": [2], \"kav_attribute.type\": [\"KB_Article__kav\"], \"kav_validationstatus\": [\"Reviewed\"], \"coveo_foldingparent\": [\"c180d986cee6a7f75eaa74550d347954655f58f9de2f6408f67b31919e0a\"], \"collection\": [\"default\"], \"sfsourceid\": [\"50032000011E1BfAAK\"], \"date\": [1518004058], \"kav_lastmodifiedby.id\": [\"00560000003q7JgAAI\"], \"kav_datacategoryselections.datacategorygroupname\": [\"Product;Article_Type\"], \"conversionstate\": [0], \"sfvalidationstatus\": [\"Reviewed\"], \"kav_isdeleted\": [false], \"sflastmodifiedbyid\": [\"00560000003q7JgAAI\"], \"kav_lastmodifiedby.name\": [\"Frederic Cote\"], \"kav_articlenumber\": [\"000001501\"], \"permanentid\": [\"084544392069003c2e088ab873c0e4975c21e772f6cbc90bc34f90c379ec\"]}",
      "sfbuildc" : "All",
      "sflastmodifiedbyid" : "00560000003q7JgAAI",
      "sfproductc" : "Coveo Enterprise Search",
      "syssfownerid" : "00560000002MKBSAA4",
      "sfsitecoreversionc" : "N/A",
      "sourcetype" : "Salesforce",
      "sysconnectortype" : "Salesforce2",
      "sftitle" : "SharePoint Incremental Refresh VS Full Refresh",
      "rowid" : 5492240,
      "syssfcreatedbyid" : "00560000002MKBSAA4",
      "sfdescriptionc" : "This article explains the difference between a full refresh and an incremental refresh for SharePoint connector.<br><br>This article also explains why you&#39;re sometimes getting a time out error during incremental refresh but this is never the case during a full refresh.",
      "size" : 13544,
      "sfislatestversion" : "true",
      "sysdocumenttype" : "article",
      "sfcreateddate" : 1482266203000,
      "sfsourceid" : "50032000011E1BfAAK",
      "clickableuri" : "https://na61.salesforce.com/kA1320000008T6Y",
      "syssource" : "Salesforce Public Items",
      "sfownerid" : "00560000002MKBSAA4",
      "orderingid" : 212384990660371047,
      "sfpublishstatus" : "Online",
      "syssize" : 13544,
      "sysdate" : 1518004058000,
      "sflanguage" : "en_US",
      "sysparents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"SharePoint Incremental Refresh VS Full Refresh\" uri=\"https://na61.salesforce.com/kA1320000008T6Y\" /></parents>",
      "sfdcexpandedarticletype" : "All;All|How To/Question",
      "sfcurrencyisocode" : "USD",
      "sfkbid" : "kA1320000008T6YCAU",
      "sfdcexpandedproduct" : "All;All|Coveo Enterprise Search",
      "syssfcreateddate" : 1482266203000,
      "sflastmodifieddate" : 1482266381000,
      "sfisvisibleinpkb" : "true",
      "source" : "Salesforce Public Items",
      "sfarticletypec" : "Question",
      "sfisdeleted" : "false",
      "sfisvisibleincsp" : "true",
      "sfvalidationstatus" : "Reviewed",
      "sflastmodifiedbyname" : "Frederic Cote",
      "collection" : "default",
      "sfdcproduct" : [ "Coveo Enterprise Search" ],
      "syssourcetype" : "Salesforce",
      "sfarticletype" : "KB_Article__kav",
      "indexeddate" : 1518187523000,
      "connectortype" : "Salesforce2",
      "filetype" : "SalesforceItem",
      "sfcreatedbyname" : "Karel Mpungi",
      "sysclickableuri" : "https://na61.salesforce.com/kA1320000008T6Y",
      "sysfiletype" : "SalesforceItem",
      "language" : [ "English" ],
      "sffirstpublisheddate" : 1467206951000,
      "sfownername" : "Karel Mpungi",
      "sitename" : "Community",
      "sysrowid" : 5492240,
      "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
      "syscollection" : "default"
    },
    "Title" : "SharePoint Incremental Refresh VS Full Refresh",
    "Uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
    "PrintableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
    "ClickUri" : "https://na61.salesforce.com/kA1320000008T6Y",
    "UniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA1320000008T6YCAU/language:en_US",
    "Excerpt" : "This article explains the difference between a full refresh and an incremental refresh for SharePoint connector. ... This article also explains why you're sometimes getting a time out error during ...",
    "FirstSentences" : null
  }