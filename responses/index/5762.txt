{
    "title" : "Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce",
    "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
    "printableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
    "clickUri" : "https://na61.salesforce.com/kA132000000L7vl",
    "uniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
    "excerpt" : "This article is to explain how the filtering from JsSearch Visualforce Component works. ... Some characters that may be found in common filters may cause for search token creation to be broken, lea...",
    "firstSentences" : null,
    "summary" : null,
    "flags" : "HasHtmlVersion",
    "hasHtmlVersion" : true,
    "hasMobileHtmlVersion" : false,
    "score" : 1303,
    "percentScore" : 81.2248,
    "rankingInfo" : null,
    "rating" : 3.0,
    "isTopResult" : false,
    "isRecommendation" : false,
    "titleHighlights" : [ ],
    "firstSentencesHighlights" : [ ],
    "excerptHighlights" : [ ],
    "printableUriHighlights" : [ ],
    "summaryHighlights" : [ ],
    "parentResult" : null,
    "childResults" : [ ],
    "totalNumberOfChildResults" : 0,
    "raw" : {
      "systitle" : "Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce",
      "sfsummary" : "Explaining the best practice with filtering in the search token to avoid breaking characters.",
      "sysurihash" : "QPIzftkxEðoc7H34",
      "urihash" : "QPIzftkxEðoc7H34",
      "parents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce\" uri=\"https://na61.salesforce.com/kA132000000L7vl\" /></parents>",
      "sfdcarticletype" : "How To/Question",
      "sfresolutionc" : "<p>This is examples bellow are common snippet that you could encounter when implementing JsSearch Visualforce components. The goal is to follow best practices and avoid most common errors, especially when working with code validator/ interpretor of Salesforce</p>\n\n<p>Here is an example pretty basic</p>\n\n<p>#################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt; <br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==&#39;Web - source&#39; AND @sysfiletype==&#39;html&#39;&quot;/&gt; <br>&lt;/apex:page&gt;<br>#################################<br>This will give you an error 401 NoAuthenticationException, because the token is not generated properly. No token, no search. The problem is mostly due by all the quote used here but they are often to clarify our reading.<br><br>###################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt; <br>&lt;apex:variable var=&quot;Q&quot; value=&quot;{!&#39;\\&quot;&#39;}&quot;/&gt; <br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==({!Q}Web - Source{!Q}) AND @sysfiletype==({!Q}html{!Q})&quot;/&gt; <br>&lt;/apex:page&gt;</p>\n\n<p>###################################<br>We declare a new variable containing a &quot; so we can inject it where we when without Salesforce trying to stop us. This would be the best and most optimize way to do this. Of course, you can replace both field I used in my example and both value for what best suits your needs.</p>",
      "sysuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
      "sysprintableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
      "sflastpublisheddate" : 1490615797000,
      "systransactionid" : 161138,
      "sfurlname" : "1950",
      "sfsystemmodstamp" : 1514547700000,
      "sfisvisibleinapp" : "true",
      "sfcoveoversionc" : "Coveo for Salesforce V2",
      "sysconcepts" : "Visualforce components ; Salesforce ; filtering ; common ; new variable ; quote used ; code validator ; optimize ; NoAuthenticationException ; Environment",
      "sfkbversionnumber" : "2",
      "concepts" : "Visualforce components ; Salesforce ; filtering ; common ; new variable ; quote used ; code validator ; optimize ; NoAuthenticationException ; Environment",
      "printableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
      "documenttype" : "article",
      "sfkbarticlekavid" : "ka132000000LMwyAAG",
      "sysindexeddate" : 1518187554000,
      "sfknowledgearticleid" : "kA132000000L7vlCAC",
      "sfcreatedbyid" : "00532000004voF1AAI",
      "sfconnectorc" : "N/A",
      "permanentid" : "a857db00d4e417ab5042cf08890f5b4770b25a4c97ff7317044a7a1884eb",
      "syslanguage" : [ "English" ],
      "transactionid" : 161138,
      "sfisvisibleinprm" : "true",
      "title" : "Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce",
      "sfversionnumber" : 2,
      "sfarticlenumber" : "000001950",
      "date" : 1514547700000,
      "objecttype" : "KB Article",
      "allmetadatavalues" : "{\"kav_lastmodifiedby.attribute.type\": [\"User\"], \"coveo_short_id\": [\"kA132000000L7vl\"], \"sflastmodifiedbyname\": [\"Jean-Fran\\u00e7ois Cadrin-Girard\"], \"kav_coveo_version__c__html_stripped\": [\"Coveo for Salesforce V2\"], \"fileextension\": [\"\"], \"sfdcexpandedproduct\": [\"All;All|Javascript Search Interface;All|REST Search API;All|Salesforce\"], \"kav_createdby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00532000004voF1AAI\"], \"sflanguage\": [\"en_US\"], \"kav_createdby.attribute.type\": [\"User\"], \"kav_createdby.id\": [\"00532000004voF1AAI\"], \"kav_language\": [\"en_US\"], \"sfsitecoreversionc\": [\"N/A\"], \"sourcetype\": [\"Salesforce\"], \"title\": [\"Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce\"], \"source\": [\"Salesforce Public Items\"], \"kav_owner.attribute.url\": [\"/services/data/v34.0/sobjects/User/00532000004voF1AAI\"], \"parents\": [\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-16\\\"?><parents><parent name=\\\"Organization\\\" uri=\\\"https://na61.salesforce.com/home/home.jsp\\\" /><parent name=\\\"KB_Article__ka\\\" uri=\\\"http://www.salesforce.com/org:organization/articletype:KB_Article\\\" /><parent name=\\\"Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce\\\" uri=\\\"https://na61.salesforce.com/kA132000000L7vl\\\" /></parents>\"], \"sfisvisibleinprm\": [true], \"kav_title\": [\"Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce\"], \"kav_isvisibleincsp\": [true], \"sfcreateddate\": [1490615255], \"hashtmlversion\": [true], \"kav_versionnumber\": [2], \"sfcreatedbyname\": [\"Bruno-Pascal Roy-Dumas\"], \"sflastpublisheddate\": [1490615797], \"objecttypelabel\": [\"KB Article\"], \"kav_cause__c__html_stripped\": [\"\"], \"originalhtmlcharset\": [1200], \"coveo_connector_hasbinarydata\": [false], \"kav_lastpublisheddate\": [1490615797], \"sfsystemmodstamp\": [1514547700], \"ka_attribute.type\": [\"KB_Article__ka\"], \"sfdcproduct\": [\"Javascript Search Interface;REST Search API;Salesforce\"], \"kav_resolution__c__html_stripped\": [\"This is examples bellow are common snippet that you could encounter when implementing JsSearch Visualforce components. The goal is to follow best practices and avoid most common errors, especially when working with code validator/ interpretor of Salesforce\\n \\n\\n Here is an example pretty basic\\n \\n\\n ################################# \\n <apex:page standardstylesheets=\\\"false\\\" sidebar=\\\"false\\\" docType=\\\"html-5.0\\\">\\u00a0 \\n <CoveoV2:SearchInterface mobile=\\\"false\\\" name=\\\"Search\\\" filter=\\\"@syssource=='Web - source' AND @sysfiletype=='html'\\\"/>\\u00a0 \\n </apex:page> \\n ################################# \\n This will give you an error 401\\u00a0NoAuthenticationException, because the token is not generated properly. No token, no search. The problem is mostly due by all the quote used here but they are often to clarify our reading. \\n \\n ################################### \\n <apex:page standardstylesheets=\\\"false\\\" sidebar=\\\"false\\\" docType=\\\"html-5.0\\\">\\u00a0 \\n <apex:variable var=\\\"Q\\\" value=\\\"{!'\\\\\\\"'}\\\"/>\\u00a0 \\n <CoveoV2:SearchInterface mobile=\\\"false\\\" name=\\\"Search\\\" filter=\\\"@syssource==({!Q}Web - Source{!Q}) AND @sysfiletype==({!Q}html{!Q})\\\"/>\\u00a0 \\n </apex:page>\\n \\n\\n ################################### \\n We declare a new variable containing a \\\" so we can inject it where we when without Salesforce trying to stop us. This would be the best and most optimize way to do this. Of course, you can replace both field I used in my example and both value for what best suits your needs.\\n\"], \"clickableuri\": [\"https://na61.salesforce.com/kA132000000L7vl\"], \"sftitle\": [\"Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce\"], \"kav_owner.id\": [\"00532000004voF1AAI\"], \"sfisvisibleinapp\": [true], \"ka_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__ka/kA132000000L7vlCAC\"], \"sfdcarticletype\": [\"How To/Question\"], \"sfislatestversion\": [true], \"sfarticlenumber\": [\"000001950\"], \"contenttype\": [\"binarydata\"], \"sfurlname\": [\"1950\"], \"ka_id\": [\"kA132000000L7vlCAC\"], \"kav_datacategoryselections.datacategoryname\": [\"Javascript_Search_Interface;REST_Search_API;Salesforce;How_To\"], \"coveo_url\": [\"https://na61.salesforce.com/kA132000000L7vl\"], \"kav_urlname\": [\"1950\"], \"kav_dc_expanded_product\": [\"All;All|Javascript Search Interface;All|REST Search API;All|Salesforce\"], \"foldingcollection\": [\"5dc148ac7f65000d8b0255e77c9f9d495a00209cb6734c3611dc74284672\"], \"body\": [\"<html>   <body>     <div style=\\\"background-color: #fff;border: 2px solid #BBC5CC;border-radius: 4px;float: left;font-family: lato;margin-left: 15px;margin-right: 15px;margin-bottom: 4%;padding: 10px;width: 60%;\\\">       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Description         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> This article is to explain how the filtering from <a href=\\\"https://developers.coveo.com/display/public/SalesforceV2/JsSearch+Visualforce+Component\\\" target=\\\"_blank\\\">JsSearch Visualforce Component </a>\\u00a0works.<br><br>Some characters that may be found in common filters may cause for search token creation to be broken, leading to a 401 error.<br><br>This article is intended to show how to escape these characters in order to avoid 401s.</div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Environment         </div>       </div>       <br/>       <table>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Product</td>           <td></td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Sitecore Version</td>           <td>N/A</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Connector</td>           <td>N/A</td>         </tr>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Published</td>           <td>1490615797</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Version</td>           <td></td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Build</td>           <td></td>         </tr>       </table>       <br/>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Cause         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> </div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Resolution         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> <p>This is examples bellow are common snippet that you could encounter when implementing JsSearch Visualforce components. The goal is to follow best practices and avoid most common errors, especially when working with code validator/ interpretor of Salesforce</p>\\n\\n<p>Here is an example pretty basic</p>\\n\\n<p>#################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt;\\u00a0<br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==&#39;Web - source&#39; AND @sysfiletype==&#39;html&#39;&quot;/&gt;\\u00a0<br>&lt;/apex:page&gt;<br>#################################<br>This will give you an error 401\\u00a0NoAuthenticationException, because the token is not generated properly. No token, no search. The problem is mostly due by all the quote used here but they are often to clarify our reading.<br><br>###################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt;\\u00a0<br>&lt;apex:variable var=&quot;Q&quot; value=&quot;{!&#39;\\\\&quot;&#39;}&quot;/&gt;\\u00a0<br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==({!Q}Web - Source{!Q}) AND @sysfiletype==({!Q}html{!Q})&quot;/&gt;\\u00a0<br>&lt;/apex:page&gt;</p>\\n\\n<p>###################################<br>We declare a new variable containing a &quot; so we can inject it where we when without Salesforce trying to stop us. This would be the best and most optimize way to do this. Of course, you can replace both field I used in my example and both value for what best suits your needs.</p></div>     </div>   </body> </html>\"], \"sfpublishstatus\": [\"Online\"], \"sfcreatedbyid\": [\"00532000004voF1AAI\"], \"kav_description__c__html_stripped\": [\"This article is to explain how the filtering from  JsSearch Visualforce Component  \\u00a0works. \\n \\n Some characters that may be found in common filters may cause for search token creation to be broken, leading to a 401 error. \\n \\n This article is intended to show how to escape these characters in order to avoid 401s.\"], \"kav_islatestversion\": [true], \"kav_knowledgearticleid\": [\"kA132000000L7vlCAC\"], \"sfknowledgearticleid\": [\"kA132000000L7vlCAC\"], \"sfownername\": [\"Bruno-Pascal Roy-Dumas\"], \"kav_datacategoryselections.attribute.type\": [\"KB_Article__DataCategorySelection;KB_Article__DataCategorySelection;KB_Article__DataCategorySelection;KB_Article__DataCategorySelection\"], \"detectedtitle\": [\"Description\"], \"kav_createddate\": [1490615255], \"language\": [\"English\"], \"coveo_foldingchild\": [\"8a3f7f1bfd59c2329350fe1a4b9158cbf113edf295a1db2149d8b55d82ff\"], \"sfownerid\": [\"00532000004voF1AAI\"], \"kav_createdby.coveo_record_size\": [2], \"kav_systemmodstamp\": [1514547700], \"objecttype\": [\"KB Article\"], \"connectortype\": [\"Salesforce2\"], \"kav_coveo_record_size\": [4], \"originaluri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US\"], \"sfisvisibleincsp\": [true], \"convertertype\": [\"TYPE_HTML\"], \"filetype\": [\"SalesforceItem\"], \"kav_owner.name\": [\"Bruno-Pascal Roy-Dumas\"], \"sfcoveoversionc\": [\"Coveo for Salesforce V2\"], \"sfdcexpandedarticletype\": [\"All;All|How To/Question\"], \"objecttypelabelplural\": [\"KB Articles\"], \"sfcurrencyisocode\": [\"CAD\"], \"sfisdeleted\": [false], \"extractedsize\": [3700], \"size\": [6816], \"kav_summary\": [\"Explaining the best practice with filtering in the search token to avoid breaking characters.\"], \"kav_publishstatus\": [\"Online\"], \"kav_connector__c\": [\"N/A\"], \"generateexcerpt\": [true], \"sfdescriptionc\": [\"This article is to explain how the filtering from <a href=\\\"https://developers.coveo.com/display/public/SalesforceV2/JsSearch+Visualforce+Component\\\" target=\\\"_blank\\\">JsSearch Visualforce Component </a>\\u00a0works.<br><br>Some characters that may be found in common filters may cause for search token creation to be broken, leading to a 401 error.<br><br>This article is intended to show how to escape these characters in order to avoid 401s.\"], \"sfarticletype\": [\"KB_Article__kav\"], \"kav_lastmodifieddate\": [1490615797], \"documenttype\": [\"article\"], \"sfkbarticlekavid\": [\"ka132000000LMwyAAG\"], \"kav_currencyisocode\": [\"CAD\"], \"foldingparent\": [\"8a3f7f1bfd59c2329350fe1a4b9158cbf113edf295a1db2149d8b55d82ff\"], \"mappingtype\": [\"KB_Article\"], \"kav_isvisibleinpkb\": [true], \"kav_sourceid\": [\"50032000017P6c0AAC\"], \"sfkbversionnumber\": [2], \"kav_isvisibleinapp\": [true], \"kav_resolution__c\": [\"<p>This is examples bellow are common snippet that you could encounter when implementing JsSearch Visualforce components. The goal is to follow best practices and avoid most common errors, especially when working with code validator/ interpretor of Salesforce</p>\\n\\n<p>Here is an example pretty basic</p>\\n\\n<p>#################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt;\\u00a0<br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==&#39;Web - source&#39; AND @sysfiletype==&#39;html&#39;&quot;/&gt;\\u00a0<br>&lt;/apex:page&gt;<br>#################################<br>This will give you an error 401\\u00a0NoAuthenticationException, because the token is not generated properly. No token, no search. The problem is mostly due by all the quote used here but they are often to clarify our reading.<br><br>###################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt;\\u00a0<br>&lt;apex:variable var=&quot;Q&quot; value=&quot;{!&#39;\\\\&quot;&#39;}&quot;/&gt;\\u00a0<br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==({!Q}Web - Source{!Q}) AND @sysfiletype==({!Q}html{!Q})&quot;/&gt;\\u00a0<br>&lt;/apex:page&gt;</p>\\n\\n<p>###################################<br>We declare a new variable containing a &quot; so we can inject it where we when without Salesforce trying to stop us. This would be the best and most optimize way to do this. Of course, you can replace both field I used in my example and both value for what best suits your needs.</p>\"], \"coveo_objecttype\": [\"KB_Article\"], \"printableuri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US\"], \"kav_datacategoryselections.attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o32000000q4kQAAQ;/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o32000000q4kSAAQ;/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o32000000q4kRAAQ;/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o32000000q4kTAAQ\"], \"kav_id\": [\"ka132000000LMwyAAG\"], \"sfresolutionc\": [\"<p>This is examples bellow are common snippet that you could encounter when implementing JsSearch Visualforce components. The goal is to follow best practices and avoid most common errors, especially when working with code validator/ interpretor of Salesforce</p>\\n\\n<p>Here is an example pretty basic</p>\\n\\n<p>#################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt;\\u00a0<br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==&#39;Web - source&#39; AND @sysfiletype==&#39;html&#39;&quot;/&gt;\\u00a0<br>&lt;/apex:page&gt;<br>#################################<br>This will give you an error 401\\u00a0NoAuthenticationException, because the token is not generated properly. No token, no search. The problem is mostly due by all the quote used here but they are often to clarify our reading.<br><br>###################################<br>&lt;apex:page standardstylesheets=&quot;false&quot; sidebar=&quot;false&quot; docType=&quot;html-5.0&quot;&gt;\\u00a0<br>&lt;apex:variable var=&quot;Q&quot; value=&quot;{!&#39;\\\\&quot;&#39;}&quot;/&gt;\\u00a0<br>&lt;CoveoV2:SearchInterface mobile=&quot;false&quot; name=&quot;Search&quot; filter=&quot;@syssource==({!Q}Web - Source{!Q}) AND @sysfiletype==({!Q}html{!Q})&quot;/&gt;\\u00a0<br>&lt;/apex:page&gt;</p>\\n\\n<p>###################################<br>We declare a new variable containing a &quot; so we can inject it where we when without Salesforce trying to stop us. This would be the best and most optimize way to do this. Of course, you can replace both field I used in my example and both value for what best suits your needs.</p>\"], \"foldingchild\": [\"8a3f7f1bfd59c2329350fe1a4b9158cbf113edf295a1db2149d8b55d82ff\"], \"sfsummary\": [\"Explaining the best practice with filtering in the search token to avoid breaking characters.\"], \"kav_sitecore_version__c\": [\"N/A\"], \"kav_owner.coveo_record_size\": [2], \"kav_coveo_effective_modstamp\": [1514547700], \"kav_summary__html_stripped\": [\"Explaining the best practice with filtering in the search token to avoid breaking characters.\"], \"kav_dc_article_type\": [\"How To/Question\"], \"sfconnectorc\": [\"N/A\"], \"kav_dc_product\": [\"Javascript Search Interface;REST Search API;Salesforce\"], \"ka_coveo_record_size\": [2], \"kav_dc_expanded_article_type\": [\"All;All|How To/Question\"], \"kav_datacategoryselections.coveo_record_size\": [\"2;2;2;2\"], \"concepts\": [\"Visualforce components ; Salesforce ; filtering ; common ; new variable ; quote used ; code validator ; optimize ; NoAuthenticationException ; Environment\"], \"sfkbid\": [\"kA132000000L7vlCAC\"], \"kav_firstpublisheddate\": [1481816961], \"coveo_organization_id\": [\"00D3000000007r2\"], \"coveo_foldingcollection\": [\"5dc148ac7f65000d8b0255e77c9f9d495a00209cb6734c3611dc74284672\"], \"sffirstpublisheddate\": [1481816961], \"sflastmodifieddate\": [1490615797], \"kav_coveo_version__c\": [\"Coveo for Salesforce V2\"], \"kav_vendor_version__c__html_stripped\": [\"\"], \"detectedlanguage\": [1], \"kav_isvisibleinprm\": [true], \"kav_owner.attribute.type\": [\"Name\"], \"kav_lastmodifiedby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000001R0bkAAC\"], \"sitename\": [\"Community\"], \"kav_createdby.name\": [\"Bruno-Pascal Roy-Dumas\"], \"kav_lastmodifiedby.coveo_record_size\": [2], \"sfisvisibleinpkb\": [true], \"kav_datacategoryselections.id\": [\"02o32000000q4kQAAQ;02o32000000q4kSAAQ;02o32000000q4kRAAQ;02o32000000q4kTAAQ\"], \"kav_description__c\": [\"This article is to explain how the filtering from <a href=\\\"https://developers.coveo.com/display/public/SalesforceV2/JsSearch+Visualforce+Component\\\" target=\\\"_blank\\\">JsSearch Visualforce Component </a>\\u00a0works.<br><br>Some characters that may be found in common filters may cause for search token creation to be broken, leading to a 401 error.<br><br>This article is intended to show how to escape these characters in order to avoid 401s.\"], \"kav_validationstatus\": [\"Reviewed\"], \"kav_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__kav/ka132000000LMwyAAG\"], \"kav_articlenumber__stripped\": [\"1950\"], \"sfversionnumber\": [2], \"kav_attribute.type\": [\"KB_Article__kav\"], \"kav_articletype\": [\"KB_Article__kav\"], \"coveo_foldingparent\": [\"8a3f7f1bfd59c2329350fe1a4b9158cbf113edf295a1db2149d8b55d82ff\"], \"collection\": [\"default\"], \"sfsourceid\": [\"50032000017P6c0AAC\"], \"date\": [1514547700], \"kav_lastmodifiedby.id\": [\"00560000001R0bkAAC\"], \"kav_datacategoryselections.datacategorygroupname\": [\"Product;Product;Product;Article_Type\"], \"conversionstate\": [0], \"sfvalidationstatus\": [\"Reviewed\"], \"kav_isdeleted\": [false], \"sflastmodifiedbyid\": [\"00560000001R0bkAAC\"], \"kav_lastmodifiedby.name\": [\"Jean-Fran\\u00e7ois Cadrin-Girard\"], \"kav_articlenumber\": [\"000001950\"], \"permanentid\": [\"a857db00d4e417ab5042cf08890f5b4770b25a4c97ff7317044a7a1884eb\"]}",
      "sflastmodifiedbyid" : "00560000001R0bkAAC",
      "syssfownerid" : "00532000004voF1AAI",
      "sfsitecoreversionc" : "N/A",
      "sourcetype" : "Salesforce",
      "sysconnectortype" : "Salesforce2",
      "sftitle" : "Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce",
      "rowid" : 5492630,
      "syssfcreatedbyid" : "00532000004voF1AAI",
      "sfdescriptionc" : "This article is to explain how the filtering from <a href=\"https://developers.coveo.com/display/public/SalesforceV2/JsSearch+Visualforce+Component\" target=\"_blank\">JsSearch Visualforce Component </a> works.<br><br>Some characters that may be found in common filters may cause for search token creation to be broken, leading to a 401 error.<br><br>This article is intended to show how to escape these characters in order to avoid 401s.",
      "size" : 6816,
      "sfislatestversion" : "true",
      "sysdocumenttype" : "article",
      "sfcreateddate" : 1490615255000,
      "sfsourceid" : "50032000017P6c0AAC",
      "clickableuri" : "https://na61.salesforce.com/kA132000000L7vl",
      "syssource" : "Salesforce Public Items",
      "sfownerid" : "00532000004voF1AAI",
      "orderingid" : 212384990660371432,
      "sfpublishstatus" : "Online",
      "syssize" : 6816,
      "sysdate" : 1514547700000,
      "sflanguage" : "en_US",
      "sysparents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce\" uri=\"https://na61.salesforce.com/kA132000000L7vl\" /></parents>",
      "sfdcexpandedarticletype" : "All;All|How To/Question",
      "sfcurrencyisocode" : "CAD",
      "sfkbid" : "kA132000000L7vlCAC",
      "sfdcexpandedproduct" : "All;All|Javascript Search Interface;All|REST Search API;All|Salesforce",
      "syssfcreateddate" : 1490615255000,
      "sflastmodifieddate" : 1490615797000,
      "sfisvisibleinpkb" : "true",
      "source" : "Salesforce Public Items",
      "sfisdeleted" : "false",
      "sfisvisibleincsp" : "true",
      "sfvalidationstatus" : "Reviewed",
      "sflastmodifiedbyname" : "Jean-François Cadrin-Girard",
      "collection" : "default",
      "sfdcproduct" : [ "Javascript Search Interface", "REST Search API", "Salesforce" ],
      "syssourcetype" : "Salesforce",
      "sfarticletype" : "KB_Article__kav",
      "indexeddate" : 1518187554000,
      "connectortype" : "Salesforce2",
      "filetype" : "SalesforceItem",
      "sfcreatedbyname" : "Bruno-Pascal Roy-Dumas",
      "sysclickableuri" : "https://na61.salesforce.com/kA132000000L7vl",
      "sysfiletype" : "SalesforceItem",
      "language" : [ "English" ],
      "sffirstpublisheddate" : 1481816961000,
      "sfownername" : "Bruno-Pascal Roy-Dumas",
      "sitename" : "Community",
      "sysrowid" : 5492630,
      "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
      "syscollection" : "default"
    },
    "Title" : "Escaping Problematic Characters in Search Token Filters in Coveo for Salesforce",
    "Uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
    "PrintableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
    "ClickUri" : "https://na61.salesforce.com/kA132000000L7vl",
    "UniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000L7vlCAC/language:en_US",
    "Excerpt" : "This article is to explain how the filtering from JsSearch Visualforce Component works. ... Some characters that may be found in common filters may cause for search token creation to be broken, lea...",
    "FirstSentences" : null
  }