{
    "title" : "Coveo disabling TLS 1.0",
    "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
    "printableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
    "clickUri" : "https://na61.salesforce.com/kA132000000XcfY",
    "uniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
    "excerpt" : "TLS stands for “Transport Layer Security.” ... It is a protocol that provides privacy and data integrity between two communicating applications. ... It’s the most widely deployed security protocol ...",
    "firstSentences" : null,
    "summary" : null,
    "flags" : "HasHtmlVersion",
    "hasHtmlVersion" : true,
    "hasMobileHtmlVersion" : false,
    "score" : 1457,
    "percentScore" : 85.89072,
    "rankingInfo" : null,
    "rating" : 3.0,
    "isTopResult" : false,
    "isRecommendation" : false,
    "titleHighlights" : [ ],
    "firstSentencesHighlights" : [ ],
    "excerptHighlights" : [ ],
    "printableUriHighlights" : [ ],
    "summaryHighlights" : [ ],
    "parentResult" : null,
    "childResults" : [ ],
    "totalNumberOfChildResults" : 0,
    "raw" : {
      "systitle" : "Coveo disabling TLS 1.0",
      "sfsummary" : "Coveo requires an upgrade to TLS 1.1 or higher by March 26th, 2018 in order to align with industry best practices for security and data integrity. On that date we will disable TLS 1.0. Action is required prior to this date to prevent any disruption to your production instance. This communication contains all of the information currently available on Coveo's disablement of the TLS 1.0 encryption protocol.",
      "sysurihash" : "sv1pðñkXuNx9eZBe",
      "urihash" : "sv1pðñkXuNx9eZBe",
      "parents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"Coveo disabling TLS 1.0\" uri=\"https://na61.salesforce.com/kA132000000XcfY\" /></parents>",
      "sfdcarticletype" : "How To/Question",
      "sfresolutionc" : "<p dir=\"ltr\"><u><b>Internet Browsers:</b></u></p>\n\n<p dir=\"ltr\">You and your users will experience issues accessing Coveo if you have disabled the supported encryption protocols or if a browser other than the supported browsers is being used to connect to Coveo.</p>\nIf you experience errors, you need to ensure your browsers are compatible with TLS 1.1 or higher. If your browser is not compatible with TLS 1.1 or higher after we make this change, your users will NOT be able to access Coveo Services. We recommend that you begin planning to support TLS 1.1 and TLS 1.2 as soon as possible.<br><br>NOTE: The minimum required action is to enable TLS 1.1 or TLS 1.2 encryption protocol within your browser security settings. Although we recommend disabling TLS 1.0 for a more secure browsing experience, it is not required. For example, if a user has protocols TLS 1.0, TLS 1.1, and TLS 1.2 enabled within their browser&#39;s security settings, they will be able to successfully connect to Coveo with that browser after Coveo disables TLS 1.0 on August 21st, 2017.\n<p dir=\"ltr\">Refer to the compatibility guidelines below:</p>\n<b>Internet Explorer (IE):</b>\n\n<ul><li>Microsoft Internet Explorer (IE): Review the<a href=\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\" target=\"_blank\"> Enabling TLS 1.1 and TLS 1.2 in Internet Explorer knowledge</a> article for more details.</li><li>Desktop and mobile IE version 11: If you see the &quot;Stronger security is required&quot; error message, you may need to turn off the TLS 1.0 setting in the Internet Options | Advanced Settings list.</li><li>Desktop IE versions 8, 9, and 10: Compatible only when running Windows 7 or newer, but not by default. Review the <a href=\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\" target=\"_blank\">Enabling TLS 1.1 and TLS 1.2 in Internet Explorer</a> article to enable TLS 1.1 or higher encryption.Windows Vista, XP and earlier are incompatible and cannot be configured to support TLS 1.1 or TLS 1.2.</li><li>Desktop IE versions 7 and below: Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile IE versions 10 and below: Not compatible with TLS 1.1 or higher encryption.</li><li>Microsoft Edge: Compatible with TLS 1.1 or higher by default.</li></ul>\n<b>Mozilla Firefox:</b>\n\n<ul><li>Mozilla Firefox: Compatible with the most recent version, regardless of operating system.</li><li>Firefox 27 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Firefox 23 to 26: Compatible, but not by default. Use about:config to enable TLS 1.1 or TLS 1.2 by updating the security.tls.version.max config value to 2 for TLS 1.1 or 3 for TLS 1.2.</li><li>Firefox 22 and below: Not compatible with TLS 1.1 or higher encryption.</li></ul>\n<b>Google Chrome:</b>\n\n<ul><li>Google Chrome: Compatible with the most recent version, regardless of operating system.</li><li>Google Chrome 38 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Google Chrome 22 to 37: Compatible when running on Windows XP SP3, Vista, or newer (desktop), OS X 10.6 (Snow Leopard) or newer (desktop), or Android 2.3 (Gingerbread) or newer (mobile).</li><li>Google Chrome 21 and below: Not compatible with TLS 1.1 or higher encryption.</li></ul>\n<b>Google Android OS Browser:</b>\n\n<ul><li>Android 5.0 (Lollipop) and higher: Compatible with TLS 1.1 or higher by default.</li><li>Android 4.4 (KitKat) to 4.4.4 : May be compatible with TLS 1.1 or higher. Some devices with Android 4.4.x may not support TLS 1.1 or higher.</li><li>Android 4.3 (Jelly Bean) and below: Not compatible with TLS 1.1 or higher encryption.</li></ul>\n<b>Apple Safari:</b>\n\n<ul><li>Desktop Safari versions 7 and higher for OS X 10.9 (Mavericks) and higher: Compatible with TLS 1.1 or higher by default.</li><li>Desktop Safari versions 6 and below for OS X 10.8 (Mountain Lion) and below: Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile Safari versions 5 and higher for iOS 5 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Mobile Safari for iOS 4 and below: Not compatible with TLS 1.1 or higher encryption.</li></ul>\n \n\n<p dir=\"ltr\"><b>Web Browser User Experience</b><br>Depending on the user access point, when a user tries to access the org with a web browser using TLS 1.0 after the org requires TLS 1.1 or higher for HTTPS connections, the user will see an error message with recommended steps to resolve the incompatibility.<br> </p>\n\n<p dir=\"ltr\"><b>How to test for support of TLS 1.1 or TLS 1.2</b><br>A way to test for TLS 1.1 and TLS 1.2 compatibility is to use the Qualsys SSL Labs test <a href=\"https://www.ssllabs.com/ssltest/\" target=\"_blank\">site</a> if your https endpoints are publicly accessible. In the test results, ensure that TLS 1.1 and/or TLS 1.2 support is reported as working properly.</p>\n\n<p dir=\"ltr\"><b>What if I use an intercepting HTTPS proxy server in my network?</b><br>Some networks intercept outbound HTTPS traffic by using a proxy server that creates its own certificates so that the unencrypted communications with Coveo and other endpoints can be inspected. Those proxy servers create their own TLS connections to Coveo. Networks that use this type of proxy server need to ensure that it supports TLS 1.2 and prefers TLS 1.2 when connecting to Coveo. Irregular behavior may be observed if the proxy server either does support TLS 1.0 or prefers TLS 1.0 over TLS 1.2 when connecting to remote endpoints.<br><br>The general configuration recommendations regarding intercepting HTTPS proxy servers regarding the TLS 1.0 disablement are the following:<br>Update the intercepting HTTPS proxy server to not intercept the HTTPS connections to Coveo Services. This is preferred as it ensures end-to-end confidentiality between the end-users&#39; web browsers and Coveo.<br><br>If HTTPS interception is required by the company&#39;s policy or otherwise cannot be removed or exempted, update that proxy server to a newer version that supports TLS 1.2 or, at least, TLS 1.1. When the critical update is enabled, the intercepting HTTPS proxy server will have its requests at the application layer rejected if it negotiated TLS 1.0 with Coveo.<br><br>If the intercepting HTTPS proxy server does support TLS 1.2, but prefers TLS 1.0 by using TLS 1.0 in its initial ClientHello messages, update the proxy server&#39;s configuration to prefer TLS 1.2 over TLS 1.0 when connecting to Coveo Services.<br><br><u><b>Connectors and API Integrations:</b></u><br>Connectors used for indexing and API calls, please ensure that the TLS 1.1 and/or TLS 1.2 encryption protocols are enabled in those integrations.</p>\n<br><b>Java (Oracle): Compatible with the most recent version, regardless of operating system:</b>\n\n<ul><li>Java 8 (1.8) and higher: Compatible with TLS 1.1 or higher by default.</li><li>Java 7 (1.7): Enable TLS 1.1 and TLS 1.2 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 and TLS 1.2 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li><li>Java 6 (1.6) update 111 and higher: Enable TLS 1.1 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. This Java 6 update and newer updates are not publicly available and require a support contract for Java 6 from Oracle.</li><li>Java 6 (1.6) and below (publicly available version): Not compatible with TLS 1.1 or higher encryption. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li></ul>\n<b>Java (IBM):</b>\n\n<ul><li>Java 8: Compatible with TLS 1.1 or higher by default. You may need to set com.ibm.jsse2.overrideDefaultTLS=true if your application or a library called it by it uses SSLContext.getinstance(&quot;TLS&quot;).</li><li>Java 7 and higher, Java 6.0.1 service refresh 1 (J9 VM2.6) and higher, Java 6 service refresh 10 and higher: Enable TLS 1.2 using the https.protocols Java system property for HttpsURLConnection and the com.ibm.jsse2.overrideDefaultProtocol Java system property for SSLSocket and SSLEngine connections, as recommended by IBM&#39;s documentation. You may also need to set com.ibm.jsse2.overrideDefaultTLS=true.</li></ul>\n<b>.NET: Compatible with the most recent version when running in an operating system that supports TLS 1.1 or TLS 1.2:</b>\n\n<ul><li>.NET 4.6 and higher: Compatible with TLS 1.1 or higher by default.</li><li>.NET 4.5 to 4.5.2: .NET 4.5, 4.5.1, and 4.5.2 do not enable TLS 1.1 and TLS 1.2 by default. Two options exist to enable these, as described below.<br>\tOption 1:<br>\t.NET applications may directly enable TLS 1.1 and TLS 1.2 in their software code by setting System.Net.ServicePointManager.SecurityProtocol to enable SecurityProtocolType.Tls12 and SecurityProtocolType.Tls11. The following C# code is an example:<br>\tSystem.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;<br>\tOption 2:<br>\tIt may be possible to enable TLS 1.2 by default without modifying the source code by setting the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\.NETFramework\\v4.0.30319&quot;. Although the version number in those registry keys is 4.0.30319, the .NET 4.5, 4.5.1, and 4.5.2 frameworks also use these values. Those registry keys, however, will enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. It is thus advisable to test this change before deploying it to your production servers. This is also available as a registry import file. These registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 4.0: .NET 4.0 does not enable TLS 1.2 by default. To enable TLS 1.2 by default, it is possible to install .NET Framework 4.5, or a newer version, and set the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\.NETFramework\\v4.0.30319&quot;. Those registry keys, however, may enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. We recommend testing this change before deploying it to your production servers. This is also available as a registry import file.<br>\tThese registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 3.5 and below: Not compatible with TLS 1.1 or higher encryption</li></ul>\n<b>Python:</b> <b>Compatible with the most recent version when running on an operating system that supports TLS 1.1 or TLS 1.2:</b>\n\n<ul><li>Python 2.7.9 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Python 2.7.8 and below: Not compatible with TLS 1.1 or higher encryption</li><li>Ruby: Compatible with the most recent version when linked to OpenSSL 1.0.1 or higher.</li><li>Ruby 2.0.0: TLS 1.2 is enabled by default when used with OpenSSL 1.0.1 or higher. Using the :TLSv1_2 (preferred) or :TLSv1_1 symbols with an SSLContext&#39;s ssl_version helps ensure that TLS 1.0 or earlier is disabled.</li><li>Ruby 1.9.3 and below: The :TLSv1_2 symbol does not exist in 1.9.3 and below, but it is possible to patch Ruby to add that symbol and compile Ruby with OpenSSL 1.0.1 or higher.</li></ul>\n<b>Microsoft WinINet: Compatible with the most recent version:</b>\n\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2008 R2 to 2012 / Windows 7 and 8 : Compatible by default if Internet Explorer 11 is installed. If Internet Explorer 8, 9, or 10 is installed, then TLS 1.1 and TLS 1.2 will need to get enabled by the user or an administrator for compatibility. Review the Enabling TLS 1.1 and TLS 1.2 in Internet Explorer article to enable TLS 1.1 or higher encryption.</li><li>Windows Server 2008 and below / Windows Vista and below: Not compatible with TLS 1.1 or higher encryption.</li></ul>\n<b>Microsoft Secure Channel (Schannel): Compatible with the most recent version:</b>\n\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2012 / Windows 8 : TLS 1.1 and TLS 1.2 are disabled by default, but are available if enabled by an application. TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 R2 / Windows 7: Compatible by default in client mode when Internet Explorer 11 is installed. If Internet Explorer 11 is not installed or if Coveo needs to connect to a service running on this type of system, then TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 and below / Windows Vista and below : Not compatible with TLS 1.1 or higher encryption.</li></ul>\n<b>Microsoft WinHTTP and Webio:</b>\n\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher : Compatible with TLS 1.1 and TLS 1.2 by default</li><li>Windows Server 2008 R2 SP1 and 2012 / Windows 7 SP1: With KB3140245 applied, Webio is compatible by default, and WinHTTP can be configured via registry settings to enable TLS 1.1 and TLS 1.2.</li><li>Windows Server 2008 and below / Windows Vista and below: Not compatible with TLS 1.1 or higher encryption</li></ul>\n<b>OpenSSL: Compatible with the most recent version, regardless of operating system.</b>\n\n<ul><li>OpenSSL 1.0.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>OpenSSL 1.0.0 and below : Not compatible with TLS 1.1 or higher encryption.</li></ul>\n<b>Mozilla NSS : Compatible with the most recent version, regardless of operating system.</b>\n\n<ul><li>3.15.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>3.14 to 3.15 : Compatible with TLS 1.1, but not with TLS 1.2.</li><li>3.13.6 and below : Not compatible with TLS 1.1 or higher encryption. </li></ul>\nCREDITS<br>*This note was largely inspired by this <a href=\"https://help.salesforce.com/articleView?id=000221207&amp;type=1\" target=\"_blank\">knowledge article.</a><br> ",
      "sysuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
      "sysprintableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
      "sflastpublisheddate" : 1517925327000,
      "systransactionid" : 161139,
      "sfurlname" : "2321",
      "sfsystemmodstamp" : 1518176788000,
      "sfisvisibleinapp" : "true",
      "sfcoveoversionc" : "Coveo Enterprise Search",
      "sysconcepts" : "Internet Explorer ; import file ; web browsers ; protocols ; encryption ; connections ; endpoints ; networks ; applications ; integrations ; communications ; proxy servers ; Coveo services ; compatibility ; Oracle Java ; intercepting",
      "sfkbversionnumber" : "4",
      "concepts" : "Internet Explorer ; import file ; web browsers ; protocols ; encryption ; connections ; endpoints ; networks ; applications ; integrations ; communications ; proxy servers ; Coveo services ; compatibility ; Oracle Java ; intercepting",
      "printableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
      "documenttype" : "article",
      "sfkbarticlekavid" : "ka10d0000004UyjAAE",
      "sysindexeddate" : 1518187607000,
      "sfknowledgearticleid" : "kA132000000XcfYCAS",
      "sfcreatedbyid" : "00560000002MKBSAA4",
      "sfconnectorc" : "N/A",
      "permanentid" : "274b0d46b61019acad831e4dfdc8179034118859b55ddaf2e4b7efff1eec",
      "syslanguage" : [ "English" ],
      "transactionid" : 161139,
      "sfisvisibleinprm" : "true",
      "title" : "Coveo disabling TLS 1.0",
      "sfversionnumber" : 4,
      "sfarticlenumber" : "000002321",
      "date" : 1518176788000,
      "objecttype" : "KB Article",
      "allmetadatavalues" : "{\"kav_lastmodifiedby.attribute.type\": [\"User\"], \"coveo_short_id\": [\"kA132000000XcfY\"], \"sflastmodifiedbyname\": [\"Bruno-Pascal Roy-Dumas\"], \"kav_coveo_version__c__html_stripped\": [\"Coveo Enterprise Search\"], \"fileextension\": [\"\"], \"sfdcexpandedproduct\": [\"All;All|Coveo Enterprise Search\"], \"kav_createdby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"sflanguage\": [\"en_US\"], \"kav_createdby.attribute.type\": [\"User\"], \"kav_createdby.id\": [\"00560000002MKBSAA4\"], \"kav_language\": [\"en_US\"], \"sfsitecoreversionc\": [\"N/A\"], \"sourcetype\": [\"Salesforce\"], \"title\": [\"Coveo disabling TLS 1.0\"], \"source\": [\"Salesforce Public Items\"], \"kav_owner.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"parents\": [\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-16\\\"?><parents><parent name=\\\"Organization\\\" uri=\\\"https://na61.salesforce.com/home/home.jsp\\\" /><parent name=\\\"KB_Article__ka\\\" uri=\\\"http://www.salesforce.com/org:organization/articletype:KB_Article\\\" /><parent name=\\\"Coveo disabling TLS 1.0\\\" uri=\\\"https://na61.salesforce.com/kA132000000XcfY\\\" /></parents>\"], \"sfisvisibleinprm\": [true], \"kav_title\": [\"Coveo disabling TLS 1.0\"], \"kav_isvisibleincsp\": [true], \"sfcreateddate\": [1517925220], \"hashtmlversion\": [true], \"kav_versionnumber\": [4], \"sfcreatedbyname\": [\"Karel Mpungi\"], \"sflastpublisheddate\": [1517925327], \"objecttypelabel\": [\"KB Article\"], \"kav_cause__c__html_stripped\": [\"Why is this happening? \\n At Coveo, Security is our #1 value and Coveo is focused on continually helping our customers improve their security by using the latest security protocols. On March 26th, 2018, Coveo will require TLS 1.1 and later encryption protocol in an effort to maintain the highest security standards and promote the safety of customer data.\"], \"originalhtmlcharset\": [1200], \"coveo_connector_hasbinarydata\": [false], \"kav_lastpublisheddate\": [1517925327], \"sfsystemmodstamp\": [1518176788], \"ka_attribute.type\": [\"KB_Article__ka\"], \"sfdcproduct\": [\"Coveo Enterprise Search\"], \"kav_resolution__c__html_stripped\": [\"Internet Browsers:\\n \\n\\n You and your users will experience issues accessing Coveo if you have disabled the supported encryption protocols or if a browser other than the supported browsers is being used to connect to Coveo.\\n \\nIf you experience errors, you need to ensure your browsers are compatible with TLS 1.1 or higher. If your browser is not compatible with TLS 1.1 or higher after we make this change, your users will NOT be able to access Coveo Services. We recommend that you begin planning to support TLS 1.1 and TLS 1.2 as soon as possible. \\n \\n NOTE: The minimum required action is to enable TLS 1.1 or TLS 1.2 encryption protocol within your browser security settings. Although we recommend disabling TLS 1.0 for a more secure browsing experience, it is not required. For example, if a user has protocols TLS 1.0, TLS 1.1, and TLS 1.2 enabled within their browser's security settings, they will be able to successfully connect to Coveo with that browser after Coveo disables TLS 1.0 on August 21st, 2017.\\n Refer to the compatibility guidelines below:\\n \\n Internet Explorer (IE): \\n\\n Microsoft Internet Explorer (IE):\\u00a0Review the  Enabling TLS 1.1 and TLS 1.2 in Internet Explorer knowledge  article for more details. Desktop and mobile IE version 11:\\u00a0If you see the \\\"Stronger security is required\\\" error message, you may need to turn off the TLS 1.0 setting in the Internet Options | Advanced Settings list. Desktop IE versions 8, 9, and 10:\\u00a0Compatible only when running Windows 7 or newer, but not by default. Review the  Enabling TLS 1.1 and TLS 1.2 in Internet Explorer  article to enable TLS 1.1 or higher encryption.Windows Vista, XP and earlier are incompatible and cannot be configured to support TLS 1.1 or TLS 1.2. Desktop IE versions 7 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. Mobile IE versions 10 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. Microsoft Edge:\\u00a0Compatible with TLS 1.1 or higher by default. \\n Mozilla Firefox: \\n\\n Mozilla Firefox:\\u00a0Compatible with the most recent version, regardless of operating system. Firefox 27 and higher: Compatible with TLS 1.1 or higher by default. Firefox 23 to 26:\\u00a0Compatible, but not by default.\\u00a0Use about:config to enable TLS 1.1 or TLS 1.2 by updating the security.tls.version.max config value to 2 for TLS 1.1 or 3 for TLS 1.2. Firefox 22 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n Google Chrome: \\n\\n Google Chrome:\\u00a0Compatible with the most recent version, regardless of operating system. Google Chrome 38 and higher:\\u00a0Compatible with TLS 1.1 or higher by default. Google Chrome 22 to 37:\\u00a0Compatible when running on Windows XP SP3, Vista, or newer (desktop), OS X 10.6 (Snow Leopard) or newer (desktop), or Android 2.3 (Gingerbread) or newer (mobile). Google Chrome 21 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n Google Android OS Browser: \\n\\n Android 5.0 (Lollipop) and higher:\\u00a0Compatible with TLS 1.1 or higher by default. Android 4.4 (KitKat) to 4.4.4 :\\u00a0May be compatible with TLS 1.1 or higher. Some devices with Android 4.4.x may not support TLS 1.1 or higher. Android 4.3 (Jelly Bean) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n Apple Safari: \\n\\n Desktop Safari versions 7 and higher for OS X 10.9 (Mavericks) and higher:\\u00a0Compatible with TLS 1.1 or higher by default. Desktop Safari versions 6 and below for OS X 10.8 (Mountain Lion) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. Mobile Safari versions 5 and higher for iOS 5 and higher:\\u00a0Compatible with TLS 1.1 or higher by default. Mobile Safari for iOS 4 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n\\u00a0\\n\\n Web Browser User Experience \\n Depending on the user access point, when a user tries to access the org with a web browser using TLS 1.0 after the org requires TLS 1.1 or higher for HTTPS connections, the user will see an error message with recommended steps to resolve the incompatibility. \\n \\u00a0\\n \\n\\n How to test for support of TLS 1.1 or TLS 1.2 \\n A way to test for TLS 1.1 and TLS 1.2 compatibility is to use the Qualsys SSL Labs test  site  if your https endpoints are publicly accessible. In the test results, ensure that TLS 1.1 and/or TLS 1.2 support is reported as working properly.\\n \\n\\n What if I use an intercepting HTTPS proxy server in my network? \\n Some networks intercept outbound HTTPS traffic by using a proxy server that creates its own certificates so that the unencrypted communications with Coveo and other endpoints can be inspected. Those proxy servers create their own TLS connections to Coveo. Networks that use this type of proxy server need to ensure that it supports TLS 1.2 and prefers TLS 1.2 when connecting to Coveo. Irregular behavior may be observed if the proxy server either does support TLS 1.0 or prefers TLS 1.0 over TLS 1.2 when connecting to remote endpoints. \\n \\n The general configuration recommendations regarding intercepting HTTPS proxy servers regarding the TLS 1.0 disablement are the following: \\n Update the intercepting HTTPS proxy server to not intercept the HTTPS connections to Coveo Services. This is preferred as it ensures end-to-end confidentiality between the end-users' web browsers and Coveo. \\n \\n If HTTPS interception is required by the company's policy or otherwise cannot be removed or exempted, update that proxy server to a newer version that supports TLS 1.2 or, at least, TLS 1.1. When the critical update is enabled, the intercepting HTTPS proxy server will have its requests at the application layer rejected if it negotiated TLS 1.0 with Coveo. \\n \\n If the intercepting HTTPS proxy server does support TLS 1.2, but prefers TLS 1.0 by using TLS 1.0 in its initial ClientHello messages, update the proxy server's configuration to prefer TLS 1.2 over TLS 1.0 when connecting to Coveo Services. \\n \\n Connectors and API Integrations: \\n Connectors used for indexing and API calls, please ensure that the TLS 1.1 and/or TLS 1.2 encryption protocols are enabled in those integrations.\\n \\n \\n Java (Oracle):\\u00a0Compatible with the most recent version, regardless of operating system: \\n\\n Java 8 (1.8) and higher:\\u00a0Compatible with TLS 1.1 or higher by default. Java 7 (1.7):\\u00a0Enable TLS 1.1 and TLS 1.2 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 and TLS 1.2 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn't feasible. Java 6 (1.6) update 111 and higher:\\u00a0Enable TLS 1.1 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. This Java 6 update and newer updates are not publicly available and require a support contract for Java 6 from Oracle. Java 6 (1.6) and below (publicly available version):\\u00a0Not compatible with TLS 1.1 or higher encryption. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn't feasible. \\n Java (IBM): \\n\\n Java 8:\\u00a0Compatible with TLS 1.1 or higher by default. You may need to set com.ibm.jsse2.overrideDefaultTLS=true if your application or a library called it by it uses SSLContext.getinstance(\\\"TLS\\\"). Java 7 and higher, Java 6.0.1 service refresh 1 (J9 VM2.6) and higher, Java 6 service refresh 10 and higher:\\u00a0Enable TLS 1.2 using the https.protocols Java system property for HttpsURLConnection and the com.ibm.jsse2.overrideDefaultProtocol Java system property for SSLSocket and SSLEngine connections, as recommended by IBM's documentation. You may also need to set com.ibm.jsse2.overrideDefaultTLS=true. \\n .NET:\\u00a0Compatible with the most recent version when running in an operating system that supports TLS 1.1 or TLS 1.2: \\n\\n .NET 4.6 and higher:\\u00a0Compatible with TLS 1.1 or higher by default. .NET 4.5 to 4.5.2:\\u00a0.NET 4.5, 4.5.1, and 4.5.2 do not enable TLS 1.1 and TLS 1.2 by default. Two options exist to enable these, as described below. \\n \\tOption 1: \\n \\t.NET applications may directly enable TLS 1.1 and TLS 1.2 in their software code by setting System.Net.ServicePointManager.SecurityProtocol to enable SecurityProtocolType.Tls12 and SecurityProtocolType.Tls11. The following C# code is an example: \\n \\tSystem.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls; \\n \\tOption 2: \\n \\tIt may be possible to enable TLS 1.2 by default without modifying the source code by setting the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don't exist: \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319\\\" and \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319\\\". Although the version number in those registry keys is 4.0.30319, the .NET 4.5, 4.5.1, and 4.5.2 frameworks also use these values. Those registry keys, however, will enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. It is thus advisable to test this change before deploying it to your production servers. This is also available as a registry import file. These registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value. .NET 4.0:\\u00a0.NET 4.0 does not enable TLS 1.2 by default. To enable TLS 1.2 by default, it is possible to install .NET Framework 4.5, or a newer version, and set the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don't exist: \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319\\\" and \\\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319\\\". Those registry keys, however, may enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. We recommend testing this change before deploying it to your production servers. This is also available as a registry import file. \\n \\tThese registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value. .NET 3.5 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption \\n Python: \\u00a0 Compatible with the most recent version when running on an operating system that supports TLS 1.1 or TLS 1.2: \\n\\n Python 2.7.9 and higher:\\u00a0Compatible with TLS 1.1 or higher by default. Python 2.7.8 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption Ruby:\\u00a0Compatible with the most recent version when linked to OpenSSL 1.0.1 or higher. Ruby 2.0.0:\\u00a0TLS 1.2 is enabled by default when used with OpenSSL 1.0.1 or higher. Using the :TLSv1_2 (preferred) or :TLSv1_1 symbols with an SSLContext's ssl_version helps ensure that TLS 1.0 or earlier is disabled. Ruby 1.9.3 and below:\\u00a0The :TLSv1_2 symbol does not exist in 1.9.3 and below, but it is possible to patch Ruby to add that symbol and compile Ruby with OpenSSL 1.0.1 or higher. \\n Microsoft WinINet:\\u00a0Compatible with the most recent version: \\n\\n Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default. Windows Server 2008 R2 to 2012 / Windows 7 and 8 :\\u00a0Compatible by default if Internet Explorer 11 is installed. If Internet Explorer 8, 9, or 10 is installed, then TLS 1.1 and TLS 1.2 will need to get enabled by the user or an administrator for compatibility. Review the Enabling TLS 1.1 and TLS 1.2 in Internet Explorer article to enable TLS 1.1 or higher encryption. Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n Microsoft Secure Channel (Schannel):\\u00a0Compatible with the most recent version: \\n\\n Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default. Windows Server 2012 / Windows 8 :\\u00a0TLS 1.1 and TLS 1.2 are disabled by default, but are available if enabled by an application. TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file. Windows Server 2008 R2 / Windows 7:\\u00a0Compatible by default in client mode when Internet Explorer 11 is installed. If Internet Explorer 11 is not installed or if Coveo needs to connect to a service running on this type of system, then TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file. Windows Server 2008 and below / Windows Vista and below :\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n Microsoft WinHTTP and Webio: \\n\\n Windows Server 2012 R2 and higher / Windows 8.1 and higher\\u00a0:\\u00a0Compatible with TLS 1.1 and TLS 1.2 by default Windows Server 2008 R2 SP1 and 2012 / Windows 7 SP1:\\u00a0With KB3140245 applied, Webio is compatible by default, and WinHTTP can be configured via registry settings to enable TLS 1.1 and TLS 1.2. Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption \\n OpenSSL: Compatible with the most recent version, regardless of operating system. \\n\\n OpenSSL 1.0.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default. OpenSSL 1.0.0 and below :\\u00a0Not compatible with TLS 1.1 or higher encryption. \\n Mozilla NSS :\\u00a0Compatible with the most recent version, regardless of operating system. \\n\\n 3.15.1 and higher : Compatible with TLS 1.1 or higher by default. 3.14 to 3.15 : Compatible with TLS 1.1, but not with TLS 1.2. 3.13.6 and below : Not compatible with TLS 1.1 or higher encryption.\\u00a0 \\nCREDITS \\n *This note was largely inspired by this  knowledge article. \\n \\u00a0\"], \"clickableuri\": [\"https://na61.salesforce.com/kA132000000XcfY\"], \"sftitle\": [\"Coveo disabling TLS 1.0\"], \"kav_owner.id\": [\"00560000002MKBSAA4\"], \"sfisvisibleinapp\": [true], \"ka_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__ka/kA132000000XcfYCAS\"], \"sfdcarticletype\": [\"How To/Question\"], \"kav_cause__c\": [\"<b>Why is this happening?</b><br>At Coveo, Security is our #1 value and Coveo is focused on continually helping our customers improve their security by using the latest security protocols. On March 26th, 2018, Coveo will require TLS 1.1 and later encryption protocol in an effort to maintain the highest security standards and promote the safety of customer data.\"], \"sfislatestversion\": [true], \"sfcausec\": [\"<b>Why is this happening?</b><br>At Coveo, Security is our #1 value and Coveo is focused on continually helping our customers improve their security by using the latest security protocols. On March 26th, 2018, Coveo will require TLS 1.1 and later encryption protocol in an effort to maintain the highest security standards and promote the safety of customer data.\"], \"contenttype\": [\"binarydata\"], \"sfurlname\": [\"2321\"], \"ka_id\": [\"kA132000000XcfYCAS\"], \"kav_datacategoryselections.datacategoryname\": [\"Coveo_Enterprise_Search;How_To\"], \"coveo_url\": [\"https://na61.salesforce.com/kA132000000XcfY\"], \"kav_urlname\": [\"2321\"], \"kav_dc_expanded_product\": [\"All;All|Coveo Enterprise Search\"], \"foldingcollection\": [\"5ed95d1a25c3289de426aefcc8243020e15b07e40fa18f7d4db1510a82fd\"], \"body\": [\"<html>   <body>     <div style=\\\"background-color: #fff;border: 2px solid #BBC5CC;border-radius: 4px;float: left;font-family: lato;margin-left: 15px;margin-right: 15px;margin-bottom: 4%;padding: 10px;width: 60%;\\\">       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Description         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> <b>What is TLS?</b><br>TLS stands for \\u201cTransport Layer Security.\\u201d It is a protocol that provides privacy and data integrity between two communicating applications. It\\u2019s the most widely deployed security protocol used today, and is used for web browsers and other applications that require data to be securely exchanged over a network. TLS ensures that a connection to a remote endpoint is the intended endpoint through encryption and endpoint identity verification. The versions of TLS, to date, are TLS 1.0, 1.1 and 1.2.<br>Coveo Administration Console and API connections, along with email delivery, use TLS as a key component of their security. HTTPS (web) and STARTTLS SMTP (email) also use TLS as a key component of their security.<br>\\u00a0\\n<p dir=\\\"ltr\\\"><b>What is the change?</b><br>Coveo is requiring an upgrade to TLS 1.1 or higher by March 26<sup>th</sup> 2018. On that date we will disable the TLS 1.0 encryption protocol, which will prevent customers still using it from accessing some of their Coveo services.<br><br><b>How will customers be impacted?</b><br>After Coveo disables TLS 1.0, any inbound connections to or outbound connections from your Coveo org that rely on TLS 1.0 will fail. This will impact a number of Coveo services (listed below), including access to Usage Analytics, Search, Indexing and Administration websites.<br><br><b>How can customers avoid a service disruption?</b><br>The action required by your organization will depend on which channels are used to access your Coveo org as well as which Coveo services are in use by your org. Please click the relevant topic below to be directed to the required actions pages(s).<br><br><br><br><br>\\u00a0</p></div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Environment         </div>       </div>       <br/>       <table>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Product</td>           <td></td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Sitecore Version</td>           <td>N/A</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Connector</td>           <td>N/A</td>         </tr>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Published</td>           <td>1517925327</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Version</td>           <td></td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Build</td>           <td></td>         </tr>       </table>       <br/>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Cause         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> <b>Why is this happening?</b><br>At Coveo, Security is our #1 value and Coveo is focused on continually helping our customers improve their security by using the latest security protocols. On March 26th, 2018, Coveo will require TLS 1.1 and later encryption protocol in an effort to maintain the highest security standards and promote the safety of customer data.</div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Resolution         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> <p dir=\\\"ltr\\\"><u><b>Internet Browsers:</b></u></p>\\n\\n<p dir=\\\"ltr\\\">You and your users will experience issues accessing Coveo if you have disabled the supported encryption protocols or if a browser other than the supported browsers is being used to connect to Coveo.</p>\\nIf you experience errors, you need to ensure your browsers are compatible with TLS 1.1 or higher. If your browser is not compatible with TLS 1.1 or higher after we make this change, your users will NOT be able to access Coveo Services. We recommend that you begin planning to support TLS 1.1 and TLS 1.2 as soon as possible.<br><br>NOTE: The minimum required action is to enable TLS 1.1 or TLS 1.2 encryption protocol within your browser security settings. Although we recommend disabling TLS 1.0 for a more secure browsing experience, it is not required. For example, if a user has protocols TLS 1.0, TLS 1.1, and TLS 1.2 enabled within their browser&#39;s security settings, they will be able to successfully connect to Coveo with that browser after Coveo disables TLS 1.0 on August 21st, 2017.\\n<p dir=\\\"ltr\\\">Refer to the compatibility guidelines below:</p>\\n<b>Internet Explorer (IE):</b>\\n\\n<ul><li>Microsoft Internet Explorer (IE):\\u00a0Review the<a href=\\\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\\\" target=\\\"_blank\\\"> Enabling TLS 1.1 and TLS 1.2 in Internet Explorer knowledge</a> article for more details.</li><li>Desktop and mobile IE version 11:\\u00a0If you see the &quot;Stronger security is required&quot; error message, you may need to turn off the TLS 1.0 setting in the Internet Options | Advanced Settings list.</li><li>Desktop IE versions 8, 9, and 10:\\u00a0Compatible only when running Windows 7 or newer, but not by default. Review the <a href=\\\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\\\" target=\\\"_blank\\\">Enabling TLS 1.1 and TLS 1.2 in Internet Explorer</a> article to enable TLS 1.1 or higher encryption.Windows Vista, XP and earlier are incompatible and cannot be configured to support TLS 1.1 or TLS 1.2.</li><li>Desktop IE versions 7 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile IE versions 10 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Microsoft Edge:\\u00a0Compatible with TLS 1.1 or higher by default.</li></ul>\\n<b>Mozilla Firefox:</b>\\n\\n<ul><li>Mozilla Firefox:\\u00a0Compatible with the most recent version, regardless of operating system.</li><li>Firefox 27 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Firefox 23 to 26:\\u00a0Compatible, but not by default.\\u00a0Use about:config to enable TLS 1.1 or TLS 1.2 by updating the security.tls.version.max config value to 2 for TLS 1.1 or 3 for TLS 1.2.</li><li>Firefox 22 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Google Chrome:</b>\\n\\n<ul><li>Google Chrome:\\u00a0Compatible with the most recent version, regardless of operating system.</li><li>Google Chrome 38 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Google Chrome 22 to 37:\\u00a0Compatible when running on Windows XP SP3, Vista, or newer (desktop), OS X 10.6 (Snow Leopard) or newer (desktop), or Android 2.3 (Gingerbread) or newer (mobile).</li><li>Google Chrome 21 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Google Android OS Browser:</b>\\n\\n<ul><li>Android 5.0 (Lollipop) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Android 4.4 (KitKat) to 4.4.4 :\\u00a0May be compatible with TLS 1.1 or higher. Some devices with Android 4.4.x may not support TLS 1.1 or higher.</li><li>Android 4.3 (Jelly Bean) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Apple Safari:</b>\\n\\n<ul><li>Desktop Safari versions 7 and higher for OS X 10.9 (Mavericks) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Desktop Safari versions 6 and below for OS X 10.8 (Mountain Lion) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile Safari versions 5 and higher for iOS 5 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Mobile Safari for iOS 4 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n\\u00a0\\n\\n<p dir=\\\"ltr\\\"><b>Web Browser User Experience</b><br>Depending on the user access point, when a user tries to access the org with a web browser using TLS 1.0 after the org requires TLS 1.1 or higher for HTTPS connections, the user will see an error message with recommended steps to resolve the incompatibility.<br>\\u00a0</p>\\n\\n<p dir=\\\"ltr\\\"><b>How to test for support of TLS 1.1 or TLS 1.2</b><br>A way to test for TLS 1.1 and TLS 1.2 compatibility is to use the Qualsys SSL Labs test <a href=\\\"https://www.ssllabs.com/ssltest/\\\" target=\\\"_blank\\\">site</a> if your https endpoints are publicly accessible. In the test results, ensure that TLS 1.1 and/or TLS 1.2 support is reported as working properly.</p>\\n\\n<p dir=\\\"ltr\\\"><b>What if I use an intercepting HTTPS proxy server in my network?</b><br>Some networks intercept outbound HTTPS traffic by using a proxy server that creates its own certificates so that the unencrypted communications with Coveo and other endpoints can be inspected. Those proxy servers create their own TLS connections to Coveo. Networks that use this type of proxy server need to ensure that it supports TLS 1.2 and prefers TLS 1.2 when connecting to Coveo. Irregular behavior may be observed if the proxy server either does support TLS 1.0 or prefers TLS 1.0 over TLS 1.2 when connecting to remote endpoints.<br><br>The general configuration recommendations regarding intercepting HTTPS proxy servers regarding the TLS 1.0 disablement are the following:<br>Update the intercepting HTTPS proxy server to not intercept the HTTPS connections to Coveo Services. This is preferred as it ensures end-to-end confidentiality between the end-users&#39; web browsers and Coveo.<br><br>If HTTPS interception is required by the company&#39;s policy or otherwise cannot be removed or exempted, update that proxy server to a newer version that supports TLS 1.2 or, at least, TLS 1.1. When the critical update is enabled, the intercepting HTTPS proxy server will have its requests at the application layer rejected if it negotiated TLS 1.0 with Coveo.<br><br>If the intercepting HTTPS proxy server does support TLS 1.2, but prefers TLS 1.0 by using TLS 1.0 in its initial ClientHello messages, update the proxy server&#39;s configuration to prefer TLS 1.2 over TLS 1.0 when connecting to Coveo Services.<br><br><u><b>Connectors and API Integrations:</b></u><br>Connectors used for indexing and API calls, please ensure that the TLS 1.1 and/or TLS 1.2 encryption protocols are enabled in those integrations.</p>\\n<br><b>Java (Oracle):\\u00a0Compatible with the most recent version, regardless of operating system:</b>\\n\\n<ul><li>Java 8 (1.8) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Java 7 (1.7):\\u00a0Enable TLS 1.1 and TLS 1.2 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 and TLS 1.2 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li><li>Java 6 (1.6) update 111 and higher:\\u00a0Enable TLS 1.1 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. This Java 6 update and newer updates are not publicly available and require a support contract for Java 6 from Oracle.</li><li>Java 6 (1.6) and below (publicly available version):\\u00a0Not compatible with TLS 1.1 or higher encryption. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li></ul>\\n<b>Java (IBM):</b>\\n\\n<ul><li>Java 8:\\u00a0Compatible with TLS 1.1 or higher by default. You may need to set com.ibm.jsse2.overrideDefaultTLS=true if your application or a library called it by it uses SSLContext.getinstance(&quot;TLS&quot;).</li><li>Java 7 and higher, Java 6.0.1 service refresh 1 (J9 VM2.6) and higher, Java 6 service refresh 10 and higher:\\u00a0Enable TLS 1.2 using the https.protocols Java system property for HttpsURLConnection and the com.ibm.jsse2.overrideDefaultProtocol Java system property for SSLSocket and SSLEngine connections, as recommended by IBM&#39;s documentation. You may also need to set com.ibm.jsse2.overrideDefaultTLS=true.</li></ul>\\n<b>.NET:\\u00a0Compatible with the most recent version when running in an operating system that supports TLS 1.1 or TLS 1.2:</b>\\n\\n<ul><li>.NET 4.6 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>.NET 4.5 to 4.5.2:\\u00a0.NET 4.5, 4.5.1, and 4.5.2 do not enable TLS 1.1 and TLS 1.2 by default. Two options exist to enable these, as described below.<br>\\tOption 1:<br>\\t.NET applications may directly enable TLS 1.1 and TLS 1.2 in their software code by setting System.Net.ServicePointManager.SecurityProtocol to enable SecurityProtocolType.Tls12 and SecurityProtocolType.Tls11. The following C# code is an example:<br>\\tSystem.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;<br>\\tOption 2:<br>\\tIt may be possible to enable TLS 1.2 by default without modifying the source code by setting the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot;. Although the version number in those registry keys is 4.0.30319, the .NET 4.5, 4.5.1, and 4.5.2 frameworks also use these values. Those registry keys, however, will enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. It is thus advisable to test this change before deploying it to your production servers. This is also available as a registry import file. These registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 4.0:\\u00a0.NET 4.0 does not enable TLS 1.2 by default. To enable TLS 1.2 by default, it is possible to install .NET Framework 4.5, or a newer version, and set the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot;. Those registry keys, however, may enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. We recommend testing this change before deploying it to your production servers. This is also available as a registry import file.<br>\\tThese registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 3.5 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li></ul>\\n<b>Python:</b>\\u00a0<b>Compatible with the most recent version when running on an operating system that supports TLS 1.1 or TLS 1.2:</b>\\n\\n<ul><li>Python 2.7.9 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Python 2.7.8 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li><li>Ruby:\\u00a0Compatible with the most recent version when linked to OpenSSL 1.0.1 or higher.</li><li>Ruby 2.0.0:\\u00a0TLS 1.2 is enabled by default when used with OpenSSL 1.0.1 or higher. Using the :TLSv1_2 (preferred) or :TLSv1_1 symbols with an SSLContext&#39;s ssl_version helps ensure that TLS 1.0 or earlier is disabled.</li><li>Ruby 1.9.3 and below:\\u00a0The :TLSv1_2 symbol does not exist in 1.9.3 and below, but it is possible to patch Ruby to add that symbol and compile Ruby with OpenSSL 1.0.1 or higher.</li></ul>\\n<b>Microsoft WinINet:\\u00a0Compatible with the most recent version:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2008 R2 to 2012 / Windows 7 and 8 :\\u00a0Compatible by default if Internet Explorer 11 is installed. If Internet Explorer 8, 9, or 10 is installed, then TLS 1.1 and TLS 1.2 will need to get enabled by the user or an administrator for compatibility. Review the Enabling TLS 1.1 and TLS 1.2 in Internet Explorer article to enable TLS 1.1 or higher encryption.</li><li>Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Microsoft Secure Channel (Schannel):\\u00a0Compatible with the most recent version:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2012 / Windows 8 :\\u00a0TLS 1.1 and TLS 1.2 are disabled by default, but are available if enabled by an application. TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 R2 / Windows 7:\\u00a0Compatible by default in client mode when Internet Explorer 11 is installed. If Internet Explorer 11 is not installed or if Coveo needs to connect to a service running on this type of system, then TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 and below / Windows Vista and below :\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Microsoft WinHTTP and Webio:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher\\u00a0:\\u00a0Compatible with TLS 1.1 and TLS 1.2 by default</li><li>Windows Server 2008 R2 SP1 and 2012 / Windows 7 SP1:\\u00a0With KB3140245 applied, Webio is compatible by default, and WinHTTP can be configured via registry settings to enable TLS 1.1 and TLS 1.2.</li><li>Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li></ul>\\n<b>OpenSSL: Compatible with the most recent version, regardless of operating system.</b>\\n\\n<ul><li>OpenSSL 1.0.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>OpenSSL 1.0.0 and below :\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Mozilla NSS :\\u00a0Compatible with the most recent version, regardless of operating system.</b>\\n\\n<ul><li>3.15.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>3.14 to 3.15 : Compatible with TLS 1.1, but not with TLS 1.2.</li><li>3.13.6 and below : Not compatible with TLS 1.1 or higher encryption.\\u00a0</li></ul>\\nCREDITS<br>*This note was largely inspired by this <a href=\\\"https://help.salesforce.com/articleView?id=000221207&amp;type=1\\\" target=\\\"_blank\\\">knowledge article.</a><br>\\u00a0</div>     </div>   </body> </html>\"], \"sfpublishstatus\": [\"Online\"], \"sfcreatedbyid\": [\"00560000002MKBSAA4\"], \"kav_description__c__html_stripped\": [\"What is TLS? \\n TLS stands for \\u201cTransport Layer Security.\\u201d It is a protocol that provides privacy and data integrity between two communicating applications. It\\u2019s the most widely deployed security protocol used today, and is used for web browsers and other applications that require data to be securely exchanged over a network. TLS ensures that a connection to a remote endpoint is the intended endpoint through encryption and endpoint identity verification. The versions of TLS, to date, are TLS 1.0, 1.1 and 1.2. \\n Coveo Administration Console and API connections, along with email delivery, use TLS as a key component of their security. HTTPS (web) and STARTTLS SMTP (email) also use TLS as a key component of their security. \\n \\u00a0\\n What is the change? \\n Coveo is requiring an upgrade to TLS 1.1 or higher by March 26 th  2018. On that date we will disable the TLS 1.0 encryption protocol, which will prevent customers still using it from accessing some of their Coveo services. \\n \\n How will customers be impacted? \\n After Coveo disables TLS 1.0, any inbound connections to or outbound connections from your Coveo org that rely on TLS 1.0 will fail. This will impact a number of Coveo services (listed below), including access to Usage Analytics, Search, Indexing and Administration websites. \\n \\n How can customers avoid a service disruption? \\n The action required by your organization will depend on which channels are used to access your Coveo org as well as which Coveo services are in use by your org. Please click the relevant topic below to be directed to the required actions pages(s). \\n \\n \\n \\n \\n \\u00a0\\n\"], \"kav_islatestversion\": [true], \"kav_knowledgearticleid\": [\"kA132000000XcfYCAS\"], \"sfknowledgearticleid\": [\"kA132000000XcfYCAS\"], \"sfownername\": [\"Karel Mpungi\"], \"kav_datacategoryselections.attribute.type\": [\"KB_Article__DataCategorySelection;KB_Article__DataCategorySelection\"], \"detectedtitle\": [\"Description\"], \"kav_createddate\": [1517925220], \"language\": [\"English\"], \"coveo_foldingchild\": [\"f60f1484849c1a0974b4c7aaf3096e17cdb4f430eb79400a5ad0d6106ed9\"], \"sfownerid\": [\"00560000002MKBSAA4\"], \"kav_createdby.coveo_record_size\": [2], \"kav_systemmodstamp\": [1518176788], \"objecttype\": [\"KB Article\"], \"connectortype\": [\"Salesforce2\"], \"kav_coveo_record_size\": [4], \"originaluri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US\"], \"sfisvisibleincsp\": [true], \"convertertype\": [\"TYPE_HTML\"], \"filetype\": [\"SalesforceItem\"], \"kav_owner.name\": [\"Karel Mpungi\"], \"sfcoveoversionc\": [\"Coveo Enterprise Search\"], \"sfdcexpandedarticletype\": [\"All;All|How To/Question\"], \"objecttypelabelplural\": [\"KB Articles\"], \"sfcurrencyisocode\": [\"USD\"], \"sfisdeleted\": [false], \"extractedsize\": [31650], \"size\": [35656], \"kav_summary\": [\"Coveo requires an upgrade to TLS 1.1 or higher by March 26th, 2018 in order to align with industry best practices for security and data integrity. On that date we will disable TLS 1.0. Action is required prior to this date to prevent any disruption to your production instance. This communication contains all of the information currently available on Coveo's disablement of the TLS 1.0 encryption protocol.\"], \"kav_publishstatus\": [\"Online\"], \"kav_connector__c\": [\"N/A\"], \"generateexcerpt\": [true], \"sfdescriptionc\": [\"<b>What is TLS?</b><br>TLS stands for \\u201cTransport Layer Security.\\u201d It is a protocol that provides privacy and data integrity between two communicating applications. It\\u2019s the most widely deployed security protocol used today, and is used for web browsers and other applications that require data to be securely exchanged over a network. TLS ensures that a connection to a remote endpoint is the intended endpoint through encryption and endpoint identity verification. The versions of TLS, to date, are TLS 1.0, 1.1 and 1.2.<br>Coveo Administration Console and API connections, along with email delivery, use TLS as a key component of their security. HTTPS (web) and STARTTLS SMTP (email) also use TLS as a key component of their security.<br>\\u00a0\\n<p dir=\\\"ltr\\\"><b>What is the change?</b><br>Coveo is requiring an upgrade to TLS 1.1 or higher by March 26<sup>th</sup> 2018. On that date we will disable the TLS 1.0 encryption protocol, which will prevent customers still using it from accessing some of their Coveo services.<br><br><b>How will customers be impacted?</b><br>After Coveo disables TLS 1.0, any inbound connections to or outbound connections from your Coveo org that rely on TLS 1.0 will fail. This will impact a number of Coveo services (listed below), including access to Usage Analytics, Search, Indexing and Administration websites.<br><br><b>How can customers avoid a service disruption?</b><br>The action required by your organization will depend on which channels are used to access your Coveo org as well as which Coveo services are in use by your org. Please click the relevant topic below to be directed to the required actions pages(s).<br><br><br><br><br>\\u00a0</p>\"], \"sfarticletype\": [\"KB_Article__kav\"], \"kav_lastmodifieddate\": [1517925327], \"documenttype\": [\"article\"], \"sfkbarticlekavid\": [\"ka10d0000004UyjAAE\"], \"kav_currencyisocode\": [\"USD\"], \"foldingparent\": [\"f60f1484849c1a0974b4c7aaf3096e17cdb4f430eb79400a5ad0d6106ed9\"], \"mappingtype\": [\"KB_Article\"], \"kav_isvisibleinpkb\": [true], \"sfkbversionnumber\": [4], \"kav_isvisibleinapp\": [true], \"kav_resolution__c\": [\"<p dir=\\\"ltr\\\"><u><b>Internet Browsers:</b></u></p>\\n\\n<p dir=\\\"ltr\\\">You and your users will experience issues accessing Coveo if you have disabled the supported encryption protocols or if a browser other than the supported browsers is being used to connect to Coveo.</p>\\nIf you experience errors, you need to ensure your browsers are compatible with TLS 1.1 or higher. If your browser is not compatible with TLS 1.1 or higher after we make this change, your users will NOT be able to access Coveo Services. We recommend that you begin planning to support TLS 1.1 and TLS 1.2 as soon as possible.<br><br>NOTE: The minimum required action is to enable TLS 1.1 or TLS 1.2 encryption protocol within your browser security settings. Although we recommend disabling TLS 1.0 for a more secure browsing experience, it is not required. For example, if a user has protocols TLS 1.0, TLS 1.1, and TLS 1.2 enabled within their browser&#39;s security settings, they will be able to successfully connect to Coveo with that browser after Coveo disables TLS 1.0 on August 21st, 2017.\\n<p dir=\\\"ltr\\\">Refer to the compatibility guidelines below:</p>\\n<b>Internet Explorer (IE):</b>\\n\\n<ul><li>Microsoft Internet Explorer (IE):\\u00a0Review the<a href=\\\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\\\" target=\\\"_blank\\\"> Enabling TLS 1.1 and TLS 1.2 in Internet Explorer knowledge</a> article for more details.</li><li>Desktop and mobile IE version 11:\\u00a0If you see the &quot;Stronger security is required&quot; error message, you may need to turn off the TLS 1.0 setting in the Internet Options | Advanced Settings list.</li><li>Desktop IE versions 8, 9, and 10:\\u00a0Compatible only when running Windows 7 or newer, but not by default. Review the <a href=\\\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\\\" target=\\\"_blank\\\">Enabling TLS 1.1 and TLS 1.2 in Internet Explorer</a> article to enable TLS 1.1 or higher encryption.Windows Vista, XP and earlier are incompatible and cannot be configured to support TLS 1.1 or TLS 1.2.</li><li>Desktop IE versions 7 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile IE versions 10 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Microsoft Edge:\\u00a0Compatible with TLS 1.1 or higher by default.</li></ul>\\n<b>Mozilla Firefox:</b>\\n\\n<ul><li>Mozilla Firefox:\\u00a0Compatible with the most recent version, regardless of operating system.</li><li>Firefox 27 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Firefox 23 to 26:\\u00a0Compatible, but not by default.\\u00a0Use about:config to enable TLS 1.1 or TLS 1.2 by updating the security.tls.version.max config value to 2 for TLS 1.1 or 3 for TLS 1.2.</li><li>Firefox 22 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Google Chrome:</b>\\n\\n<ul><li>Google Chrome:\\u00a0Compatible with the most recent version, regardless of operating system.</li><li>Google Chrome 38 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Google Chrome 22 to 37:\\u00a0Compatible when running on Windows XP SP3, Vista, or newer (desktop), OS X 10.6 (Snow Leopard) or newer (desktop), or Android 2.3 (Gingerbread) or newer (mobile).</li><li>Google Chrome 21 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Google Android OS Browser:</b>\\n\\n<ul><li>Android 5.0 (Lollipop) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Android 4.4 (KitKat) to 4.4.4 :\\u00a0May be compatible with TLS 1.1 or higher. Some devices with Android 4.4.x may not support TLS 1.1 or higher.</li><li>Android 4.3 (Jelly Bean) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Apple Safari:</b>\\n\\n<ul><li>Desktop Safari versions 7 and higher for OS X 10.9 (Mavericks) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Desktop Safari versions 6 and below for OS X 10.8 (Mountain Lion) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile Safari versions 5 and higher for iOS 5 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Mobile Safari for iOS 4 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n\\u00a0\\n\\n<p dir=\\\"ltr\\\"><b>Web Browser User Experience</b><br>Depending on the user access point, when a user tries to access the org with a web browser using TLS 1.0 after the org requires TLS 1.1 or higher for HTTPS connections, the user will see an error message with recommended steps to resolve the incompatibility.<br>\\u00a0</p>\\n\\n<p dir=\\\"ltr\\\"><b>How to test for support of TLS 1.1 or TLS 1.2</b><br>A way to test for TLS 1.1 and TLS 1.2 compatibility is to use the Qualsys SSL Labs test <a href=\\\"https://www.ssllabs.com/ssltest/\\\" target=\\\"_blank\\\">site</a> if your https endpoints are publicly accessible. In the test results, ensure that TLS 1.1 and/or TLS 1.2 support is reported as working properly.</p>\\n\\n<p dir=\\\"ltr\\\"><b>What if I use an intercepting HTTPS proxy server in my network?</b><br>Some networks intercept outbound HTTPS traffic by using a proxy server that creates its own certificates so that the unencrypted communications with Coveo and other endpoints can be inspected. Those proxy servers create their own TLS connections to Coveo. Networks that use this type of proxy server need to ensure that it supports TLS 1.2 and prefers TLS 1.2 when connecting to Coveo. Irregular behavior may be observed if the proxy server either does support TLS 1.0 or prefers TLS 1.0 over TLS 1.2 when connecting to remote endpoints.<br><br>The general configuration recommendations regarding intercepting HTTPS proxy servers regarding the TLS 1.0 disablement are the following:<br>Update the intercepting HTTPS proxy server to not intercept the HTTPS connections to Coveo Services. This is preferred as it ensures end-to-end confidentiality between the end-users&#39; web browsers and Coveo.<br><br>If HTTPS interception is required by the company&#39;s policy or otherwise cannot be removed or exempted, update that proxy server to a newer version that supports TLS 1.2 or, at least, TLS 1.1. When the critical update is enabled, the intercepting HTTPS proxy server will have its requests at the application layer rejected if it negotiated TLS 1.0 with Coveo.<br><br>If the intercepting HTTPS proxy server does support TLS 1.2, but prefers TLS 1.0 by using TLS 1.0 in its initial ClientHello messages, update the proxy server&#39;s configuration to prefer TLS 1.2 over TLS 1.0 when connecting to Coveo Services.<br><br><u><b>Connectors and API Integrations:</b></u><br>Connectors used for indexing and API calls, please ensure that the TLS 1.1 and/or TLS 1.2 encryption protocols are enabled in those integrations.</p>\\n<br><b>Java (Oracle):\\u00a0Compatible with the most recent version, regardless of operating system:</b>\\n\\n<ul><li>Java 8 (1.8) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Java 7 (1.7):\\u00a0Enable TLS 1.1 and TLS 1.2 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 and TLS 1.2 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li><li>Java 6 (1.6) update 111 and higher:\\u00a0Enable TLS 1.1 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. This Java 6 update and newer updates are not publicly available and require a support contract for Java 6 from Oracle.</li><li>Java 6 (1.6) and below (publicly available version):\\u00a0Not compatible with TLS 1.1 or higher encryption. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li></ul>\\n<b>Java (IBM):</b>\\n\\n<ul><li>Java 8:\\u00a0Compatible with TLS 1.1 or higher by default. You may need to set com.ibm.jsse2.overrideDefaultTLS=true if your application or a library called it by it uses SSLContext.getinstance(&quot;TLS&quot;).</li><li>Java 7 and higher, Java 6.0.1 service refresh 1 (J9 VM2.6) and higher, Java 6 service refresh 10 and higher:\\u00a0Enable TLS 1.2 using the https.protocols Java system property for HttpsURLConnection and the com.ibm.jsse2.overrideDefaultProtocol Java system property for SSLSocket and SSLEngine connections, as recommended by IBM&#39;s documentation. You may also need to set com.ibm.jsse2.overrideDefaultTLS=true.</li></ul>\\n<b>.NET:\\u00a0Compatible with the most recent version when running in an operating system that supports TLS 1.1 or TLS 1.2:</b>\\n\\n<ul><li>.NET 4.6 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>.NET 4.5 to 4.5.2:\\u00a0.NET 4.5, 4.5.1, and 4.5.2 do not enable TLS 1.1 and TLS 1.2 by default. Two options exist to enable these, as described below.<br>\\tOption 1:<br>\\t.NET applications may directly enable TLS 1.1 and TLS 1.2 in their software code by setting System.Net.ServicePointManager.SecurityProtocol to enable SecurityProtocolType.Tls12 and SecurityProtocolType.Tls11. The following C# code is an example:<br>\\tSystem.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;<br>\\tOption 2:<br>\\tIt may be possible to enable TLS 1.2 by default without modifying the source code by setting the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot;. Although the version number in those registry keys is 4.0.30319, the .NET 4.5, 4.5.1, and 4.5.2 frameworks also use these values. Those registry keys, however, will enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. It is thus advisable to test this change before deploying it to your production servers. This is also available as a registry import file. These registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 4.0:\\u00a0.NET 4.0 does not enable TLS 1.2 by default. To enable TLS 1.2 by default, it is possible to install .NET Framework 4.5, or a newer version, and set the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot;. Those registry keys, however, may enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. We recommend testing this change before deploying it to your production servers. This is also available as a registry import file.<br>\\tThese registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 3.5 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li></ul>\\n<b>Python:</b>\\u00a0<b>Compatible with the most recent version when running on an operating system that supports TLS 1.1 or TLS 1.2:</b>\\n\\n<ul><li>Python 2.7.9 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Python 2.7.8 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li><li>Ruby:\\u00a0Compatible with the most recent version when linked to OpenSSL 1.0.1 or higher.</li><li>Ruby 2.0.0:\\u00a0TLS 1.2 is enabled by default when used with OpenSSL 1.0.1 or higher. Using the :TLSv1_2 (preferred) or :TLSv1_1 symbols with an SSLContext&#39;s ssl_version helps ensure that TLS 1.0 or earlier is disabled.</li><li>Ruby 1.9.3 and below:\\u00a0The :TLSv1_2 symbol does not exist in 1.9.3 and below, but it is possible to patch Ruby to add that symbol and compile Ruby with OpenSSL 1.0.1 or higher.</li></ul>\\n<b>Microsoft WinINet:\\u00a0Compatible with the most recent version:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2008 R2 to 2012 / Windows 7 and 8 :\\u00a0Compatible by default if Internet Explorer 11 is installed. If Internet Explorer 8, 9, or 10 is installed, then TLS 1.1 and TLS 1.2 will need to get enabled by the user or an administrator for compatibility. Review the Enabling TLS 1.1 and TLS 1.2 in Internet Explorer article to enable TLS 1.1 or higher encryption.</li><li>Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Microsoft Secure Channel (Schannel):\\u00a0Compatible with the most recent version:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2012 / Windows 8 :\\u00a0TLS 1.1 and TLS 1.2 are disabled by default, but are available if enabled by an application. TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 R2 / Windows 7:\\u00a0Compatible by default in client mode when Internet Explorer 11 is installed. If Internet Explorer 11 is not installed or if Coveo needs to connect to a service running on this type of system, then TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 and below / Windows Vista and below :\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Microsoft WinHTTP and Webio:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher\\u00a0:\\u00a0Compatible with TLS 1.1 and TLS 1.2 by default</li><li>Windows Server 2008 R2 SP1 and 2012 / Windows 7 SP1:\\u00a0With KB3140245 applied, Webio is compatible by default, and WinHTTP can be configured via registry settings to enable TLS 1.1 and TLS 1.2.</li><li>Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li></ul>\\n<b>OpenSSL: Compatible with the most recent version, regardless of operating system.</b>\\n\\n<ul><li>OpenSSL 1.0.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>OpenSSL 1.0.0 and below :\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Mozilla NSS :\\u00a0Compatible with the most recent version, regardless of operating system.</b>\\n\\n<ul><li>3.15.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>3.14 to 3.15 : Compatible with TLS 1.1, but not with TLS 1.2.</li><li>3.13.6 and below : Not compatible with TLS 1.1 or higher encryption.\\u00a0</li></ul>\\nCREDITS<br>*This note was largely inspired by this <a href=\\\"https://help.salesforce.com/articleView?id=000221207&amp;type=1\\\" target=\\\"_blank\\\">knowledge article.</a><br>\\u00a0\"], \"coveo_objecttype\": [\"KB_Article\"], \"printableuri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US\"], \"kav_datacategoryselections.attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o0d000000mDh7AAE;/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o0d000000mDh8AAE\"], \"kav_id\": [\"ka10d0000004UyjAAE\"], \"sfresolutionc\": [\"<p dir=\\\"ltr\\\"><u><b>Internet Browsers:</b></u></p>\\n\\n<p dir=\\\"ltr\\\">You and your users will experience issues accessing Coveo if you have disabled the supported encryption protocols or if a browser other than the supported browsers is being used to connect to Coveo.</p>\\nIf you experience errors, you need to ensure your browsers are compatible with TLS 1.1 or higher. If your browser is not compatible with TLS 1.1 or higher after we make this change, your users will NOT be able to access Coveo Services. We recommend that you begin planning to support TLS 1.1 and TLS 1.2 as soon as possible.<br><br>NOTE: The minimum required action is to enable TLS 1.1 or TLS 1.2 encryption protocol within your browser security settings. Although we recommend disabling TLS 1.0 for a more secure browsing experience, it is not required. For example, if a user has protocols TLS 1.0, TLS 1.1, and TLS 1.2 enabled within their browser&#39;s security settings, they will be able to successfully connect to Coveo with that browser after Coveo disables TLS 1.0 on August 21st, 2017.\\n<p dir=\\\"ltr\\\">Refer to the compatibility guidelines below:</p>\\n<b>Internet Explorer (IE):</b>\\n\\n<ul><li>Microsoft Internet Explorer (IE):\\u00a0Review the<a href=\\\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\\\" target=\\\"_blank\\\"> Enabling TLS 1.1 and TLS 1.2 in Internet Explorer knowledge</a> article for more details.</li><li>Desktop and mobile IE version 11:\\u00a0If you see the &quot;Stronger security is required&quot; error message, you may need to turn off the TLS 1.0 setting in the Internet Options | Advanced Settings list.</li><li>Desktop IE versions 8, 9, and 10:\\u00a0Compatible only when running Windows 7 or newer, but not by default. Review the <a href=\\\"https://help.salesforce.com/articleView?id=Enabling-TLS-1-1-and-TLS-1-2-in-Internet-Explorer&amp;type=1\\\" target=\\\"_blank\\\">Enabling TLS 1.1 and TLS 1.2 in Internet Explorer</a> article to enable TLS 1.1 or higher encryption.Windows Vista, XP and earlier are incompatible and cannot be configured to support TLS 1.1 or TLS 1.2.</li><li>Desktop IE versions 7 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile IE versions 10 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Microsoft Edge:\\u00a0Compatible with TLS 1.1 or higher by default.</li></ul>\\n<b>Mozilla Firefox:</b>\\n\\n<ul><li>Mozilla Firefox:\\u00a0Compatible with the most recent version, regardless of operating system.</li><li>Firefox 27 and higher: Compatible with TLS 1.1 or higher by default.</li><li>Firefox 23 to 26:\\u00a0Compatible, but not by default.\\u00a0Use about:config to enable TLS 1.1 or TLS 1.2 by updating the security.tls.version.max config value to 2 for TLS 1.1 or 3 for TLS 1.2.</li><li>Firefox 22 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Google Chrome:</b>\\n\\n<ul><li>Google Chrome:\\u00a0Compatible with the most recent version, regardless of operating system.</li><li>Google Chrome 38 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Google Chrome 22 to 37:\\u00a0Compatible when running on Windows XP SP3, Vista, or newer (desktop), OS X 10.6 (Snow Leopard) or newer (desktop), or Android 2.3 (Gingerbread) or newer (mobile).</li><li>Google Chrome 21 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Google Android OS Browser:</b>\\n\\n<ul><li>Android 5.0 (Lollipop) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Android 4.4 (KitKat) to 4.4.4 :\\u00a0May be compatible with TLS 1.1 or higher. Some devices with Android 4.4.x may not support TLS 1.1 or higher.</li><li>Android 4.3 (Jelly Bean) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Apple Safari:</b>\\n\\n<ul><li>Desktop Safari versions 7 and higher for OS X 10.9 (Mavericks) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Desktop Safari versions 6 and below for OS X 10.8 (Mountain Lion) and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li><li>Mobile Safari versions 5 and higher for iOS 5 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Mobile Safari for iOS 4 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n\\u00a0\\n\\n<p dir=\\\"ltr\\\"><b>Web Browser User Experience</b><br>Depending on the user access point, when a user tries to access the org with a web browser using TLS 1.0 after the org requires TLS 1.1 or higher for HTTPS connections, the user will see an error message with recommended steps to resolve the incompatibility.<br>\\u00a0</p>\\n\\n<p dir=\\\"ltr\\\"><b>How to test for support of TLS 1.1 or TLS 1.2</b><br>A way to test for TLS 1.1 and TLS 1.2 compatibility is to use the Qualsys SSL Labs test <a href=\\\"https://www.ssllabs.com/ssltest/\\\" target=\\\"_blank\\\">site</a> if your https endpoints are publicly accessible. In the test results, ensure that TLS 1.1 and/or TLS 1.2 support is reported as working properly.</p>\\n\\n<p dir=\\\"ltr\\\"><b>What if I use an intercepting HTTPS proxy server in my network?</b><br>Some networks intercept outbound HTTPS traffic by using a proxy server that creates its own certificates so that the unencrypted communications with Coveo and other endpoints can be inspected. Those proxy servers create their own TLS connections to Coveo. Networks that use this type of proxy server need to ensure that it supports TLS 1.2 and prefers TLS 1.2 when connecting to Coveo. Irregular behavior may be observed if the proxy server either does support TLS 1.0 or prefers TLS 1.0 over TLS 1.2 when connecting to remote endpoints.<br><br>The general configuration recommendations regarding intercepting HTTPS proxy servers regarding the TLS 1.0 disablement are the following:<br>Update the intercepting HTTPS proxy server to not intercept the HTTPS connections to Coveo Services. This is preferred as it ensures end-to-end confidentiality between the end-users&#39; web browsers and Coveo.<br><br>If HTTPS interception is required by the company&#39;s policy or otherwise cannot be removed or exempted, update that proxy server to a newer version that supports TLS 1.2 or, at least, TLS 1.1. When the critical update is enabled, the intercepting HTTPS proxy server will have its requests at the application layer rejected if it negotiated TLS 1.0 with Coveo.<br><br>If the intercepting HTTPS proxy server does support TLS 1.2, but prefers TLS 1.0 by using TLS 1.0 in its initial ClientHello messages, update the proxy server&#39;s configuration to prefer TLS 1.2 over TLS 1.0 when connecting to Coveo Services.<br><br><u><b>Connectors and API Integrations:</b></u><br>Connectors used for indexing and API calls, please ensure that the TLS 1.1 and/or TLS 1.2 encryption protocols are enabled in those integrations.</p>\\n<br><b>Java (Oracle):\\u00a0Compatible with the most recent version, regardless of operating system:</b>\\n\\n<ul><li>Java 8 (1.8) and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Java 7 (1.7):\\u00a0Enable TLS 1.1 and TLS 1.2 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 and TLS 1.2 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li><li>Java 6 (1.6) update 111 and higher:\\u00a0Enable TLS 1.1 using the https.protocols Java system property for HttpsURLConnection. To enable TLS 1.1 on non-HttpsURLConnection connections, set the enabled protocols on the created SSLSocket and SSLEngine instances within the application source code. This Java 6 update and newer updates are not publicly available and require a support contract for Java 6 from Oracle.</li><li>Java 6 (1.6) and below (publicly available version):\\u00a0Not compatible with TLS 1.1 or higher encryption. Switching to IBM Java may be an effective workaround if upgrading to a newer Oracle Java version isn&#39;t feasible.</li></ul>\\n<b>Java (IBM):</b>\\n\\n<ul><li>Java 8:\\u00a0Compatible with TLS 1.1 or higher by default. You may need to set com.ibm.jsse2.overrideDefaultTLS=true if your application or a library called it by it uses SSLContext.getinstance(&quot;TLS&quot;).</li><li>Java 7 and higher, Java 6.0.1 service refresh 1 (J9 VM2.6) and higher, Java 6 service refresh 10 and higher:\\u00a0Enable TLS 1.2 using the https.protocols Java system property for HttpsURLConnection and the com.ibm.jsse2.overrideDefaultProtocol Java system property for SSLSocket and SSLEngine connections, as recommended by IBM&#39;s documentation. You may also need to set com.ibm.jsse2.overrideDefaultTLS=true.</li></ul>\\n<b>.NET:\\u00a0Compatible with the most recent version when running in an operating system that supports TLS 1.1 or TLS 1.2:</b>\\n\\n<ul><li>.NET 4.6 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>.NET 4.5 to 4.5.2:\\u00a0.NET 4.5, 4.5.1, and 4.5.2 do not enable TLS 1.1 and TLS 1.2 by default. Two options exist to enable these, as described below.<br>\\tOption 1:<br>\\t.NET applications may directly enable TLS 1.1 and TLS 1.2 in their software code by setting System.Net.ServicePointManager.SecurityProtocol to enable SecurityProtocolType.Tls12 and SecurityProtocolType.Tls11. The following C# code is an example:<br>\\tSystem.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12 | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls;<br>\\tOption 2:<br>\\tIt may be possible to enable TLS 1.2 by default without modifying the source code by setting the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot;. Although the version number in those registry keys is 4.0.30319, the .NET 4.5, 4.5.1, and 4.5.2 frameworks also use these values. Those registry keys, however, will enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. It is thus advisable to test this change before deploying it to your production servers. This is also available as a registry import file. These registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 4.0:\\u00a0.NET 4.0 does not enable TLS 1.2 by default. To enable TLS 1.2 by default, it is possible to install .NET Framework 4.5, or a newer version, and set the SchUseStrongCrypto DWORD value in the following two registry keys to 1, creating them if they don&#39;t exist: &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot; and &quot;HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\.NETFramework\\\\v4.0.30319&quot;. Those registry keys, however, may enable TLS 1.2 by default in all installed .NET 4.0, 4.5, 4.5.1, and 4.5.2 applications on that system. We recommend testing this change before deploying it to your production servers. This is also available as a registry import file.<br>\\tThese registry values, however, will not affect .NET applications that set the System.Net.ServicePointManager.SecurityProtocol value.</li><li>.NET 3.5 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li></ul>\\n<b>Python:</b>\\u00a0<b>Compatible with the most recent version when running on an operating system that supports TLS 1.1 or TLS 1.2:</b>\\n\\n<ul><li>Python 2.7.9 and higher:\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Python 2.7.8 and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li><li>Ruby:\\u00a0Compatible with the most recent version when linked to OpenSSL 1.0.1 or higher.</li><li>Ruby 2.0.0:\\u00a0TLS 1.2 is enabled by default when used with OpenSSL 1.0.1 or higher. Using the :TLSv1_2 (preferred) or :TLSv1_1 symbols with an SSLContext&#39;s ssl_version helps ensure that TLS 1.0 or earlier is disabled.</li><li>Ruby 1.9.3 and below:\\u00a0The :TLSv1_2 symbol does not exist in 1.9.3 and below, but it is possible to patch Ruby to add that symbol and compile Ruby with OpenSSL 1.0.1 or higher.</li></ul>\\n<b>Microsoft WinINet:\\u00a0Compatible with the most recent version:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2008 R2 to 2012 / Windows 7 and 8 :\\u00a0Compatible by default if Internet Explorer 11 is installed. If Internet Explorer 8, 9, or 10 is installed, then TLS 1.1 and TLS 1.2 will need to get enabled by the user or an administrator for compatibility. Review the Enabling TLS 1.1 and TLS 1.2 in Internet Explorer article to enable TLS 1.1 or higher encryption.</li><li>Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Microsoft Secure Channel (Schannel):\\u00a0Compatible with the most recent version:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>Windows Server 2012 / Windows 8 :\\u00a0TLS 1.1 and TLS 1.2 are disabled by default, but are available if enabled by an application. TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 R2 / Windows 7:\\u00a0Compatible by default in client mode when Internet Explorer 11 is installed. If Internet Explorer 11 is not installed or if Coveo needs to connect to a service running on this type of system, then TLS 1.1 and TLS 1.2 can be enabled by default within the registry. Those registry settings are also available as a registry import file.</li><li>Windows Server 2008 and below / Windows Vista and below :\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Microsoft WinHTTP and Webio:</b>\\n\\n<ul><li>Windows Server 2012 R2 and higher / Windows 8.1 and higher\\u00a0:\\u00a0Compatible with TLS 1.1 and TLS 1.2 by default</li><li>Windows Server 2008 R2 SP1 and 2012 / Windows 7 SP1:\\u00a0With KB3140245 applied, Webio is compatible by default, and WinHTTP can be configured via registry settings to enable TLS 1.1 and TLS 1.2.</li><li>Windows Server 2008 and below / Windows Vista and below:\\u00a0Not compatible with TLS 1.1 or higher encryption</li></ul>\\n<b>OpenSSL: Compatible with the most recent version, regardless of operating system.</b>\\n\\n<ul><li>OpenSSL 1.0.1 and higher :\\u00a0Compatible with TLS 1.1 or higher by default.</li><li>OpenSSL 1.0.0 and below :\\u00a0Not compatible with TLS 1.1 or higher encryption.</li></ul>\\n<b>Mozilla NSS :\\u00a0Compatible with the most recent version, regardless of operating system.</b>\\n\\n<ul><li>3.15.1 and higher : Compatible with TLS 1.1 or higher by default.</li><li>3.14 to 3.15 : Compatible with TLS 1.1, but not with TLS 1.2.</li><li>3.13.6 and below : Not compatible with TLS 1.1 or higher encryption.\\u00a0</li></ul>\\nCREDITS<br>*This note was largely inspired by this <a href=\\\"https://help.salesforce.com/articleView?id=000221207&amp;type=1\\\" target=\\\"_blank\\\">knowledge article.</a><br>\\u00a0\"], \"foldingchild\": [\"f60f1484849c1a0974b4c7aaf3096e17cdb4f430eb79400a5ad0d6106ed9\"], \"sfsummary\": [\"Coveo requires an upgrade to TLS 1.1 or higher by March 26th, 2018 in order to align with industry best practices for security and data integrity. On that date we will disable TLS 1.0. Action is required prior to this date to prevent any disruption to your production instance. This communication contains all of the information currently available on Coveo's disablement of the TLS 1.0 encryption protocol.\"], \"kav_sitecore_version__c\": [\"N/A\"], \"kav_owner.coveo_record_size\": [2], \"kav_coveo_effective_modstamp\": [1518176788], \"kav_summary__html_stripped\": [\"Coveo requires an upgrade to TLS 1.1 or higher by March 26th, 2018 in order to align with industry best practices for security and data integrity. On that date we will disable TLS 1.0. Action is required prior to this date to prevent any disruption to your production instance. This communication contains all of the information currently available on Coveo's disablement of the TLS 1.0 encryption protocol.\"], \"kav_dc_article_type\": [\"How To/Question\"], \"sfconnectorc\": [\"N/A\"], \"kav_dc_product\": [\"Coveo Enterprise Search\"], \"ka_coveo_record_size\": [2], \"kav_dc_expanded_article_type\": [\"All;All|How To/Question\"], \"kav_datacategoryselections.coveo_record_size\": [\"2;2\"], \"concepts\": [\"Internet Explorer ; import file ; web browsers ; protocols ; encryption ; connections ; endpoints ; networks ; applications ; integrations ; communications ; proxy servers ; Coveo services ; compatibility ; Oracle Java ; intercepting\"], \"sfkbid\": [\"kA132000000XcfYCAS\"], \"kav_firstpublisheddate\": [1496260046], \"coveo_organization_id\": [\"00D3000000007r2\"], \"coveo_foldingcollection\": [\"5ed95d1a25c3289de426aefcc8243020e15b07e40fa18f7d4db1510a82fd\"], \"sffirstpublisheddate\": [1496260046], \"sflastmodifieddate\": [1517925327], \"kav_coveo_version__c\": [\"Coveo Enterprise Search\"], \"kav_vendor_version__c__html_stripped\": [\"\"], \"detectedlanguage\": [1], \"kav_isvisibleinprm\": [true], \"kav_owner.attribute.type\": [\"Name\"], \"kav_lastmodifiedby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00532000004voF1AAI\"], \"sitename\": [\"Community\"], \"kav_createdby.name\": [\"Karel Mpungi\"], \"sfarticlenumber\": [\"000002321\"], \"kav_lastmodifiedby.coveo_record_size\": [2], \"sfisvisibleinpkb\": [true], \"kav_datacategoryselections.id\": [\"02o0d000000mDh7AAE;02o0d000000mDh8AAE\"], \"kav_description__c\": [\"<b>What is TLS?</b><br>TLS stands for \\u201cTransport Layer Security.\\u201d It is a protocol that provides privacy and data integrity between two communicating applications. It\\u2019s the most widely deployed security protocol used today, and is used for web browsers and other applications that require data to be securely exchanged over a network. TLS ensures that a connection to a remote endpoint is the intended endpoint through encryption and endpoint identity verification. The versions of TLS, to date, are TLS 1.0, 1.1 and 1.2.<br>Coveo Administration Console and API connections, along with email delivery, use TLS as a key component of their security. HTTPS (web) and STARTTLS SMTP (email) also use TLS as a key component of their security.<br>\\u00a0\\n<p dir=\\\"ltr\\\"><b>What is the change?</b><br>Coveo is requiring an upgrade to TLS 1.1 or higher by March 26<sup>th</sup> 2018. On that date we will disable the TLS 1.0 encryption protocol, which will prevent customers still using it from accessing some of their Coveo services.<br><br><b>How will customers be impacted?</b><br>After Coveo disables TLS 1.0, any inbound connections to or outbound connections from your Coveo org that rely on TLS 1.0 will fail. This will impact a number of Coveo services (listed below), including access to Usage Analytics, Search, Indexing and Administration websites.<br><br><b>How can customers avoid a service disruption?</b><br>The action required by your organization will depend on which channels are used to access your Coveo org as well as which Coveo services are in use by your org. Please click the relevant topic below to be directed to the required actions pages(s).<br><br><br><br><br>\\u00a0</p>\"], \"kav_validationstatus\": [\"Reviewed\"], \"kav_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__kav/ka10d0000004UyjAAE\"], \"kav_articlenumber__stripped\": [\"2321\"], \"sfversionnumber\": [4], \"kav_attribute.type\": [\"KB_Article__kav\"], \"kav_articletype\": [\"KB_Article__kav\"], \"coveo_foldingparent\": [\"f60f1484849c1a0974b4c7aaf3096e17cdb4f430eb79400a5ad0d6106ed9\"], \"collection\": [\"default\"], \"date\": [1518176788], \"kav_lastmodifiedby.id\": [\"00532000004voF1AAI\"], \"kav_datacategoryselections.datacategorygroupname\": [\"Product;Article_Type\"], \"conversionstate\": [0], \"sfvalidationstatus\": [\"Reviewed\"], \"kav_isdeleted\": [false], \"sflastmodifiedbyid\": [\"00532000004voF1AAI\"], \"kav_lastmodifiedby.name\": [\"Bruno-Pascal Roy-Dumas\"], \"kav_articlenumber\": [\"000002321\"], \"permanentid\": [\"274b0d46b61019acad831e4dfdc8179034118859b55ddaf2e4b7efff1eec\"]}",
      "sflastmodifiedbyid" : "00532000004voF1AAI",
      "syssfownerid" : "00560000002MKBSAA4",
      "sfsitecoreversionc" : "N/A",
      "sourcetype" : "Salesforce",
      "sysconnectortype" : "Salesforce2",
      "sftitle" : "Coveo disabling TLS 1.0",
      "rowid" : 5493460,
      "syssfcreatedbyid" : "00560000002MKBSAA4",
      "sfdescriptionc" : "<b>What is TLS?</b><br>TLS stands for “Transport Layer Security.” It is a protocol that provides privacy and data integrity between two communicating applications. It’s the most widely deployed security protocol used today, and is used for web browsers and other applications that require data to be securely exchanged over a network. TLS ensures that a connection to a remote endpoint is the intended endpoint through encryption and endpoint identity verification. The versions of TLS, to date, are TLS 1.0, 1.1 and 1.2.<br>Coveo Administration Console and API connections, along with email delivery, use TLS as a key component of their security. HTTPS (web) and STARTTLS SMTP (email) also use TLS as a key component of their security.<br> \n<p dir=\"ltr\"><b>What is the change?</b><br>Coveo is requiring an upgrade to TLS 1.1 or higher by March 26<sup>th</sup> 2018. On that date we will disable the TLS 1.0 encryption protocol, which will prevent customers still using it from accessing some of their Coveo services.<br><br><b>How will customers be impacted?</b><br>After Coveo disables TLS 1.0, any inbound connections to or outbound connections from your Coveo org that rely on TLS 1.0 will fail. This will impact a number of Coveo services (listed below), including access to Usage Analytics, Search, Indexing and Administration websites.<br><br><b>How can customers avoid a service disruption?</b><br>The action required by your organization will depend on which channels are used to access your Coveo org as well as which Coveo services are in use by your org. Please click the relevant topic below to be directed to the required actions pages(s).<br><br><br><br><br> </p>",
      "size" : 35656,
      "sfislatestversion" : "true",
      "sysdocumenttype" : "article",
      "sfcreateddate" : 1517925220000,
      "clickableuri" : "https://na61.salesforce.com/kA132000000XcfY",
      "syssource" : "Salesforce Public Items",
      "sfownerid" : "00560000002MKBSAA4",
      "orderingid" : 212384990660372263,
      "sfpublishstatus" : "Online",
      "syssize" : 35656,
      "sysdate" : 1518176788000,
      "sflanguage" : "en_US",
      "sysparents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"Coveo disabling TLS 1.0\" uri=\"https://na61.salesforce.com/kA132000000XcfY\" /></parents>",
      "sfdcexpandedarticletype" : "All;All|How To/Question",
      "sfcurrencyisocode" : "USD",
      "sfkbid" : "kA132000000XcfYCAS",
      "sfcausec" : "<b>Why is this happening?</b><br>At Coveo, Security is our #1 value and Coveo is focused on continually helping our customers improve their security by using the latest security protocols. On March 26th, 2018, Coveo will require TLS 1.1 and later encryption protocol in an effort to maintain the highest security standards and promote the safety of customer data.",
      "sfdcexpandedproduct" : "All;All|Coveo Enterprise Search",
      "syssfcreateddate" : 1517925220000,
      "sflastmodifieddate" : 1517925327000,
      "sfisvisibleinpkb" : "true",
      "source" : "Salesforce Public Items",
      "sfisdeleted" : "false",
      "sfisvisibleincsp" : "true",
      "sfvalidationstatus" : "Reviewed",
      "sflastmodifiedbyname" : "Bruno-Pascal Roy-Dumas",
      "collection" : "default",
      "sfdcproduct" : [ "Coveo Enterprise Search" ],
      "syssourcetype" : "Salesforce",
      "sfarticletype" : "KB_Article__kav",
      "indexeddate" : 1518187607000,
      "connectortype" : "Salesforce2",
      "filetype" : "SalesforceItem",
      "sfcreatedbyname" : "Karel Mpungi",
      "sysclickableuri" : "https://na61.salesforce.com/kA132000000XcfY",
      "sysfiletype" : "SalesforceItem",
      "language" : [ "English" ],
      "sffirstpublisheddate" : 1496260046000,
      "sfownername" : "Karel Mpungi",
      "sitename" : "Community",
      "sysrowid" : 5493460,
      "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
      "syscollection" : "default"
    },
    "Title" : "Coveo disabling TLS 1.0",
    "Uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
    "PrintableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
    "ClickUri" : "https://na61.salesforce.com/kA132000000XcfY",
    "UniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA132000000XcfYCAS/language:en_US",
    "Excerpt" : "TLS stands for “Transport Layer Security.” ... It is a protocol that provides privacy and data integrity between two communicating applications. ... It’s the most widely deployed security protocol ...",
    "FirstSentences" : null
  }