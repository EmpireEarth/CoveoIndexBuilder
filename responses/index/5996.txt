{
    "title" : "First query returns no results or less results that it should",
    "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
    "printableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
    "clickUri" : "https://na61.salesforce.com/kA10d0000004MKN",
    "uniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
    "excerpt" : "When opening Coveo search interface, the first search does not always give every results it should. ... If refreshing or relaunching the query, you'll get all the results. ... This KB explains why ...",
    "firstSentences" : null,
    "summary" : null,
    "flags" : "HasHtmlVersion",
    "hasHtmlVersion" : true,
    "hasMobileHtmlVersion" : false,
    "score" : 1457,
    "percentScore" : 85.89072,
    "rankingInfo" : null,
    "rating" : 3.0,
    "isTopResult" : false,
    "isRecommendation" : false,
    "titleHighlights" : [ ],
    "firstSentencesHighlights" : [ ],
    "excerptHighlights" : [ ],
    "printableUriHighlights" : [ ],
    "summaryHighlights" : [ ],
    "parentResult" : null,
    "childResults" : [ ],
    "totalNumberOfChildResults" : 0,
    "raw" : {
      "systitle" : "First query returns no results or less results that it should",
      "sysurihash" : "lcnz0mYPsKrZ4LRT",
      "urihash" : "lcnz0mYPsKrZ4LRT",
      "parents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"First query returns no results or less results that it should\" uri=\"https://na61.salesforce.com/kA10d0000004MKN\" /></parents>",
      "sfdcarticletype" : "Problem/Fix",
      "sfresolutionc" : "We have a way to ensure that first time users of CES will be identified by the Security Cache to do, you will need to run a vbs script on your CES master server(s). This script allows you to enable a CES parameter called SynchronizedExpansion. That parameter will force the Security Cache to update itself whenever it&#39;s encountering new users. Therefore, first time users will be automatically added to the security cache at their first query. This turn will ensure that user get results on their first search. <br><br>So to enable the SynchronizedExpansion feature: \n<ul><li>Copy the script below into a .txt file and name it CES7Admin-SynchronizedExpansion.txt</li></ul>\n \n\n<pre class=\"ckeditor_codeblock\">\nOption Explicit\nOn Error Goto 0\n\n&#39;*******************************************************************************\n&#39; SCRIPT: CES7Admin-SynchronizedExpansion.vbs\n&#39; USAGE: \n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /synch\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /list\n&#39;*******************************************************************************\n\nCall Main()\n&#39;==============================================================================\nSub Main()\n    Echo &quot;Start Script&quot;\n    Dim admin: Set admin = GetAdmin()\n    Dim name, NameValue\n    for each name in WScript.Arguments.Named\n        Select Case LCase(name)\n            Case &quot;list&quot;\n                List\n            Case &quot;synch&quot;\n                ResetIfInvalid\n            Case Else\n                Echo &quot;Invalid argument &quot; &amp; name\n                WScript.Quit 1\n        End Select\n    next\n\n    admin.Disconnect\n    Set admin = Nothing\n\n    if WScript.Arguments.Named.Count = 0 Then\n        Echo &quot;No arguments&quot;\n        WScript.Quit 1\n    End iF\n\n    Echo &quot;End Script&quot;\nEnd Sub\n\n\n&#39;==============================================================================\nSub ResetIfInvalid()\n    Echo &quot;Adding parameter SynchronizedExpansion if needed&quot;\n    \n    Dim admin: Set admin = GetAdmin()\n    Dim secprov\n    Dim secprovName\n    Dim claimsprov\n    Dim list: Set list = CreateObject(&quot;Scripting.Dictionary&quot;)\n\n    &#39;list all claims security providers that are missing the SynchronizedExpansion param\n    for each secprov in admin.SecurityProviders\n        if secprov.TypeName = &quot;Claims&quot; And secprov.SynchronizedExpansion = false then\n            list.Add secprov.Name, &quot;&quot;\n        end if\n    next\n\n    if list.Count = 0 then\n        Echo &quot;All CLAIMS security providers are SynchronizedExpansion enabled&quot;\n    else\n        Echo &quot;Found &quot; &amp; CStr(list.Count) &amp; &quot; CLAIMS security provider(s) that is(are) not SynchronizedExpansion enabled. Adding the parameter...&quot;\n        for each secprovName in list\n            Set claimsprov = admin.SecurityProviders.ItemByName(secprovName)\n            claimsprov.SynchronizedExpansion = true\n        next\n        admin.Commit\n    end if\n\n    Echo &quot;Done&quot;\nEnd Sub\n\n&#39;==============================================================================\nSub List()\n    Echo &quot;Listing...&quot;\n    \n    Dim admin: Set admin = GetAdmin()\n    Dim secprov\n\n    Echo &quot;ID&quot; &amp; vbTab &amp; &quot;TypeName&quot; &amp; vbTab &amp; &quot;Name&quot; &amp; vbtab &amp; &quot;IsSynchronizedExpansion&quot;\n    for each secprov in admin.SecurityProviders\n        Echo CStr(secprov.ID) &amp; vbTab &amp; CStr(secprov.TypeName) &amp; vbTab &amp; CStr(secprov.Name) &amp; vbTab &amp; CSTr(secprov.SynchronizedExpansion)\n    next\n\n    Echo &quot;Done listing&quot;\nEnd Sub\n\n&#39;==============================================================================\n&#39; GetAdmin\n&#39;\n&#39; Retrieves Admin object.\n&#39;==============================================================================\nFunction GetAdmin()\n    Const CESADMIN_PROGID       = &quot;CESAdmin.Admin.7.0&quot;\n    Const SERVER_NAME           = &quot;localhost&quot;\n    Const DEFAULT_INSTANCE_NAME = &quot;default&quot;\n    Const IMPERSONATE           = False\n\n    Set GetAdmin = CreateObject(CESADMIN_PROGID)\n    Call GetAdmin.Connect(SERVER_NAME, DEFAULT_INSTANCE_NAME)\nEnd Function\n\n&#39;==============================================================================\nSub Echo(msg)\n    WScript.Echo(msg)\nEnd Sub</pre>\n\n<ul><li>Change the extension of the CES7Admin-SynchronizedExpansion.txt file to CES7Admin-SynchronizedExpansion.vbs</li></ul>\n\n<ul><li>Open a Command Line as an Administrator </li><li>Run:</li></ul>\nCES7Admin-SynchronizedExpansionClaimsOnly.vbs /synch \n\n<ul><li>You&#39;ll see  something like this ( Click OK all the way)</li></ul>\n<br><img alt=\"User-added image\" height=\"257\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001y0C\" width=\"500\"></img><br><br><img alt=\"User-added image\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzO\"></img><br><br><img alt=\"User-added image\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzT\"></img><br><br><img alt=\"User-added image\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzY\"></img><br><br><img alt=\"User-added image\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzd\"></img><br><br><img alt=\"User-added image\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzi\"></img><br><br><img alt=\"User-added image\" src=\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzn\"></img>\n<ul><li>After running the script, open your config.txt file and search for &lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt; next to your Security provider that have a &lt;TypeName&gt;Claims&lt;/TypeName&gt; </li></ul>\n<br>In example: <br><br>Before running the script: <br> \n<pre class=\"ckeditor_codeblock\">\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt; \n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\n<br>After running the script: <br> \n<pre class=\"ckeditor_codeblock\">\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt; \n&lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt; \n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\nOnce &lt;SynchronizedExpansion&gt; setting is added to the config.txt file, the effect is immediate, so you can perform tests to validate if you&#39;re still experiencing the issue.<br><br>As usual, we recommend you to first test the solution in Dev environment, before deploying it in Production.<br><br><b><span style=\"color: #FF0000;\">Note: With the &lt;SynchronizedExpansion&gt; setting enable, query time on the first query might be a little bit longer.</span></b>",
      "sysuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
      "sysprintableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
      "sflastpublisheddate" : 1505484220000,
      "systransactionid" : 161139,
      "sfurlname" : "2586",
      "sfsystemmodstamp" : 1518176788000,
      "sfisvisibleinapp" : "true",
      "sfcoveoversionc" : "Coveo Enterprise Search",
      "sysconcepts" : "queries ; Claims Authentication ; SharePoint server ; Coveo ; security cache ; new users ; wellknown entities ; SynchronizedExpansion ; Dev environment ; internal structures ; required relationship ; items indexed ; Production ; refreshing",
      "sfkbversionnumber" : "2",
      "concepts" : "queries ; Claims Authentication ; SharePoint server ; Coveo ; security cache ; new users ; wellknown entities ; SynchronizedExpansion ; Dev environment ; internal structures ; required relationship ; items indexed ; Production ; refreshing",
      "printableuri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
      "documenttype" : "article",
      "sfkbarticlekavid" : "ka10d0000004SOjAAM",
      "sysindexeddate" : 1518187596000,
      "sfknowledgearticleid" : "kA10d0000004MKNCA2",
      "sfcreatedbyid" : "00560000002MKBSAA4",
      "sfconnectorc" : "N/A",
      "permanentid" : "c7ae153aac906f6a38718c0b7a8b809f7f3f4f46d2d311373cbab777f586",
      "syslanguage" : [ "English" ],
      "transactionid" : 161139,
      "sfisvisibleinprm" : "true",
      "title" : "First query returns no results or less results that it should",
      "sfversionnumber" : 2,
      "sfarticlenumber" : "000002586",
      "date" : 1518176788000,
      "objecttype" : "KB Article",
      "allmetadatavalues" : "{\"kav_lastmodifiedby.attribute.type\": [\"User\"], \"coveo_short_id\": [\"kA10d0000004MKN\"], \"sflastmodifiedbyname\": [\"Karel Mpungi\"], \"kav_coveo_version__c__html_stripped\": [\"Coveo Enterprise Search\"], \"fileextension\": [\"\"], \"sfdcexpandedproduct\": [\"All;All|Coveo Enterprise Search\"], \"kav_createdby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"sflanguage\": [\"en_US\"], \"kav_createdby.attribute.type\": [\"User\"], \"kav_createdby.id\": [\"00560000002MKBSAA4\"], \"kav_language\": [\"en_US\"], \"sfsitecoreversionc\": [\"N/A\"], \"sourcetype\": [\"Salesforce\"], \"title\": [\"First query returns no results or less results that it should\"], \"source\": [\"Salesforce Public Items\"], \"kav_owner.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"parents\": [\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-16\\\"?><parents><parent name=\\\"Organization\\\" uri=\\\"https://na61.salesforce.com/home/home.jsp\\\" /><parent name=\\\"KB_Article__ka\\\" uri=\\\"http://www.salesforce.com/org:organization/articletype:KB_Article\\\" /><parent name=\\\"First query returns no results or less results that it should\\\" uri=\\\"https://na61.salesforce.com/kA10d0000004MKN\\\" /></parents>\"], \"sfisvisibleinprm\": [true], \"kav_title\": [\"First query returns no results or less results that it should\"], \"kav_isvisibleincsp\": [true], \"hashtmlversion\": [true], \"kav_versionnumber\": [2], \"sfcreatedbyname\": [\"Karel Mpungi\"], \"sflastpublisheddate\": [1505484220], \"objecttypelabel\": [\"KB Article\"], \"kav_cause__c__html_stripped\": [\"When a new user (which is not yet known by the Security Cache) performs its first query into CES, this user won\\u2019t be able to access to the documents that are secured by wellknown entities of this user, in this case Sharepoint. This happens, because the Security Cache doesn\\u2019t have yet the required relationship into its internal structures.\\u00a0 \\n \\n After that first query, the Security Cache will search for that new user in the wellknown entities (Sharepoint) and thus be able to recognize that first timer user for subsequent queries.\\u00a0 \\n \\n Now you'll say this is happening with existing user, not specifically new users.\\u00a0 \\n \\n Claims are attributes given to you when authenticating to the identity provider, such as ADFS.\\u00a0 \\n It is these attributes that allow you to see content. Coveo stock these attributes in the security identity. So, if ADFS changes your attributes someday, you will be like a new user from the CES point of view.\\u00a0\"], \"originalhtmlcharset\": [1200], \"coveo_connector_hasbinarydata\": [false], \"kav_lastpublisheddate\": [1505484220], \"sfsystemmodstamp\": [1518176788], \"ka_attribute.type\": [\"KB_Article__ka\"], \"sfdcproduct\": [\"Coveo Enterprise Search\"], \"kav_resolution__c__html_stripped\": [\"We have a way to ensure that first time users of CES will be identified by the Security Cache to do, you will need to run a vbs script on your CES master server(s). This script allows you to enable a CES parameter called SynchronizedExpansion. That parameter will force the Security Cache to update itself whenever it's encountering new users. Therefore, first time users will be automatically added to the security cache at their first query. This turn will ensure that user get results on their first search.\\u00a0 \\n \\n So to enable the SynchronizedExpansion feature:\\u00a0\\n Copy the script below into a .txt file and name it\\u00a0CES7Admin-SynchronizedExpansion.txt \\n\\u00a0\\n\\n \\nOption Explicit\\nOn Error Goto 0\\n\\n'*******************************************************************************\\n' SCRIPT: CES7Admin-SynchronizedExpansion.vbs\\n' USAGE: \\n'   cscript //NOLOGO \\\"CES7Admin-SynchronizedExpansion.vbs\\\" /synch\\n'   cscript //NOLOGO \\\"CES7Admin-SynchronizedExpansion.vbs\\\" /list\\n'*******************************************************************************\\n\\nCall Main()\\n'==============================================================================\\nSub Main()\\n    Echo \\\"Start Script\\\"\\n    Dim admin: Set admin = GetAdmin()\\n    Dim name, NameValue\\n    for each name in WScript.Arguments.Named\\n        Select Case LCase(name)\\n            Case \\\"list\\\"\\n                List\\n            Case \\\"synch\\\"\\n                ResetIfInvalid\\n            Case Else\\n                Echo \\\"Invalid argument \\\" & name\\n                WScript.Quit 1\\n        End Select\\n    next\\n\\n    admin.Disconnect\\n    Set admin = Nothing\\n\\n    if WScript.Arguments.Named.Count = 0 Then\\n        Echo \\\"No arguments\\\"\\n        WScript.Quit 1\\n    End iF\\n\\n    Echo \\\"End Script\\\"\\nEnd Sub\\n\\n\\n'==============================================================================\\nSub ResetIfInvalid()\\n    Echo \\\"Adding parameter SynchronizedExpansion if needed\\\"\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n    Dim secprovName\\n    Dim claimsprov\\n    Dim list: Set list = CreateObject(\\\"Scripting.Dictionary\\\")\\n\\n    'list all claims security providers that are missing the SynchronizedExpansion param\\n    for each secprov in admin.SecurityProviders\\n        if secprov.TypeName = \\\"Claims\\\" And secprov.SynchronizedExpansion = false then\\n            list.Add secprov.Name, \\\"\\\"\\n        end if\\n    next\\n\\n    if list.Count = 0 then\\n        Echo \\\"All CLAIMS security providers are SynchronizedExpansion enabled\\\"\\n    else\\n        Echo \\\"Found \\\" & CStr(list.Count) & \\\" CLAIMS security provider(s) that is(are) not SynchronizedExpansion enabled. Adding the parameter...\\\"\\n        for each secprovName in list\\n            Set claimsprov = admin.SecurityProviders.ItemByName(secprovName)\\n            claimsprov.SynchronizedExpansion = true\\n        next\\n        admin.Commit\\n    end if\\n\\n    Echo \\\"Done\\\"\\nEnd Sub\\n\\n'==============================================================================\\nSub List()\\n    Echo \\\"Listing...\\\"\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n\\n    Echo \\\"ID\\\" & vbTab & \\\"TypeName\\\" & vbTab & \\\"Name\\\" & vbtab & \\\"IsSynchronizedExpansion\\\"\\n    for each secprov in admin.SecurityProviders\\n        Echo CStr(secprov.ID) & vbTab & CStr(secprov.TypeName) & vbTab & CStr(secprov.Name) & vbTab & CSTr(secprov.SynchronizedExpansion)\\n    next\\n\\n    Echo \\\"Done listing\\\"\\nEnd Sub\\n\\n'==============================================================================\\n' GetAdmin\\n'\\n' Retrieves Admin object.\\n'==============================================================================\\nFunction GetAdmin()\\n    Const CESADMIN_PROGID       = \\\"CESAdmin.Admin.7.0\\\"\\n    Const SERVER_NAME           = \\\"localhost\\\"\\n    Const DEFAULT_INSTANCE_NAME = \\\"default\\\"\\n    Const IMPERSONATE           = False\\n\\n    Set GetAdmin = CreateObject(CESADMIN_PROGID)\\n    Call GetAdmin.Connect(SERVER_NAME, DEFAULT_INSTANCE_NAME)\\nEnd Function\\n\\n'==============================================================================\\nSub Echo(msg)\\n    WScript.Echo(msg)\\nEnd Sub \\n\\n Change the extension of the CES7Admin-SynchronizedExpansion.txt file to CES7Admin-SynchronizedExpansion.vbs \\n\\n Open a Command Line as an Administrator\\u00a0 Run: \\nCES7Admin-SynchronizedExpansionClaimsOnly.vbs /synch\\u00a0\\n\\n You'll see\\u00a0 something like this ( Click OK all the way) \\n \\n  \\n \\n  \\n \\n  \\n \\n  \\n \\n  \\n \\n  \\n \\n  \\n After running the script, open your config.txt file and search for <SynchronizedExpansion>true</SynchronizedExpansion> next to your Security provider that have a <TypeName>Claims</TypeName>\\u00a0 \\n \\n In example:\\u00a0 \\n \\n Before running the script:\\u00a0 \\n \\u00a0\\n \\n<Name>SharePoint-Claims</Name>\\u00a0\\n<TypeName>Claims</TypeName> \\n \\n After running the script:\\u00a0 \\n \\u00a0\\n \\n<Name>SharePoint-Claims</Name>\\u00a0\\n<SynchronizedExpansion>true</SynchronizedExpansion>\\u00a0\\n<TypeName>Claims</TypeName> \\nOnce <SynchronizedExpansion> setting is added to the config.txt file, the effect is immediate, so you can perform tests to validate if you're still experiencing the issue. \\n \\n As usual, we recommend you to first test the solution in Dev environment, before deploying it in Production. \\n \\n Note: With the\\u00a0<SynchronizedExpansion> setting enable, query time on the first query might be a little bit longer.\"], \"clickableuri\": [\"https://na61.salesforce.com/kA10d0000004MKN\"], \"sftitle\": [\"First query returns no results or less results that it should\"], \"kav_owner.id\": [\"00560000002MKBSAA4\"], \"sfisvisibleinapp\": [true], \"ka_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__ka/kA10d0000004MKNCA2\"], \"sfdcarticletype\": [\"Problem/Fix\"], \"kav_cause__c\": [\"When a new user (which is not yet known by the Security Cache) performs its first query into CES, this user won\\u2019t be able to access to the documents that are secured by wellknown entities of this user, in this case Sharepoint. This happens, because the Security Cache doesn\\u2019t have yet the required relationship into its internal structures.\\u00a0<br><br>After that first query, the Security Cache will search for that new user in the wellknown entities (Sharepoint) and thus be able to recognize that first timer user for subsequent queries.\\u00a0<br><br>Now you&#39;ll say this is happening with existing user, not specifically new users.\\u00a0<br><br>Claims are attributes given to you when authenticating to the identity provider, such as ADFS.\\u00a0<br>It is these attributes that allow you to see content. Coveo stock these attributes in the security identity. So, if ADFS changes your attributes someday, you will be like a new user from the CES point of view.\\u00a0\"], \"sfislatestversion\": [true], \"sfcausec\": [\"When a new user (which is not yet known by the Security Cache) performs its first query into CES, this user won\\u2019t be able to access to the documents that are secured by wellknown entities of this user, in this case Sharepoint. This happens, because the Security Cache doesn\\u2019t have yet the required relationship into its internal structures.\\u00a0<br><br>After that first query, the Security Cache will search for that new user in the wellknown entities (Sharepoint) and thus be able to recognize that first timer user for subsequent queries.\\u00a0<br><br>Now you&#39;ll say this is happening with existing user, not specifically new users.\\u00a0<br><br>Claims are attributes given to you when authenticating to the identity provider, such as ADFS.\\u00a0<br>It is these attributes that allow you to see content. Coveo stock these attributes in the security identity. So, if ADFS changes your attributes someday, you will be like a new user from the CES point of view.\\u00a0\"], \"contenttype\": [\"binarydata\"], \"sfurlname\": [\"2586\"], \"ka_id\": [\"kA10d0000004MKNCA2\"], \"kav_datacategoryselections.datacategoryname\": [\"Coveo_Enterprise_Search;Configuration\"], \"coveo_url\": [\"https://na61.salesforce.com/kA10d0000004MKN\"], \"kav_urlname\": [\"2586\"], \"kav_dc_expanded_product\": [\"All;All|Coveo Enterprise Search\"], \"foldingcollection\": [\"ca127a95f01f5a8f70f89e1d3d8afe7f955435286a38d0802dcdff2c024f\"], \"body\": [\"<html>   <body>     <div style=\\\"background-color: #fff;border: 2px solid #BBC5CC;border-radius: 4px;float: left;font-family: lato;margin-left: 15px;margin-right: 15px;margin-bottom: 4%;padding: 10px;width: 60%;\\\">       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Description         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> When opening Coveo search interface, the first search does not always give every results it should. If refreshing or relaunching the query, you&#39;ll get all the results.<br>This KB explains why and provide a possible solution.<br><br>Note: You may encounter this issue only if you&#39;re crawling SharePoint server that is using Claims Authentication and you have at least one of the following setup:\\n<ul><li>You integrated the Coveo .NET Search Box in your SharePoint , click <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/microsoft_sharepoint_integration.htm\\\" target=\\\"_blank\\\">here</a> for details</li><li>You&#39;ve configured a .NET Search Interface Claims SSO, click <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/Administrator/Configuring_a_NET_Search_Interface_Claims_SSO.htm\\\" target=\\\"_blank\\\">here</a> for details</li><li>You&#39;ve configured your Coveo JS UI to\\u00a0query items indexed from a SharePoint server that is using Claims Authentication, click <a href=\\\"https://developers.coveo.com/display/public/SearchREST/On-Premises+SharePoint+Claims+Authentication;jsessionid=4DC237137C6AC4316537AAEB9CC77F8C\\\" target=\\\"_blank\\\">here</a> for details</li></ul></div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Environment         </div>       </div>       <br/>       <table>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Product</td>           <td></td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Sitecore Version</td>           <td>N/A</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Connector</td>           <td>N/A</td>         </tr>         <tr>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Published</td>           <td>1505484220</td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Version</td>           <td></td>           <td style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;font-weight: 600;\\\">Build</td>           <td></td>         </tr>       </table>       <br/>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Cause         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> When a new user (which is not yet known by the Security Cache) performs its first query into CES, this user won\\u2019t be able to access to the documents that are secured by wellknown entities of this user, in this case Sharepoint. This happens, because the Security Cache doesn\\u2019t have yet the required relationship into its internal structures.\\u00a0<br><br>After that first query, the Security Cache will search for that new user in the wellknown entities (Sharepoint) and thus be able to recognize that first timer user for subsequent queries.\\u00a0<br><br>Now you&#39;ll say this is happening with existing user, not specifically new users.\\u00a0<br><br>Claims are attributes given to you when authenticating to the identity provider, such as ADFS.\\u00a0<br>It is these attributes that allow you to see content. Coveo stock these attributes in the security identity. So, if ADFS changes your attributes someday, you will be like a new user from the CES point of view.\\u00a0</div>       <div style=\\\"font-size: 1.5em;font-weight: 600;Padding-top: 30px;border-bottom: 1px solid #BBC5CC;\\\">         <div style=\\\"border-left: 1px solid #BBC5CC;border-top: 1px solid #BBC5CC;color: #296896;padding: 10px;width: 15%;\\\">           Resolution         </div>       </div>       <div style=\\\"margin-left: 35px;margin-top: 10px;font-size: 1em;\\\"> We have a way to ensure that first time users of CES will be identified by the Security Cache to do, you will need to run a vbs script on your CES master server(s). This script allows you to enable a CES parameter called SynchronizedExpansion. That parameter will force the Security Cache to update itself whenever it&#39;s encountering new users. Therefore, first time users will be automatically added to the security cache at their first query. This turn will ensure that user get results on their first search.\\u00a0<br><br>So to enable the SynchronizedExpansion feature:\\u00a0\\n<ul><li>Copy the script below into a .txt file and name it\\u00a0CES7Admin-SynchronizedExpansion.txt</li></ul>\\n\\u00a0\\n\\n<pre class=\\\"ckeditor_codeblock\\\">\\nOption Explicit\\nOn Error Goto 0\\n\\n&#39;*******************************************************************************\\n&#39; SCRIPT: CES7Admin-SynchronizedExpansion.vbs\\n&#39; USAGE: \\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /synch\\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /list\\n&#39;*******************************************************************************\\n\\nCall Main()\\n&#39;==============================================================================\\nSub Main()\\n    Echo &quot;Start Script&quot;\\n    Dim admin: Set admin = GetAdmin()\\n    Dim name, NameValue\\n    for each name in WScript.Arguments.Named\\n        Select Case LCase(name)\\n            Case &quot;list&quot;\\n                List\\n            Case &quot;synch&quot;\\n                ResetIfInvalid\\n            Case Else\\n                Echo &quot;Invalid argument &quot; &amp; name\\n                WScript.Quit 1\\n        End Select\\n    next\\n\\n    admin.Disconnect\\n    Set admin = Nothing\\n\\n    if WScript.Arguments.Named.Count = 0 Then\\n        Echo &quot;No arguments&quot;\\n        WScript.Quit 1\\n    End iF\\n\\n    Echo &quot;End Script&quot;\\nEnd Sub\\n\\n\\n&#39;==============================================================================\\nSub ResetIfInvalid()\\n    Echo &quot;Adding parameter SynchronizedExpansion if needed&quot;\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n    Dim secprovName\\n    Dim claimsprov\\n    Dim list: Set list = CreateObject(&quot;Scripting.Dictionary&quot;)\\n\\n    &#39;list all claims security providers that are missing the SynchronizedExpansion param\\n    for each secprov in admin.SecurityProviders\\n        if secprov.TypeName = &quot;Claims&quot; And secprov.SynchronizedExpansion = false then\\n            list.Add secprov.Name, &quot;&quot;\\n        end if\\n    next\\n\\n    if list.Count = 0 then\\n        Echo &quot;All CLAIMS security providers are SynchronizedExpansion enabled&quot;\\n    else\\n        Echo &quot;Found &quot; &amp; CStr(list.Count) &amp; &quot; CLAIMS security provider(s) that is(are) not SynchronizedExpansion enabled. Adding the parameter...&quot;\\n        for each secprovName in list\\n            Set claimsprov = admin.SecurityProviders.ItemByName(secprovName)\\n            claimsprov.SynchronizedExpansion = true\\n        next\\n        admin.Commit\\n    end if\\n\\n    Echo &quot;Done&quot;\\nEnd Sub\\n\\n&#39;==============================================================================\\nSub List()\\n    Echo &quot;Listing...&quot;\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n\\n    Echo &quot;ID&quot; &amp; vbTab &amp; &quot;TypeName&quot; &amp; vbTab &amp; &quot;Name&quot; &amp; vbtab &amp; &quot;IsSynchronizedExpansion&quot;\\n    for each secprov in admin.SecurityProviders\\n        Echo CStr(secprov.ID) &amp; vbTab &amp; CStr(secprov.TypeName) &amp; vbTab &amp; CStr(secprov.Name) &amp; vbTab &amp; CSTr(secprov.SynchronizedExpansion)\\n    next\\n\\n    Echo &quot;Done listing&quot;\\nEnd Sub\\n\\n&#39;==============================================================================\\n&#39; GetAdmin\\n&#39;\\n&#39; Retrieves Admin object.\\n&#39;==============================================================================\\nFunction GetAdmin()\\n    Const CESADMIN_PROGID       = &quot;CESAdmin.Admin.7.0&quot;\\n    Const SERVER_NAME           = &quot;localhost&quot;\\n    Const DEFAULT_INSTANCE_NAME = &quot;default&quot;\\n    Const IMPERSONATE           = False\\n\\n    Set GetAdmin = CreateObject(CESADMIN_PROGID)\\n    Call GetAdmin.Connect(SERVER_NAME, DEFAULT_INSTANCE_NAME)\\nEnd Function\\n\\n&#39;==============================================================================\\nSub Echo(msg)\\n    WScript.Echo(msg)\\nEnd Sub</pre>\\n\\n<ul><li>Change the extension of the CES7Admin-SynchronizedExpansion.txt file to CES7Admin-SynchronizedExpansion.vbs</li></ul>\\n\\n<ul><li>Open a Command Line as an Administrator\\u00a0</li><li>Run:</li></ul>\\nCES7Admin-SynchronizedExpansionClaimsOnly.vbs /synch\\u00a0\\n\\n<ul><li>You&#39;ll see\\u00a0 something like this ( Click OK all the way)</li></ul>\\n<br><img alt=\\\"User-added image\\\" height=\\\"257\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001y0C\\\" width=\\\"500\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzO\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzT\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzY\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzd\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzi\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzn\\\"></img>\\n<ul><li>After running the script, open your config.txt file and search for &lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt; next to your Security provider that have a &lt;TypeName&gt;Claims&lt;/TypeName&gt;\\u00a0</li></ul>\\n<br>In example:\\u00a0<br><br>Before running the script:\\u00a0<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt;\\u00a0\\n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\\n<br>After running the script:\\u00a0<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt;\\u00a0\\n&lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt;\\u00a0\\n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\\nOnce &lt;SynchronizedExpansion&gt; setting is added to the config.txt file, the effect is immediate, so you can perform tests to validate if you&#39;re still experiencing the issue.<br><br>As usual, we recommend you to first test the solution in Dev environment, before deploying it in Production.<br><br><b><span style=\\\"color: #FF0000;\\\">Note: With the\\u00a0&lt;SynchronizedExpansion&gt; setting enable, query time on the first query might be a little bit longer.</span></b></div>     </div>   </body> </html>\"], \"sfpublishstatus\": [\"Online\"], \"sfcreatedbyid\": [\"00560000002MKBSAA4\"], \"kav_description__c__html_stripped\": [\"When opening Coveo search interface, the first search does not always give every results it should. If refreshing or relaunching the query, you'll get all the results. \\n This KB explains why and provide a possible solution. \\n \\n Note: You may encounter this issue only if you're crawling SharePoint server that is using Claims Authentication and you have at least one of the following setup:\\n You integrated the Coveo .NET Search Box in your SharePoint , click  here  for details You've configured a .NET Search Interface Claims SSO, click  here  for details You've configured your Coveo JS UI to\\u00a0query items indexed from a SharePoint server that is using Claims Authentication, click  here  for details\"], \"kav_islatestversion\": [true], \"kav_knowledgearticleid\": [\"kA10d0000004MKNCA2\"], \"sfknowledgearticleid\": [\"kA10d0000004MKNCA2\"], \"sfownername\": [\"Karel Mpungi\"], \"kav_datacategoryselections.attribute.type\": [\"KB_Article__DataCategorySelection;KB_Article__DataCategorySelection\"], \"detectedtitle\": [\"You integrated the Coveo .NET Search Box in your SharePoint , click\"], \"kav_createddate\": [1505483006], \"language\": [\"English\"], \"coveo_foldingchild\": [\"644c1fedc7f57ebfb5cef3aed716db290497edd17dd1ac0b637b4828e3fc\"], \"sfownerid\": [\"00560000002MKBSAA4\"], \"kav_createdby.coveo_record_size\": [2], \"kav_systemmodstamp\": [1518176788], \"objecttype\": [\"KB Article\"], \"connectortype\": [\"Salesforce2\"], \"kav_coveo_record_size\": [4], \"originaluri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US\"], \"sfisvisibleincsp\": [true], \"convertertype\": [\"TYPE_HTML\"], \"filetype\": [\"SalesforceItem\"], \"kav_owner.name\": [\"Karel Mpungi\"], \"sfcoveoversionc\": [\"Coveo Enterprise Search\"], \"sfdcexpandedarticletype\": [\"All;All|Problem/Fix\"], \"objecttypelabelplural\": [\"KB Articles\"], \"sfcurrencyisocode\": [\"USD\"], \"sfisdeleted\": [false], \"extractedsize\": [12828], \"size\": [18253], \"kav_publishstatus\": [\"Online\"], \"kav_connector__c\": [\"N/A\"], \"generateexcerpt\": [true], \"sfdescriptionc\": [\"When opening Coveo search interface, the first search does not always give every results it should. If refreshing or relaunching the query, you&#39;ll get all the results.<br>This KB explains why and provide a possible solution.<br><br>Note: You may encounter this issue only if you&#39;re crawling SharePoint server that is using Claims Authentication and you have at least one of the following setup:\\n<ul><li>You integrated the Coveo .NET Search Box in your SharePoint , click <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/microsoft_sharepoint_integration.htm\\\" target=\\\"_blank\\\">here</a> for details</li><li>You&#39;ve configured a .NET Search Interface Claims SSO, click <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/Administrator/Configuring_a_NET_Search_Interface_Claims_SSO.htm\\\" target=\\\"_blank\\\">here</a> for details</li><li>You&#39;ve configured your Coveo JS UI to\\u00a0query items indexed from a SharePoint server that is using Claims Authentication, click <a href=\\\"https://developers.coveo.com/display/public/SearchREST/On-Premises+SharePoint+Claims+Authentication;jsessionid=4DC237137C6AC4316537AAEB9CC77F8C\\\" target=\\\"_blank\\\">here</a> for details</li></ul>\"], \"sfarticletype\": [\"KB_Article__kav\"], \"kav_articletype\": [\"KB_Article__kav\"], \"kav_lastmodifieddate\": [1505484220], \"documenttype\": [\"article\"], \"sfkbarticlekavid\": [\"ka10d0000004SOjAAM\"], \"kav_currencyisocode\": [\"USD\"], \"foldingparent\": [\"644c1fedc7f57ebfb5cef3aed716db290497edd17dd1ac0b637b4828e3fc\"], \"mappingtype\": [\"KB_Article\"], \"kav_isvisibleinpkb\": [true], \"kav_sourceid\": [\"5003200000vLlMnAAK\"], \"sfkbversionnumber\": [2], \"kav_isvisibleinapp\": [true], \"kav_resolution__c\": [\"We have a way to ensure that first time users of CES will be identified by the Security Cache to do, you will need to run a vbs script on your CES master server(s). This script allows you to enable a CES parameter called SynchronizedExpansion. That parameter will force the Security Cache to update itself whenever it&#39;s encountering new users. Therefore, first time users will be automatically added to the security cache at their first query. This turn will ensure that user get results on their first search.\\u00a0<br><br>So to enable the SynchronizedExpansion feature:\\u00a0\\n<ul><li>Copy the script below into a .txt file and name it\\u00a0CES7Admin-SynchronizedExpansion.txt</li></ul>\\n\\u00a0\\n\\n<pre class=\\\"ckeditor_codeblock\\\">\\nOption Explicit\\nOn Error Goto 0\\n\\n&#39;*******************************************************************************\\n&#39; SCRIPT: CES7Admin-SynchronizedExpansion.vbs\\n&#39; USAGE: \\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /synch\\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /list\\n&#39;*******************************************************************************\\n\\nCall Main()\\n&#39;==============================================================================\\nSub Main()\\n    Echo &quot;Start Script&quot;\\n    Dim admin: Set admin = GetAdmin()\\n    Dim name, NameValue\\n    for each name in WScript.Arguments.Named\\n        Select Case LCase(name)\\n            Case &quot;list&quot;\\n                List\\n            Case &quot;synch&quot;\\n                ResetIfInvalid\\n            Case Else\\n                Echo &quot;Invalid argument &quot; &amp; name\\n                WScript.Quit 1\\n        End Select\\n    next\\n\\n    admin.Disconnect\\n    Set admin = Nothing\\n\\n    if WScript.Arguments.Named.Count = 0 Then\\n        Echo &quot;No arguments&quot;\\n        WScript.Quit 1\\n    End iF\\n\\n    Echo &quot;End Script&quot;\\nEnd Sub\\n\\n\\n&#39;==============================================================================\\nSub ResetIfInvalid()\\n    Echo &quot;Adding parameter SynchronizedExpansion if needed&quot;\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n    Dim secprovName\\n    Dim claimsprov\\n    Dim list: Set list = CreateObject(&quot;Scripting.Dictionary&quot;)\\n\\n    &#39;list all claims security providers that are missing the SynchronizedExpansion param\\n    for each secprov in admin.SecurityProviders\\n        if secprov.TypeName = &quot;Claims&quot; And secprov.SynchronizedExpansion = false then\\n            list.Add secprov.Name, &quot;&quot;\\n        end if\\n    next\\n\\n    if list.Count = 0 then\\n        Echo &quot;All CLAIMS security providers are SynchronizedExpansion enabled&quot;\\n    else\\n        Echo &quot;Found &quot; &amp; CStr(list.Count) &amp; &quot; CLAIMS security provider(s) that is(are) not SynchronizedExpansion enabled. Adding the parameter...&quot;\\n        for each secprovName in list\\n            Set claimsprov = admin.SecurityProviders.ItemByName(secprovName)\\n            claimsprov.SynchronizedExpansion = true\\n        next\\n        admin.Commit\\n    end if\\n\\n    Echo &quot;Done&quot;\\nEnd Sub\\n\\n&#39;==============================================================================\\nSub List()\\n    Echo &quot;Listing...&quot;\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n\\n    Echo &quot;ID&quot; &amp; vbTab &amp; &quot;TypeName&quot; &amp; vbTab &amp; &quot;Name&quot; &amp; vbtab &amp; &quot;IsSynchronizedExpansion&quot;\\n    for each secprov in admin.SecurityProviders\\n        Echo CStr(secprov.ID) &amp; vbTab &amp; CStr(secprov.TypeName) &amp; vbTab &amp; CStr(secprov.Name) &amp; vbTab &amp; CSTr(secprov.SynchronizedExpansion)\\n    next\\n\\n    Echo &quot;Done listing&quot;\\nEnd Sub\\n\\n&#39;==============================================================================\\n&#39; GetAdmin\\n&#39;\\n&#39; Retrieves Admin object.\\n&#39;==============================================================================\\nFunction GetAdmin()\\n    Const CESADMIN_PROGID       = &quot;CESAdmin.Admin.7.0&quot;\\n    Const SERVER_NAME           = &quot;localhost&quot;\\n    Const DEFAULT_INSTANCE_NAME = &quot;default&quot;\\n    Const IMPERSONATE           = False\\n\\n    Set GetAdmin = CreateObject(CESADMIN_PROGID)\\n    Call GetAdmin.Connect(SERVER_NAME, DEFAULT_INSTANCE_NAME)\\nEnd Function\\n\\n&#39;==============================================================================\\nSub Echo(msg)\\n    WScript.Echo(msg)\\nEnd Sub</pre>\\n\\n<ul><li>Change the extension of the CES7Admin-SynchronizedExpansion.txt file to CES7Admin-SynchronizedExpansion.vbs</li></ul>\\n\\n<ul><li>Open a Command Line as an Administrator\\u00a0</li><li>Run:</li></ul>\\nCES7Admin-SynchronizedExpansionClaimsOnly.vbs /synch\\u00a0\\n\\n<ul><li>You&#39;ll see\\u00a0 something like this ( Click OK all the way)</li></ul>\\n<br><img alt=\\\"User-added image\\\" height=\\\"257\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001y0C\\\" width=\\\"500\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzO\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzT\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzY\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzd\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzi\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzn\\\"></img>\\n<ul><li>After running the script, open your config.txt file and search for &lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt; next to your Security provider that have a &lt;TypeName&gt;Claims&lt;/TypeName&gt;\\u00a0</li></ul>\\n<br>In example:\\u00a0<br><br>Before running the script:\\u00a0<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt;\\u00a0\\n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\\n<br>After running the script:\\u00a0<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt;\\u00a0\\n&lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt;\\u00a0\\n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\\nOnce &lt;SynchronizedExpansion&gt; setting is added to the config.txt file, the effect is immediate, so you can perform tests to validate if you&#39;re still experiencing the issue.<br><br>As usual, we recommend you to first test the solution in Dev environment, before deploying it in Production.<br><br><b><span style=\\\"color: #FF0000;\\\">Note: With the\\u00a0&lt;SynchronizedExpansion&gt; setting enable, query time on the first query might be a little bit longer.</span></b>\"], \"coveo_objecttype\": [\"KB_Article\"], \"printableuri\": [\"http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US\"], \"kav_datacategoryselections.attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o0d000000m2LeAAI;/services/data/v34.0/sobjects/KB_Article__DataCategorySelection/02o0d000000m2LfAAI\"], \"kav_id\": [\"ka10d0000004SOjAAM\"], \"sfresolutionc\": [\"We have a way to ensure that first time users of CES will be identified by the Security Cache to do, you will need to run a vbs script on your CES master server(s). This script allows you to enable a CES parameter called SynchronizedExpansion. That parameter will force the Security Cache to update itself whenever it&#39;s encountering new users. Therefore, first time users will be automatically added to the security cache at their first query. This turn will ensure that user get results on their first search.\\u00a0<br><br>So to enable the SynchronizedExpansion feature:\\u00a0\\n<ul><li>Copy the script below into a .txt file and name it\\u00a0CES7Admin-SynchronizedExpansion.txt</li></ul>\\n\\u00a0\\n\\n<pre class=\\\"ckeditor_codeblock\\\">\\nOption Explicit\\nOn Error Goto 0\\n\\n&#39;*******************************************************************************\\n&#39; SCRIPT: CES7Admin-SynchronizedExpansion.vbs\\n&#39; USAGE: \\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /synch\\n&#39;   cscript //NOLOGO &quot;CES7Admin-SynchronizedExpansion.vbs&quot; /list\\n&#39;*******************************************************************************\\n\\nCall Main()\\n&#39;==============================================================================\\nSub Main()\\n    Echo &quot;Start Script&quot;\\n    Dim admin: Set admin = GetAdmin()\\n    Dim name, NameValue\\n    for each name in WScript.Arguments.Named\\n        Select Case LCase(name)\\n            Case &quot;list&quot;\\n                List\\n            Case &quot;synch&quot;\\n                ResetIfInvalid\\n            Case Else\\n                Echo &quot;Invalid argument &quot; &amp; name\\n                WScript.Quit 1\\n        End Select\\n    next\\n\\n    admin.Disconnect\\n    Set admin = Nothing\\n\\n    if WScript.Arguments.Named.Count = 0 Then\\n        Echo &quot;No arguments&quot;\\n        WScript.Quit 1\\n    End iF\\n\\n    Echo &quot;End Script&quot;\\nEnd Sub\\n\\n\\n&#39;==============================================================================\\nSub ResetIfInvalid()\\n    Echo &quot;Adding parameter SynchronizedExpansion if needed&quot;\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n    Dim secprovName\\n    Dim claimsprov\\n    Dim list: Set list = CreateObject(&quot;Scripting.Dictionary&quot;)\\n\\n    &#39;list all claims security providers that are missing the SynchronizedExpansion param\\n    for each secprov in admin.SecurityProviders\\n        if secprov.TypeName = &quot;Claims&quot; And secprov.SynchronizedExpansion = false then\\n            list.Add secprov.Name, &quot;&quot;\\n        end if\\n    next\\n\\n    if list.Count = 0 then\\n        Echo &quot;All CLAIMS security providers are SynchronizedExpansion enabled&quot;\\n    else\\n        Echo &quot;Found &quot; &amp; CStr(list.Count) &amp; &quot; CLAIMS security provider(s) that is(are) not SynchronizedExpansion enabled. Adding the parameter...&quot;\\n        for each secprovName in list\\n            Set claimsprov = admin.SecurityProviders.ItemByName(secprovName)\\n            claimsprov.SynchronizedExpansion = true\\n        next\\n        admin.Commit\\n    end if\\n\\n    Echo &quot;Done&quot;\\nEnd Sub\\n\\n&#39;==============================================================================\\nSub List()\\n    Echo &quot;Listing...&quot;\\n    \\n    Dim admin: Set admin = GetAdmin()\\n    Dim secprov\\n\\n    Echo &quot;ID&quot; &amp; vbTab &amp; &quot;TypeName&quot; &amp; vbTab &amp; &quot;Name&quot; &amp; vbtab &amp; &quot;IsSynchronizedExpansion&quot;\\n    for each secprov in admin.SecurityProviders\\n        Echo CStr(secprov.ID) &amp; vbTab &amp; CStr(secprov.TypeName) &amp; vbTab &amp; CStr(secprov.Name) &amp; vbTab &amp; CSTr(secprov.SynchronizedExpansion)\\n    next\\n\\n    Echo &quot;Done listing&quot;\\nEnd Sub\\n\\n&#39;==============================================================================\\n&#39; GetAdmin\\n&#39;\\n&#39; Retrieves Admin object.\\n&#39;==============================================================================\\nFunction GetAdmin()\\n    Const CESADMIN_PROGID       = &quot;CESAdmin.Admin.7.0&quot;\\n    Const SERVER_NAME           = &quot;localhost&quot;\\n    Const DEFAULT_INSTANCE_NAME = &quot;default&quot;\\n    Const IMPERSONATE           = False\\n\\n    Set GetAdmin = CreateObject(CESADMIN_PROGID)\\n    Call GetAdmin.Connect(SERVER_NAME, DEFAULT_INSTANCE_NAME)\\nEnd Function\\n\\n&#39;==============================================================================\\nSub Echo(msg)\\n    WScript.Echo(msg)\\nEnd Sub</pre>\\n\\n<ul><li>Change the extension of the CES7Admin-SynchronizedExpansion.txt file to CES7Admin-SynchronizedExpansion.vbs</li></ul>\\n\\n<ul><li>Open a Command Line as an Administrator\\u00a0</li><li>Run:</li></ul>\\nCES7Admin-SynchronizedExpansionClaimsOnly.vbs /synch\\u00a0\\n\\n<ul><li>You&#39;ll see\\u00a0 something like this ( Click OK all the way)</li></ul>\\n<br><img alt=\\\"User-added image\\\" height=\\\"257\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001y0C\\\" width=\\\"500\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzO\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzT\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzY\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzd\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzi\\\"></img><br><br><img alt=\\\"User-added image\\\" src=\\\"https://c.na61.content.force.com/servlet/rtaImage?eid=ka10d0000004SOj&amp;feoid=00N32000002zy1J&amp;refid=0EM0d0000001xzn\\\"></img>\\n<ul><li>After running the script, open your config.txt file and search for &lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt; next to your Security provider that have a &lt;TypeName&gt;Claims&lt;/TypeName&gt;\\u00a0</li></ul>\\n<br>In example:\\u00a0<br><br>Before running the script:\\u00a0<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt;\\u00a0\\n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\\n<br>After running the script:\\u00a0<br>\\u00a0\\n<pre class=\\\"ckeditor_codeblock\\\">\\n&lt;Name&gt;SharePoint-Claims&lt;/Name&gt;\\u00a0\\n&lt;SynchronizedExpansion&gt;true&lt;/SynchronizedExpansion&gt;\\u00a0\\n&lt;TypeName&gt;Claims&lt;/TypeName&gt;</pre>\\nOnce &lt;SynchronizedExpansion&gt; setting is added to the config.txt file, the effect is immediate, so you can perform tests to validate if you&#39;re still experiencing the issue.<br><br>As usual, we recommend you to first test the solution in Dev environment, before deploying it in Production.<br><br><b><span style=\\\"color: #FF0000;\\\">Note: With the\\u00a0&lt;SynchronizedExpansion&gt; setting enable, query time on the first query might be a little bit longer.</span></b>\"], \"foldingchild\": [\"644c1fedc7f57ebfb5cef3aed716db290497edd17dd1ac0b637b4828e3fc\"], \"sfcreateddate\": [1505483006], \"kav_sitecore_version__c\": [\"N/A\"], \"kav_owner.coveo_record_size\": [2], \"kav_coveo_effective_modstamp\": [1518176788], \"kav_summary__html_stripped\": [\"\"], \"kav_dc_article_type\": [\"Problem/Fix\"], \"sfconnectorc\": [\"N/A\"], \"kav_dc_product\": [\"Coveo Enterprise Search\"], \"ka_coveo_record_size\": [2], \"kav_dc_expanded_article_type\": [\"All;All|Problem/Fix\"], \"kav_datacategoryselections.coveo_record_size\": [\"2;2\"], \"concepts\": [\"queries ; Claims Authentication ; SharePoint server ; Coveo ; security cache ; new users ; wellknown entities ; SynchronizedExpansion ; Dev environment ; internal structures ; required relationship ; items indexed ; Production ; refreshing\"], \"sfkbid\": [\"kA10d0000004MKNCA2\"], \"kav_firstpublisheddate\": [1505419680], \"coveo_organization_id\": [\"00D3000000007r2\"], \"coveo_foldingcollection\": [\"ca127a95f01f5a8f70f89e1d3d8afe7f955435286a38d0802dcdff2c024f\"], \"sffirstpublisheddate\": [1505419680], \"sflastmodifieddate\": [1505484220], \"kav_coveo_version__c\": [\"Coveo Enterprise Search\"], \"kav_vendor_version__c__html_stripped\": [\"\"], \"detectedlanguage\": [1], \"kav_isvisibleinprm\": [true], \"kav_owner.attribute.type\": [\"Name\"], \"kav_lastmodifiedby.attribute.url\": [\"/services/data/v34.0/sobjects/User/00560000002MKBSAA4\"], \"sitename\": [\"Community\"], \"kav_createdby.name\": [\"Karel Mpungi\"], \"sfarticlenumber\": [\"000002586\"], \"kav_lastmodifiedby.coveo_record_size\": [2], \"sfisvisibleinpkb\": [true], \"kav_datacategoryselections.id\": [\"02o0d000000m2LeAAI;02o0d000000m2LfAAI\"], \"kav_description__c\": [\"When opening Coveo search interface, the first search does not always give every results it should. If refreshing or relaunching the query, you&#39;ll get all the results.<br>This KB explains why and provide a possible solution.<br><br>Note: You may encounter this issue only if you&#39;re crawling SharePoint server that is using Claims Authentication and you have at least one of the following setup:\\n<ul><li>You integrated the Coveo .NET Search Box in your SharePoint , click <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/microsoft_sharepoint_integration.htm\\\" target=\\\"_blank\\\">here</a> for details</li><li>You&#39;ve configured a .NET Search Interface Claims SSO, click <a href=\\\"https://onlinehelp.coveo.com/en/ces/7.0/Administrator/Configuring_a_NET_Search_Interface_Claims_SSO.htm\\\" target=\\\"_blank\\\">here</a> for details</li><li>You&#39;ve configured your Coveo JS UI to\\u00a0query items indexed from a SharePoint server that is using Claims Authentication, click <a href=\\\"https://developers.coveo.com/display/public/SearchREST/On-Premises+SharePoint+Claims+Authentication;jsessionid=4DC237137C6AC4316537AAEB9CC77F8C\\\" target=\\\"_blank\\\">here</a> for details</li></ul>\"], \"kav_attribute.url\": [\"/services/data/v34.0/sobjects/KB_Article__kav/ka10d0000004SOjAAM\"], \"kav_articlenumber__stripped\": [\"2586\"], \"sfversionnumber\": [2], \"kav_attribute.type\": [\"KB_Article__kav\"], \"kav_validationstatus\": [\"Reviewed\"], \"coveo_foldingparent\": [\"644c1fedc7f57ebfb5cef3aed716db290497edd17dd1ac0b637b4828e3fc\"], \"collection\": [\"default\"], \"sfsourceid\": [\"5003200000vLlMnAAK\"], \"date\": [1518176788], \"kav_lastmodifiedby.id\": [\"00560000002MKBSAA4\"], \"kav_datacategoryselections.datacategorygroupname\": [\"Product;Article_Type\"], \"conversionstate\": [0], \"sfvalidationstatus\": [\"Reviewed\"], \"kav_isdeleted\": [false], \"sflastmodifiedbyid\": [\"00560000002MKBSAA4\"], \"kav_lastmodifiedby.name\": [\"Karel Mpungi\"], \"kav_articlenumber\": [\"000002586\"], \"permanentid\": [\"c7ae153aac906f6a38718c0b7a8b809f7f3f4f46d2d311373cbab777f586\"]}",
      "sflastmodifiedbyid" : "00560000002MKBSAA4",
      "syssfownerid" : "00560000002MKBSAA4",
      "sfsitecoreversionc" : "N/A",
      "sourcetype" : "Salesforce",
      "sysconnectortype" : "Salesforce2",
      "sftitle" : "First query returns no results or less results that it should",
      "rowid" : 5493271,
      "syssfcreatedbyid" : "00560000002MKBSAA4",
      "sfdescriptionc" : "When opening Coveo search interface, the first search does not always give every results it should. If refreshing or relaunching the query, you&#39;ll get all the results.<br>This KB explains why and provide a possible solution.<br><br>Note: You may encounter this issue only if you&#39;re crawling SharePoint server that is using Claims Authentication and you have at least one of the following setup:\n<ul><li>You integrated the Coveo .NET Search Box in your SharePoint , click <a href=\"https://onlinehelp.coveo.com/en/ces/7.0/administrator/microsoft_sharepoint_integration.htm\" target=\"_blank\">here</a> for details</li><li>You&#39;ve configured a .NET Search Interface Claims SSO, click <a href=\"https://onlinehelp.coveo.com/en/ces/7.0/Administrator/Configuring_a_NET_Search_Interface_Claims_SSO.htm\" target=\"_blank\">here</a> for details</li><li>You&#39;ve configured your Coveo JS UI to query items indexed from a SharePoint server that is using Claims Authentication, click <a href=\"https://developers.coveo.com/display/public/SearchREST/On-Premises+SharePoint+Claims+Authentication;jsessionid=4DC237137C6AC4316537AAEB9CC77F8C\" target=\"_blank\">here</a> for details</li></ul>",
      "size" : 18253,
      "sfislatestversion" : "true",
      "sysdocumenttype" : "article",
      "sfcreateddate" : 1505483006000,
      "sfsourceid" : "5003200000vLlMnAAK",
      "clickableuri" : "https://na61.salesforce.com/kA10d0000004MKN",
      "syssource" : "Salesforce Public Items",
      "sfownerid" : "00560000002MKBSAA4",
      "orderingid" : 212384990660372076,
      "sfpublishstatus" : "Online",
      "syssize" : 18253,
      "sysdate" : 1518176788000,
      "sflanguage" : "en_US",
      "sysparents" : "<?xml version=\"1.0\" encoding=\"utf-16\"?><parents><parent name=\"Organization\" uri=\"https://na61.salesforce.com/home/home.jsp\" /><parent name=\"KB_Article__ka\" uri=\"http://www.salesforce.com/org:organization/articletype:KB_Article\" /><parent name=\"First query returns no results or less results that it should\" uri=\"https://na61.salesforce.com/kA10d0000004MKN\" /></parents>",
      "sfdcexpandedarticletype" : "All;All|Problem/Fix",
      "sfcurrencyisocode" : "USD",
      "sfkbid" : "kA10d0000004MKNCA2",
      "sfcausec" : "When a new user (which is not yet known by the Security Cache) performs its first query into CES, this user wont be able to access to the documents that are secured by wellknown entities of this user, in this case Sharepoint. This happens, because the Security Cache doesnt have yet the required relationship into its internal structures. <br><br>After that first query, the Security Cache will search for that new user in the wellknown entities (Sharepoint) and thus be able to recognize that first timer user for subsequent queries. <br><br>Now you&#39;ll say this is happening with existing user, not specifically new users. <br><br>Claims are attributes given to you when authenticating to the identity provider, such as ADFS. <br>It is these attributes that allow you to see content. Coveo stock these attributes in the security identity. So, if ADFS changes your attributes someday, you will be like a new user from the CES point of view. ",
      "sfdcexpandedproduct" : "All;All|Coveo Enterprise Search",
      "syssfcreateddate" : 1505483006000,
      "sflastmodifieddate" : 1505484220000,
      "sfisvisibleinpkb" : "true",
      "source" : "Salesforce Public Items",
      "sfisdeleted" : "false",
      "sfisvisibleincsp" : "true",
      "sfvalidationstatus" : "Reviewed",
      "sflastmodifiedbyname" : "Karel Mpungi",
      "collection" : "default",
      "sfdcproduct" : [ "Coveo Enterprise Search" ],
      "syssourcetype" : "Salesforce",
      "sfarticletype" : "KB_Article__kav",
      "indexeddate" : 1518187596000,
      "connectortype" : "Salesforce2",
      "filetype" : "SalesforceItem",
      "sfcreatedbyname" : "Karel Mpungi",
      "sysclickableuri" : "https://na61.salesforce.com/kA10d0000004MKN",
      "sysfiletype" : "SalesforceItem",
      "language" : [ "English" ],
      "sffirstpublisheddate" : 1505419680000,
      "sfownername" : "Karel Mpungi",
      "sitename" : "Community",
      "sysrowid" : 5493271,
      "uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
      "syscollection" : "default"
    },
    "Title" : "First query returns no results or less results that it should",
    "Uri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
    "PrintableUri" : "http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
    "ClickUri" : "https://na61.salesforce.com/kA10d0000004MKN",
    "UniqueId" : "42.13819$http://www.salesforce.com/org:organization/articletype:KB_Article/article:kA10d0000004MKNCA2/language:en_US",
    "Excerpt" : "When opening Coveo search interface, the first search does not always give every results it should. ... If refreshing or relaunching the query, you'll get all the results. ... This KB explains why ...",
    "FirstSentences" : null
  }